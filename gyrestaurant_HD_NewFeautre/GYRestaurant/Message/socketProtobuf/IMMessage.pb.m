// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "IMMessage.pb.h"
// @@protoc_insertion_point(imports)

@implementation ImmessageRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ImmessageRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ImbaseDefineRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface Message ()
@property UInt32 type;
@property (strong) ChatMsg* chatmsg;
@end

@implementation Message

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasChatmsg {
  return !!hasChatmsg_;
}
- (void) setHasChatmsg:(BOOL) _value_ {
  hasChatmsg_ = !!_value_;
}
@synthesize chatmsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.type = 0;
    self.chatmsg = [ChatMsg defaultInstance];
  }
  return self;
}
static Message* defaultMessageInstance = nil;
+ (void) initialize {
  if (self == [Message class]) {
    defaultMessageInstance = [[Message alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultMessageInstance;
}
- (instancetype) defaultInstance {
  return defaultMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (self.hasChatmsg) {
    if (!self.chatmsg.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeUInt32:1 value:self.type];
  }
  if (self.hasChatmsg) {
    [output writeMessage:2 value:self.chatmsg];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeUInt32Size(1, self.type);
  }
  if (self.hasChatmsg) {
    size_ += computeMessageSize(2, self.chatmsg);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Message*) parseFromData:(NSData*) data {
  return (Message*)[[[Message builder] mergeFromData:data] build];
}
+ (Message*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Message*)[[[Message builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Message*) parseFromInputStream:(NSInputStream*) input {
  return (Message*)[[[Message builder] mergeFromInputStream:input] build];
}
+ (Message*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Message*)[[[Message builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Message*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Message*)[[[Message builder] mergeFromCodedInputStream:input] build];
}
+ (Message*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Message*)[[[Message builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (MessageBuilder*) builder {
  return [[MessageBuilder alloc] init];
}
+ (MessageBuilder*) builderWithPrototype:(Message*) prototype {
  return [[Message builder] mergeFrom:prototype];
}
- (MessageBuilder*) builder {
  return [Message builder];
}
- (MessageBuilder*) toBuilder {
  return [Message builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasChatmsg) {
    [output appendFormat:@"%@%@ {\n", indent, @"chatmsg"];
    [self.chatmsg writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  if (self.hasChatmsg) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.chatmsg storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"chatmsg"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Message class]]) {
    return NO;
  }
  Message *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasChatmsg == otherMessage.hasChatmsg &&
      (!self.hasChatmsg || [self.chatmsg isEqual:otherMessage.chatmsg]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  if (self.hasChatmsg) {
    hashCode = hashCode * 31 + [self.chatmsg hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface MessageBuilder()
@property (strong) Message* resultMessage;
@end

@implementation MessageBuilder
@synthesize resultMessage;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultMessage = [[Message alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultMessage;
}
- (MessageBuilder*) clear {
  self.resultMessage = [[Message alloc] init];
  return self;
}
- (MessageBuilder*) clone {
  return [Message builderWithPrototype:resultMessage];
}
- (Message*) defaultInstance {
  return [Message defaultInstance];
}
- (Message*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Message*) buildPartial {
  Message* returnMe = resultMessage;
  self.resultMessage = nil;
  return returnMe;
}
- (MessageBuilder*) mergeFrom:(Message*) other {
  if (other == [Message defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasChatmsg) {
    [self mergeChatmsg:other.chatmsg];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (MessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (MessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readUInt32]];
        break;
      }
      case 18: {
        ChatMsgBuilder* subBuilder = [ChatMsg builder];
        if (self.hasChatmsg) {
          [subBuilder mergeFrom:self.chatmsg];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setChatmsg:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return resultMessage.hasType;
}
- (UInt32) type {
  return resultMessage.type;
}
- (MessageBuilder*) setType:(UInt32) value {
  resultMessage.hasType = YES;
  resultMessage.type = value;
  return self;
}
- (MessageBuilder*) clearType {
  resultMessage.hasType = NO;
  resultMessage.type = 0;
  return self;
}
- (BOOL) hasChatmsg {
  return resultMessage.hasChatmsg;
}
- (ChatMsg*) chatmsg {
  return resultMessage.chatmsg;
}
- (MessageBuilder*) setChatmsg:(ChatMsg*) value {
  resultMessage.hasChatmsg = YES;
  resultMessage.chatmsg = value;
  return self;
}
- (MessageBuilder*) setChatmsgBuilder:(ChatMsgBuilder*) builderForValue {
  return [self setChatmsg:[builderForValue build]];
}
- (MessageBuilder*) mergeChatmsg:(ChatMsg*) value {
  if (resultMessage.hasChatmsg &&
      resultMessage.chatmsg != [ChatMsg defaultInstance]) {
    resultMessage.chatmsg =
      [[[ChatMsg builderWithPrototype:resultMessage.chatmsg] mergeFrom:value] buildPartial];
  } else {
    resultMessage.chatmsg = value;
  }
  resultMessage.hasChatmsg = YES;
  return self;
}
- (MessageBuilder*) clearChatmsg {
  resultMessage.hasChatmsg = NO;
  resultMessage.chatmsg = [ChatMsg defaultInstance];
  return self;
}
@end

@interface SysMessage ()
@property UInt32 type;
@property (strong) AddBuddy* addbuddy;
@property (strong) BuddyVerify* buddyVerify;
@end

@implementation SysMessage

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasAddbuddy {
  return !!hasAddbuddy_;
}
- (void) setHasAddbuddy:(BOOL) _value_ {
  hasAddbuddy_ = !!_value_;
}
@synthesize addbuddy;
- (BOOL) hasBuddyVerify {
  return !!hasBuddyVerify_;
}
- (void) setHasBuddyVerify:(BOOL) _value_ {
  hasBuddyVerify_ = !!_value_;
}
@synthesize buddyVerify;
- (instancetype) init {
  if ((self = [super init])) {
    self.type = 0;
    self.addbuddy = [AddBuddy defaultInstance];
    self.buddyVerify = [BuddyVerify defaultInstance];
  }
  return self;
}
static SysMessage* defaultSysMessageInstance = nil;
+ (void) initialize {
  if (self == [SysMessage class]) {
    defaultSysMessageInstance = [[SysMessage alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSysMessageInstance;
}
- (instancetype) defaultInstance {
  return defaultSysMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (self.hasAddbuddy) {
    if (!self.addbuddy.isInitialized) {
      return NO;
    }
  }
  if (self.hasBuddyVerify) {
    if (!self.buddyVerify.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeUInt32:1 value:self.type];
  }
  if (self.hasAddbuddy) {
    [output writeMessage:2 value:self.addbuddy];
  }
  if (self.hasBuddyVerify) {
    [output writeMessage:3 value:self.buddyVerify];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeUInt32Size(1, self.type);
  }
  if (self.hasAddbuddy) {
    size_ += computeMessageSize(2, self.addbuddy);
  }
  if (self.hasBuddyVerify) {
    size_ += computeMessageSize(3, self.buddyVerify);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SysMessage*) parseFromData:(NSData*) data {
  return (SysMessage*)[[[SysMessage builder] mergeFromData:data] build];
}
+ (SysMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SysMessage*)[[[SysMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SysMessage*) parseFromInputStream:(NSInputStream*) input {
  return (SysMessage*)[[[SysMessage builder] mergeFromInputStream:input] build];
}
+ (SysMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SysMessage*)[[[SysMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SysMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SysMessage*)[[[SysMessage builder] mergeFromCodedInputStream:input] build];
}
+ (SysMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SysMessage*)[[[SysMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SysMessageBuilder*) builder {
  return [[SysMessageBuilder alloc] init];
}
+ (SysMessageBuilder*) builderWithPrototype:(SysMessage*) prototype {
  return [[SysMessage builder] mergeFrom:prototype];
}
- (SysMessageBuilder*) builder {
  return [SysMessage builder];
}
- (SysMessageBuilder*) toBuilder {
  return [SysMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasAddbuddy) {
    [output appendFormat:@"%@%@ {\n", indent, @"addbuddy"];
    [self.addbuddy writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasBuddyVerify) {
    [output appendFormat:@"%@%@ {\n", indent, @"buddyVerify"];
    [self.buddyVerify writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  if (self.hasAddbuddy) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.addbuddy storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"addbuddy"];
  }
  if (self.hasBuddyVerify) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.buddyVerify storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"buddyVerify"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SysMessage class]]) {
    return NO;
  }
  SysMessage *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasAddbuddy == otherMessage.hasAddbuddy &&
      (!self.hasAddbuddy || [self.addbuddy isEqual:otherMessage.addbuddy]) &&
      self.hasBuddyVerify == otherMessage.hasBuddyVerify &&
      (!self.hasBuddyVerify || [self.buddyVerify isEqual:otherMessage.buddyVerify]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  if (self.hasAddbuddy) {
    hashCode = hashCode * 31 + [self.addbuddy hash];
  }
  if (self.hasBuddyVerify) {
    hashCode = hashCode * 31 + [self.buddyVerify hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SysMessageBuilder()
@property (strong) SysMessage* resultSysMessage;
@end

@implementation SysMessageBuilder
@synthesize resultSysMessage;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSysMessage = [[SysMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSysMessage;
}
- (SysMessageBuilder*) clear {
  self.resultSysMessage = [[SysMessage alloc] init];
  return self;
}
- (SysMessageBuilder*) clone {
  return [SysMessage builderWithPrototype:resultSysMessage];
}
- (SysMessage*) defaultInstance {
  return [SysMessage defaultInstance];
}
- (SysMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SysMessage*) buildPartial {
  SysMessage* returnMe = resultSysMessage;
  self.resultSysMessage = nil;
  return returnMe;
}
- (SysMessageBuilder*) mergeFrom:(SysMessage*) other {
  if (other == [SysMessage defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasAddbuddy) {
    [self mergeAddbuddy:other.addbuddy];
  }
  if (other.hasBuddyVerify) {
    [self mergeBuddyVerify:other.buddyVerify];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SysMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SysMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readUInt32]];
        break;
      }
      case 18: {
        AddBuddyBuilder* subBuilder = [AddBuddy builder];
        if (self.hasAddbuddy) {
          [subBuilder mergeFrom:self.addbuddy];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAddbuddy:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        BuddyVerifyBuilder* subBuilder = [BuddyVerify builder];
        if (self.hasBuddyVerify) {
          [subBuilder mergeFrom:self.buddyVerify];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBuddyVerify:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return resultSysMessage.hasType;
}
- (UInt32) type {
  return resultSysMessage.type;
}
- (SysMessageBuilder*) setType:(UInt32) value {
  resultSysMessage.hasType = YES;
  resultSysMessage.type = value;
  return self;
}
- (SysMessageBuilder*) clearType {
  resultSysMessage.hasType = NO;
  resultSysMessage.type = 0;
  return self;
}
- (BOOL) hasAddbuddy {
  return resultSysMessage.hasAddbuddy;
}
- (AddBuddy*) addbuddy {
  return resultSysMessage.addbuddy;
}
- (SysMessageBuilder*) setAddbuddy:(AddBuddy*) value {
  resultSysMessage.hasAddbuddy = YES;
  resultSysMessage.addbuddy = value;
  return self;
}
- (SysMessageBuilder*) setAddbuddyBuilder:(AddBuddyBuilder*) builderForValue {
  return [self setAddbuddy:[builderForValue build]];
}
- (SysMessageBuilder*) mergeAddbuddy:(AddBuddy*) value {
  if (resultSysMessage.hasAddbuddy &&
      resultSysMessage.addbuddy != [AddBuddy defaultInstance]) {
    resultSysMessage.addbuddy =
      [[[AddBuddy builderWithPrototype:resultSysMessage.addbuddy] mergeFrom:value] buildPartial];
  } else {
    resultSysMessage.addbuddy = value;
  }
  resultSysMessage.hasAddbuddy = YES;
  return self;
}
- (SysMessageBuilder*) clearAddbuddy {
  resultSysMessage.hasAddbuddy = NO;
  resultSysMessage.addbuddy = [AddBuddy defaultInstance];
  return self;
}
- (BOOL) hasBuddyVerify {
  return resultSysMessage.hasBuddyVerify;
}
- (BuddyVerify*) buddyVerify {
  return resultSysMessage.buddyVerify;
}
- (SysMessageBuilder*) setBuddyVerify:(BuddyVerify*) value {
  resultSysMessage.hasBuddyVerify = YES;
  resultSysMessage.buddyVerify = value;
  return self;
}
- (SysMessageBuilder*) setBuddyVerifyBuilder:(BuddyVerifyBuilder*) builderForValue {
  return [self setBuddyVerify:[builderForValue build]];
}
- (SysMessageBuilder*) mergeBuddyVerify:(BuddyVerify*) value {
  if (resultSysMessage.hasBuddyVerify &&
      resultSysMessage.buddyVerify != [BuddyVerify defaultInstance]) {
    resultSysMessage.buddyVerify =
      [[[BuddyVerify builderWithPrototype:resultSysMessage.buddyVerify] mergeFrom:value] buildPartial];
  } else {
    resultSysMessage.buddyVerify = value;
  }
  resultSysMessage.hasBuddyVerify = YES;
  return self;
}
- (SysMessageBuilder*) clearBuddyVerify {
  resultSysMessage.hasBuddyVerify = NO;
  resultSysMessage.buddyVerify = [BuddyVerify defaultInstance];
  return self;
}
@end

@interface SubGroup ()
@property UInt64 subGroupId;
@property (strong) NSString* subGroupName;
@end

@implementation SubGroup

- (BOOL) hasSubGroupId {
  return !!hasSubGroupId_;
}
- (void) setHasSubGroupId:(BOOL) _value_ {
  hasSubGroupId_ = !!_value_;
}
@synthesize subGroupId;
- (BOOL) hasSubGroupName {
  return !!hasSubGroupName_;
}
- (void) setHasSubGroupName:(BOOL) _value_ {
  hasSubGroupName_ = !!_value_;
}
@synthesize subGroupName;
- (instancetype) init {
  if ((self = [super init])) {
    self.subGroupId = 0L;
    self.subGroupName = @"";
  }
  return self;
}
static SubGroup* defaultSubGroupInstance = nil;
+ (void) initialize {
  if (self == [SubGroup class]) {
    defaultSubGroupInstance = [[SubGroup alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSubGroupInstance;
}
- (instancetype) defaultInstance {
  return defaultSubGroupInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSubGroupId) {
    return NO;
  }
  if (!self.hasSubGroupName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSubGroupId) {
    [output writeUInt64:1 value:self.subGroupId];
  }
  if (self.hasSubGroupName) {
    [output writeString:2 value:self.subGroupName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSubGroupId) {
    size_ += computeUInt64Size(1, self.subGroupId);
  }
  if (self.hasSubGroupName) {
    size_ += computeStringSize(2, self.subGroupName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SubGroup*) parseFromData:(NSData*) data {
  return (SubGroup*)[[[SubGroup builder] mergeFromData:data] build];
}
+ (SubGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SubGroup*)[[[SubGroup builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SubGroup*) parseFromInputStream:(NSInputStream*) input {
  return (SubGroup*)[[[SubGroup builder] mergeFromInputStream:input] build];
}
+ (SubGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SubGroup*)[[[SubGroup builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SubGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SubGroup*)[[[SubGroup builder] mergeFromCodedInputStream:input] build];
}
+ (SubGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SubGroup*)[[[SubGroup builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SubGroupBuilder*) builder {
  return [[SubGroupBuilder alloc] init];
}
+ (SubGroupBuilder*) builderWithPrototype:(SubGroup*) prototype {
  return [[SubGroup builder] mergeFrom:prototype];
}
- (SubGroupBuilder*) builder {
  return [SubGroup builder];
}
- (SubGroupBuilder*) toBuilder {
  return [SubGroup builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSubGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"subGroupId", [NSNumber numberWithLongLong:self.subGroupId]];
  }
  if (self.hasSubGroupName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"subGroupName", self.subGroupName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasSubGroupId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.subGroupId] forKey: @"subGroupId"];
  }
  if (self.hasSubGroupName) {
    [dictionary setObject: self.subGroupName forKey: @"subGroupName"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SubGroup class]]) {
    return NO;
  }
  SubGroup *otherMessage = other;
  return
      self.hasSubGroupId == otherMessage.hasSubGroupId &&
      (!self.hasSubGroupId || self.subGroupId == otherMessage.subGroupId) &&
      self.hasSubGroupName == otherMessage.hasSubGroupName &&
      (!self.hasSubGroupName || [self.subGroupName isEqual:otherMessage.subGroupName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSubGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.subGroupId] hash];
  }
  if (self.hasSubGroupName) {
    hashCode = hashCode * 31 + [self.subGroupName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SubGroupBuilder()
@property (strong) SubGroup* resultSubGroup;
@end

@implementation SubGroupBuilder
@synthesize resultSubGroup;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSubGroup = [[SubGroup alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSubGroup;
}
- (SubGroupBuilder*) clear {
  self.resultSubGroup = [[SubGroup alloc] init];
  return self;
}
- (SubGroupBuilder*) clone {
  return [SubGroup builderWithPrototype:resultSubGroup];
}
- (SubGroup*) defaultInstance {
  return [SubGroup defaultInstance];
}
- (SubGroup*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SubGroup*) buildPartial {
  SubGroup* returnMe = resultSubGroup;
  self.resultSubGroup = nil;
  return returnMe;
}
- (SubGroupBuilder*) mergeFrom:(SubGroup*) other {
  if (other == [SubGroup defaultInstance]) {
    return self;
  }
  if (other.hasSubGroupId) {
    [self setSubGroupId:other.subGroupId];
  }
  if (other.hasSubGroupName) {
    [self setSubGroupName:other.subGroupName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SubGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SubGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSubGroupId:[input readUInt64]];
        break;
      }
      case 18: {
        [self setSubGroupName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasSubGroupId {
  return resultSubGroup.hasSubGroupId;
}
- (UInt64) subGroupId {
  return resultSubGroup.subGroupId;
}
- (SubGroupBuilder*) setSubGroupId:(UInt64) value {
  resultSubGroup.hasSubGroupId = YES;
  resultSubGroup.subGroupId = value;
  return self;
}
- (SubGroupBuilder*) clearSubGroupId {
  resultSubGroup.hasSubGroupId = NO;
  resultSubGroup.subGroupId = 0L;
  return self;
}
- (BOOL) hasSubGroupName {
  return resultSubGroup.hasSubGroupName;
}
- (NSString*) subGroupName {
  return resultSubGroup.subGroupName;
}
- (SubGroupBuilder*) setSubGroupName:(NSString*) value {
  resultSubGroup.hasSubGroupName = YES;
  resultSubGroup.subGroupName = value;
  return self;
}
- (SubGroupBuilder*) clearSubGroupName {
  resultSubGroup.hasSubGroupName = NO;
  resultSubGroup.subGroupName = @"";
  return self;
}
@end

@interface Buddy ()
@property UInt64 buddyId;
@property (strong) NSString* nickname;
@property UInt32 gender;
@property (strong) NSString* avatar;
@property UInt32 subGroupId;
@end

@implementation Buddy

- (BOOL) hasBuddyId {
  return !!hasBuddyId_;
}
- (void) setHasBuddyId:(BOOL) _value_ {
  hasBuddyId_ = !!_value_;
}
@synthesize buddyId;
- (BOOL) hasNickname {
  return !!hasNickname_;
}
- (void) setHasNickname:(BOOL) _value_ {
  hasNickname_ = !!_value_;
}
@synthesize nickname;
- (BOOL) hasGender {
  return !!hasGender_;
}
- (void) setHasGender:(BOOL) _value_ {
  hasGender_ = !!_value_;
}
@synthesize gender;
- (BOOL) hasAvatar {
  return !!hasAvatar_;
}
- (void) setHasAvatar:(BOOL) _value_ {
  hasAvatar_ = !!_value_;
}
@synthesize avatar;
- (BOOL) hasSubGroupId {
  return !!hasSubGroupId_;
}
- (void) setHasSubGroupId:(BOOL) _value_ {
  hasSubGroupId_ = !!_value_;
}
@synthesize subGroupId;
- (instancetype) init {
  if ((self = [super init])) {
    self.buddyId = 0L;
    self.nickname = @"";
    self.gender = 0;
    self.avatar = @"";
    self.subGroupId = 0;
  }
  return self;
}
static Buddy* defaultBuddyInstance = nil;
+ (void) initialize {
  if (self == [Buddy class]) {
    defaultBuddyInstance = [[Buddy alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBuddyInstance;
}
- (instancetype) defaultInstance {
  return defaultBuddyInstance;
}
- (BOOL) isInitialized {
  if (!self.hasBuddyId) {
    return NO;
  }
  if (!self.hasNickname) {
    return NO;
  }
  if (!self.hasGender) {
    return NO;
  }
  if (!self.hasAvatar) {
    return NO;
  }
  if (!self.hasSubGroupId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBuddyId) {
    [output writeUInt64:1 value:self.buddyId];
  }
  if (self.hasNickname) {
    [output writeString:2 value:self.nickname];
  }
  if (self.hasGender) {
    [output writeUInt32:3 value:self.gender];
  }
  if (self.hasAvatar) {
    [output writeString:4 value:self.avatar];
  }
  if (self.hasSubGroupId) {
    [output writeUInt32:5 value:self.subGroupId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBuddyId) {
    size_ += computeUInt64Size(1, self.buddyId);
  }
  if (self.hasNickname) {
    size_ += computeStringSize(2, self.nickname);
  }
  if (self.hasGender) {
    size_ += computeUInt32Size(3, self.gender);
  }
  if (self.hasAvatar) {
    size_ += computeStringSize(4, self.avatar);
  }
  if (self.hasSubGroupId) {
    size_ += computeUInt32Size(5, self.subGroupId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (Buddy*) parseFromData:(NSData*) data {
  return (Buddy*)[[[Buddy builder] mergeFromData:data] build];
}
+ (Buddy*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Buddy*)[[[Buddy builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Buddy*) parseFromInputStream:(NSInputStream*) input {
  return (Buddy*)[[[Buddy builder] mergeFromInputStream:input] build];
}
+ (Buddy*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Buddy*)[[[Buddy builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Buddy*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Buddy*)[[[Buddy builder] mergeFromCodedInputStream:input] build];
}
+ (Buddy*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Buddy*)[[[Buddy builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BuddyBuilder*) builder {
  return [[BuddyBuilder alloc] init];
}
+ (BuddyBuilder*) builderWithPrototype:(Buddy*) prototype {
  return [[Buddy builder] mergeFrom:prototype];
}
- (BuddyBuilder*) builder {
  return [Buddy builder];
}
- (BuddyBuilder*) toBuilder {
  return [Buddy builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBuddyId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"buddyId", [NSNumber numberWithLongLong:self.buddyId]];
  }
  if (self.hasNickname) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nickname", self.nickname];
  }
  if (self.hasGender) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gender", [NSNumber numberWithInteger:self.gender]];
  }
  if (self.hasAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatar", self.avatar];
  }
  if (self.hasSubGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"subGroupId", [NSNumber numberWithInteger:self.subGroupId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasBuddyId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.buddyId] forKey: @"buddyId"];
  }
  if (self.hasNickname) {
    [dictionary setObject: self.nickname forKey: @"nickname"];
  }
  if (self.hasGender) {
    [dictionary setObject: [NSNumber numberWithInteger:self.gender] forKey: @"gender"];
  }
  if (self.hasAvatar) {
    [dictionary setObject: self.avatar forKey: @"avatar"];
  }
  if (self.hasSubGroupId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.subGroupId] forKey: @"subGroupId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[Buddy class]]) {
    return NO;
  }
  Buddy *otherMessage = other;
  return
      self.hasBuddyId == otherMessage.hasBuddyId &&
      (!self.hasBuddyId || self.buddyId == otherMessage.buddyId) &&
      self.hasNickname == otherMessage.hasNickname &&
      (!self.hasNickname || [self.nickname isEqual:otherMessage.nickname]) &&
      self.hasGender == otherMessage.hasGender &&
      (!self.hasGender || self.gender == otherMessage.gender) &&
      self.hasAvatar == otherMessage.hasAvatar &&
      (!self.hasAvatar || [self.avatar isEqual:otherMessage.avatar]) &&
      self.hasSubGroupId == otherMessage.hasSubGroupId &&
      (!self.hasSubGroupId || self.subGroupId == otherMessage.subGroupId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBuddyId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.buddyId] hash];
  }
  if (self.hasNickname) {
    hashCode = hashCode * 31 + [self.nickname hash];
  }
  if (self.hasGender) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.gender] hash];
  }
  if (self.hasAvatar) {
    hashCode = hashCode * 31 + [self.avatar hash];
  }
  if (self.hasSubGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.subGroupId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BuddyBuilder()
@property (strong) Buddy* resultBuddy;
@end

@implementation BuddyBuilder
@synthesize resultBuddy;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBuddy = [[Buddy alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBuddy;
}
- (BuddyBuilder*) clear {
  self.resultBuddy = [[Buddy alloc] init];
  return self;
}
- (BuddyBuilder*) clone {
  return [Buddy builderWithPrototype:resultBuddy];
}
- (Buddy*) defaultInstance {
  return [Buddy defaultInstance];
}
- (Buddy*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Buddy*) buildPartial {
  Buddy* returnMe = resultBuddy;
  self.resultBuddy = nil;
  return returnMe;
}
- (BuddyBuilder*) mergeFrom:(Buddy*) other {
  if (other == [Buddy defaultInstance]) {
    return self;
  }
  if (other.hasBuddyId) {
    [self setBuddyId:other.buddyId];
  }
  if (other.hasNickname) {
    [self setNickname:other.nickname];
  }
  if (other.hasGender) {
    [self setGender:other.gender];
  }
  if (other.hasAvatar) {
    [self setAvatar:other.avatar];
  }
  if (other.hasSubGroupId) {
    [self setSubGroupId:other.subGroupId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BuddyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BuddyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBuddyId:[input readUInt64]];
        break;
      }
      case 18: {
        [self setNickname:[input readString]];
        break;
      }
      case 24: {
        [self setGender:[input readUInt32]];
        break;
      }
      case 34: {
        [self setAvatar:[input readString]];
        break;
      }
      case 40: {
        [self setSubGroupId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasBuddyId {
  return resultBuddy.hasBuddyId;
}
- (UInt64) buddyId {
  return resultBuddy.buddyId;
}
- (BuddyBuilder*) setBuddyId:(UInt64) value {
  resultBuddy.hasBuddyId = YES;
  resultBuddy.buddyId = value;
  return self;
}
- (BuddyBuilder*) clearBuddyId {
  resultBuddy.hasBuddyId = NO;
  resultBuddy.buddyId = 0L;
  return self;
}
- (BOOL) hasNickname {
  return resultBuddy.hasNickname;
}
- (NSString*) nickname {
  return resultBuddy.nickname;
}
- (BuddyBuilder*) setNickname:(NSString*) value {
  resultBuddy.hasNickname = YES;
  resultBuddy.nickname = value;
  return self;
}
- (BuddyBuilder*) clearNickname {
  resultBuddy.hasNickname = NO;
  resultBuddy.nickname = @"";
  return self;
}
- (BOOL) hasGender {
  return resultBuddy.hasGender;
}
- (UInt32) gender {
  return resultBuddy.gender;
}
- (BuddyBuilder*) setGender:(UInt32) value {
  resultBuddy.hasGender = YES;
  resultBuddy.gender = value;
  return self;
}
- (BuddyBuilder*) clearGender {
  resultBuddy.hasGender = NO;
  resultBuddy.gender = 0;
  return self;
}
- (BOOL) hasAvatar {
  return resultBuddy.hasAvatar;
}
- (NSString*) avatar {
  return resultBuddy.avatar;
}
- (BuddyBuilder*) setAvatar:(NSString*) value {
  resultBuddy.hasAvatar = YES;
  resultBuddy.avatar = value;
  return self;
}
- (BuddyBuilder*) clearAvatar {
  resultBuddy.hasAvatar = NO;
  resultBuddy.avatar = @"";
  return self;
}
- (BOOL) hasSubGroupId {
  return resultBuddy.hasSubGroupId;
}
- (UInt32) subGroupId {
  return resultBuddy.subGroupId;
}
- (BuddyBuilder*) setSubGroupId:(UInt32) value {
  resultBuddy.hasSubGroupId = YES;
  resultBuddy.subGroupId = value;
  return self;
}
- (BuddyBuilder*) clearSubGroupId {
  resultBuddy.hasSubGroupId = NO;
  resultBuddy.subGroupId = 0;
  return self;
}
@end

@interface RecentMsgList ()
@property UInt64 uid;
@property UInt32 pageSize;
@property UInt32 pageId;
@end

@implementation RecentMsgList

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (BOOL) hasPageSize {
  return !!hasPageSize_;
}
- (void) setHasPageSize:(BOOL) _value_ {
  hasPageSize_ = !!_value_;
}
@synthesize pageSize;
- (BOOL) hasPageId {
  return !!hasPageId_;
}
- (void) setHasPageId:(BOOL) _value_ {
  hasPageId_ = !!_value_;
}
@synthesize pageId;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
    self.pageSize = 0;
    self.pageId = 0;
  }
  return self;
}
static RecentMsgList* defaultRecentMsgListInstance = nil;
+ (void) initialize {
  if (self == [RecentMsgList class]) {
    defaultRecentMsgListInstance = [[RecentMsgList alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultRecentMsgListInstance;
}
- (instancetype) defaultInstance {
  return defaultRecentMsgListInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUid) {
    return NO;
  }
  if (!self.hasPageSize) {
    return NO;
  }
  if (!self.hasPageId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  if (self.hasPageSize) {
    [output writeUInt32:2 value:self.pageSize];
  }
  if (self.hasPageId) {
    [output writeUInt32:3 value:self.pageId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  if (self.hasPageSize) {
    size_ += computeUInt32Size(2, self.pageSize);
  }
  if (self.hasPageId) {
    size_ += computeUInt32Size(3, self.pageId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RecentMsgList*) parseFromData:(NSData*) data {
  return (RecentMsgList*)[[[RecentMsgList builder] mergeFromData:data] build];
}
+ (RecentMsgList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecentMsgList*)[[[RecentMsgList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecentMsgList*) parseFromInputStream:(NSInputStream*) input {
  return (RecentMsgList*)[[[RecentMsgList builder] mergeFromInputStream:input] build];
}
+ (RecentMsgList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecentMsgList*)[[[RecentMsgList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecentMsgList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecentMsgList*)[[[RecentMsgList builder] mergeFromCodedInputStream:input] build];
}
+ (RecentMsgList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecentMsgList*)[[[RecentMsgList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecentMsgListBuilder*) builder {
  return [[RecentMsgListBuilder alloc] init];
}
+ (RecentMsgListBuilder*) builderWithPrototype:(RecentMsgList*) prototype {
  return [[RecentMsgList builder] mergeFrom:prototype];
}
- (RecentMsgListBuilder*) builder {
  return [RecentMsgList builder];
}
- (RecentMsgListBuilder*) toBuilder {
  return [RecentMsgList builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  if (self.hasPageSize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pageSize", [NSNumber numberWithInteger:self.pageSize]];
  }
  if (self.hasPageId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pageId", [NSNumber numberWithInteger:self.pageId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.uid] forKey: @"uid"];
  }
  if (self.hasPageSize) {
    [dictionary setObject: [NSNumber numberWithInteger:self.pageSize] forKey: @"pageSize"];
  }
  if (self.hasPageId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.pageId] forKey: @"pageId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RecentMsgList class]]) {
    return NO;
  }
  RecentMsgList *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      self.hasPageSize == otherMessage.hasPageSize &&
      (!self.hasPageSize || self.pageSize == otherMessage.pageSize) &&
      self.hasPageId == otherMessage.hasPageId &&
      (!self.hasPageId || self.pageId == otherMessage.pageId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  if (self.hasPageSize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pageSize] hash];
  }
  if (self.hasPageId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pageId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RecentMsgListBuilder()
@property (strong) RecentMsgList* resultRecentMsgList;
@end

@implementation RecentMsgListBuilder
@synthesize resultRecentMsgList;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRecentMsgList = [[RecentMsgList alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRecentMsgList;
}
- (RecentMsgListBuilder*) clear {
  self.resultRecentMsgList = [[RecentMsgList alloc] init];
  return self;
}
- (RecentMsgListBuilder*) clone {
  return [RecentMsgList builderWithPrototype:resultRecentMsgList];
}
- (RecentMsgList*) defaultInstance {
  return [RecentMsgList defaultInstance];
}
- (RecentMsgList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecentMsgList*) buildPartial {
  RecentMsgList* returnMe = resultRecentMsgList;
  self.resultRecentMsgList = nil;
  return returnMe;
}
- (RecentMsgListBuilder*) mergeFrom:(RecentMsgList*) other {
  if (other == [RecentMsgList defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasPageSize) {
    [self setPageSize:other.pageSize];
  }
  if (other.hasPageId) {
    [self setPageId:other.pageId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecentMsgListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecentMsgListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
      case 16: {
        [self setPageSize:[input readUInt32]];
        break;
      }
      case 24: {
        [self setPageId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultRecentMsgList.hasUid;
}
- (UInt64) uid {
  return resultRecentMsgList.uid;
}
- (RecentMsgListBuilder*) setUid:(UInt64) value {
  resultRecentMsgList.hasUid = YES;
  resultRecentMsgList.uid = value;
  return self;
}
- (RecentMsgListBuilder*) clearUid {
  resultRecentMsgList.hasUid = NO;
  resultRecentMsgList.uid = 0L;
  return self;
}
- (BOOL) hasPageSize {
  return resultRecentMsgList.hasPageSize;
}
- (UInt32) pageSize {
  return resultRecentMsgList.pageSize;
}
- (RecentMsgListBuilder*) setPageSize:(UInt32) value {
  resultRecentMsgList.hasPageSize = YES;
  resultRecentMsgList.pageSize = value;
  return self;
}
- (RecentMsgListBuilder*) clearPageSize {
  resultRecentMsgList.hasPageSize = NO;
  resultRecentMsgList.pageSize = 0;
  return self;
}
- (BOOL) hasPageId {
  return resultRecentMsgList.hasPageId;
}
- (UInt32) pageId {
  return resultRecentMsgList.pageId;
}
- (RecentMsgListBuilder*) setPageId:(UInt32) value {
  resultRecentMsgList.hasPageId = YES;
  resultRecentMsgList.pageId = value;
  return self;
}
- (RecentMsgListBuilder*) clearPageId {
  resultRecentMsgList.hasPageId = NO;
  resultRecentMsgList.pageId = 0;
  return self;
}
@end

@interface RecentMessage ()
@property UInt32 type;
@property UInt32 unreads;
@property UInt64 curMsgId;
@property (strong) NSString* curMsgContent;
@property UInt64 curMsgTime;
@property (strong) Buddy* buddyInfo;
@end

@implementation RecentMessage

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasUnreads {
  return !!hasUnreads_;
}
- (void) setHasUnreads:(BOOL) _value_ {
  hasUnreads_ = !!_value_;
}
@synthesize unreads;
- (BOOL) hasCurMsgId {
  return !!hasCurMsgId_;
}
- (void) setHasCurMsgId:(BOOL) _value_ {
  hasCurMsgId_ = !!_value_;
}
@synthesize curMsgId;
- (BOOL) hasCurMsgContent {
  return !!hasCurMsgContent_;
}
- (void) setHasCurMsgContent:(BOOL) _value_ {
  hasCurMsgContent_ = !!_value_;
}
@synthesize curMsgContent;
- (BOOL) hasCurMsgTime {
  return !!hasCurMsgTime_;
}
- (void) setHasCurMsgTime:(BOOL) _value_ {
  hasCurMsgTime_ = !!_value_;
}
@synthesize curMsgTime;
- (BOOL) hasBuddyInfo {
  return !!hasBuddyInfo_;
}
- (void) setHasBuddyInfo:(BOOL) _value_ {
  hasBuddyInfo_ = !!_value_;
}
@synthesize buddyInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.type = 0;
    self.unreads = 0;
    self.curMsgId = 0L;
    self.curMsgContent = @"";
    self.curMsgTime = 0L;
    self.buddyInfo = [Buddy defaultInstance];
  }
  return self;
}
static RecentMessage* defaultRecentMessageInstance = nil;
+ (void) initialize {
  if (self == [RecentMessage class]) {
    defaultRecentMessageInstance = [[RecentMessage alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultRecentMessageInstance;
}
- (instancetype) defaultInstance {
  return defaultRecentMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasUnreads) {
    return NO;
  }
  if (!self.hasCurMsgId) {
    return NO;
  }
  if (!self.hasCurMsgContent) {
    return NO;
  }
  if (!self.hasCurMsgTime) {
    return NO;
  }
  if (self.hasBuddyInfo) {
    if (!self.buddyInfo.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeUInt32:1 value:self.type];
  }
  if (self.hasUnreads) {
    [output writeUInt32:2 value:self.unreads];
  }
  if (self.hasCurMsgId) {
    [output writeUInt64:3 value:self.curMsgId];
  }
  if (self.hasCurMsgContent) {
    [output writeString:4 value:self.curMsgContent];
  }
  if (self.hasCurMsgTime) {
    [output writeUInt64:5 value:self.curMsgTime];
  }
  if (self.hasBuddyInfo) {
    [output writeMessage:6 value:self.buddyInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeUInt32Size(1, self.type);
  }
  if (self.hasUnreads) {
    size_ += computeUInt32Size(2, self.unreads);
  }
  if (self.hasCurMsgId) {
    size_ += computeUInt64Size(3, self.curMsgId);
  }
  if (self.hasCurMsgContent) {
    size_ += computeStringSize(4, self.curMsgContent);
  }
  if (self.hasCurMsgTime) {
    size_ += computeUInt64Size(5, self.curMsgTime);
  }
  if (self.hasBuddyInfo) {
    size_ += computeMessageSize(6, self.buddyInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RecentMessage*) parseFromData:(NSData*) data {
  return (RecentMessage*)[[[RecentMessage builder] mergeFromData:data] build];
}
+ (RecentMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecentMessage*)[[[RecentMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecentMessage*) parseFromInputStream:(NSInputStream*) input {
  return (RecentMessage*)[[[RecentMessage builder] mergeFromInputStream:input] build];
}
+ (RecentMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecentMessage*)[[[RecentMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecentMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecentMessage*)[[[RecentMessage builder] mergeFromCodedInputStream:input] build];
}
+ (RecentMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecentMessage*)[[[RecentMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecentMessageBuilder*) builder {
  return [[RecentMessageBuilder alloc] init];
}
+ (RecentMessageBuilder*) builderWithPrototype:(RecentMessage*) prototype {
  return [[RecentMessage builder] mergeFrom:prototype];
}
- (RecentMessageBuilder*) builder {
  return [RecentMessage builder];
}
- (RecentMessageBuilder*) toBuilder {
  return [RecentMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasUnreads) {
    [output appendFormat:@"%@%@: %@\n", indent, @"unreads", [NSNumber numberWithInteger:self.unreads]];
  }
  if (self.hasCurMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"curMsgId", [NSNumber numberWithLongLong:self.curMsgId]];
  }
  if (self.hasCurMsgContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"curMsgContent", self.curMsgContent];
  }
  if (self.hasCurMsgTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"curMsgTime", [NSNumber numberWithLongLong:self.curMsgTime]];
  }
  if (self.hasBuddyInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"buddyInfo"];
    [self.buddyInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  if (self.hasUnreads) {
    [dictionary setObject: [NSNumber numberWithInteger:self.unreads] forKey: @"unreads"];
  }
  if (self.hasCurMsgId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.curMsgId] forKey: @"curMsgId"];
  }
  if (self.hasCurMsgContent) {
    [dictionary setObject: self.curMsgContent forKey: @"curMsgContent"];
  }
  if (self.hasCurMsgTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.curMsgTime] forKey: @"curMsgTime"];
  }
  if (self.hasBuddyInfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.buddyInfo storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"buddyInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RecentMessage class]]) {
    return NO;
  }
  RecentMessage *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasUnreads == otherMessage.hasUnreads &&
      (!self.hasUnreads || self.unreads == otherMessage.unreads) &&
      self.hasCurMsgId == otherMessage.hasCurMsgId &&
      (!self.hasCurMsgId || self.curMsgId == otherMessage.curMsgId) &&
      self.hasCurMsgContent == otherMessage.hasCurMsgContent &&
      (!self.hasCurMsgContent || [self.curMsgContent isEqual:otherMessage.curMsgContent]) &&
      self.hasCurMsgTime == otherMessage.hasCurMsgTime &&
      (!self.hasCurMsgTime || self.curMsgTime == otherMessage.curMsgTime) &&
      self.hasBuddyInfo == otherMessage.hasBuddyInfo &&
      (!self.hasBuddyInfo || [self.buddyInfo isEqual:otherMessage.buddyInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  if (self.hasUnreads) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.unreads] hash];
  }
  if (self.hasCurMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.curMsgId] hash];
  }
  if (self.hasCurMsgContent) {
    hashCode = hashCode * 31 + [self.curMsgContent hash];
  }
  if (self.hasCurMsgTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.curMsgTime] hash];
  }
  if (self.hasBuddyInfo) {
    hashCode = hashCode * 31 + [self.buddyInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RecentMessageBuilder()
@property (strong) RecentMessage* resultRecentMessage;
@end

@implementation RecentMessageBuilder
@synthesize resultRecentMessage;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRecentMessage = [[RecentMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRecentMessage;
}
- (RecentMessageBuilder*) clear {
  self.resultRecentMessage = [[RecentMessage alloc] init];
  return self;
}
- (RecentMessageBuilder*) clone {
  return [RecentMessage builderWithPrototype:resultRecentMessage];
}
- (RecentMessage*) defaultInstance {
  return [RecentMessage defaultInstance];
}
- (RecentMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecentMessage*) buildPartial {
  RecentMessage* returnMe = resultRecentMessage;
  self.resultRecentMessage = nil;
  return returnMe;
}
- (RecentMessageBuilder*) mergeFrom:(RecentMessage*) other {
  if (other == [RecentMessage defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasUnreads) {
    [self setUnreads:other.unreads];
  }
  if (other.hasCurMsgId) {
    [self setCurMsgId:other.curMsgId];
  }
  if (other.hasCurMsgContent) {
    [self setCurMsgContent:other.curMsgContent];
  }
  if (other.hasCurMsgTime) {
    [self setCurMsgTime:other.curMsgTime];
  }
  if (other.hasBuddyInfo) {
    [self mergeBuddyInfo:other.buddyInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecentMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecentMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readUInt32]];
        break;
      }
      case 16: {
        [self setUnreads:[input readUInt32]];
        break;
      }
      case 24: {
        [self setCurMsgId:[input readUInt64]];
        break;
      }
      case 34: {
        [self setCurMsgContent:[input readString]];
        break;
      }
      case 40: {
        [self setCurMsgTime:[input readUInt64]];
        break;
      }
      case 50: {
        BuddyBuilder* subBuilder = [Buddy builder];
        if (self.hasBuddyInfo) {
          [subBuilder mergeFrom:self.buddyInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBuddyInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return resultRecentMessage.hasType;
}
- (UInt32) type {
  return resultRecentMessage.type;
}
- (RecentMessageBuilder*) setType:(UInt32) value {
  resultRecentMessage.hasType = YES;
  resultRecentMessage.type = value;
  return self;
}
- (RecentMessageBuilder*) clearType {
  resultRecentMessage.hasType = NO;
  resultRecentMessage.type = 0;
  return self;
}
- (BOOL) hasUnreads {
  return resultRecentMessage.hasUnreads;
}
- (UInt32) unreads {
  return resultRecentMessage.unreads;
}
- (RecentMessageBuilder*) setUnreads:(UInt32) value {
  resultRecentMessage.hasUnreads = YES;
  resultRecentMessage.unreads = value;
  return self;
}
- (RecentMessageBuilder*) clearUnreads {
  resultRecentMessage.hasUnreads = NO;
  resultRecentMessage.unreads = 0;
  return self;
}
- (BOOL) hasCurMsgId {
  return resultRecentMessage.hasCurMsgId;
}
- (UInt64) curMsgId {
  return resultRecentMessage.curMsgId;
}
- (RecentMessageBuilder*) setCurMsgId:(UInt64) value {
  resultRecentMessage.hasCurMsgId = YES;
  resultRecentMessage.curMsgId = value;
  return self;
}
- (RecentMessageBuilder*) clearCurMsgId {
  resultRecentMessage.hasCurMsgId = NO;
  resultRecentMessage.curMsgId = 0L;
  return self;
}
- (BOOL) hasCurMsgContent {
  return resultRecentMessage.hasCurMsgContent;
}
- (NSString*) curMsgContent {
  return resultRecentMessage.curMsgContent;
}
- (RecentMessageBuilder*) setCurMsgContent:(NSString*) value {
  resultRecentMessage.hasCurMsgContent = YES;
  resultRecentMessage.curMsgContent = value;
  return self;
}
- (RecentMessageBuilder*) clearCurMsgContent {
  resultRecentMessage.hasCurMsgContent = NO;
  resultRecentMessage.curMsgContent = @"";
  return self;
}
- (BOOL) hasCurMsgTime {
  return resultRecentMessage.hasCurMsgTime;
}
- (UInt64) curMsgTime {
  return resultRecentMessage.curMsgTime;
}
- (RecentMessageBuilder*) setCurMsgTime:(UInt64) value {
  resultRecentMessage.hasCurMsgTime = YES;
  resultRecentMessage.curMsgTime = value;
  return self;
}
- (RecentMessageBuilder*) clearCurMsgTime {
  resultRecentMessage.hasCurMsgTime = NO;
  resultRecentMessage.curMsgTime = 0L;
  return self;
}
- (BOOL) hasBuddyInfo {
  return resultRecentMessage.hasBuddyInfo;
}
- (Buddy*) buddyInfo {
  return resultRecentMessage.buddyInfo;
}
- (RecentMessageBuilder*) setBuddyInfo:(Buddy*) value {
  resultRecentMessage.hasBuddyInfo = YES;
  resultRecentMessage.buddyInfo = value;
  return self;
}
- (RecentMessageBuilder*) setBuddyInfoBuilder:(BuddyBuilder*) builderForValue {
  return [self setBuddyInfo:[builderForValue build]];
}
- (RecentMessageBuilder*) mergeBuddyInfo:(Buddy*) value {
  if (resultRecentMessage.hasBuddyInfo &&
      resultRecentMessage.buddyInfo != [Buddy defaultInstance]) {
    resultRecentMessage.buddyInfo =
      [[[Buddy builderWithPrototype:resultRecentMessage.buddyInfo] mergeFrom:value] buildPartial];
  } else {
    resultRecentMessage.buddyInfo = value;
  }
  resultRecentMessage.hasBuddyInfo = YES;
  return self;
}
- (RecentMessageBuilder*) clearBuddyInfo {
  resultRecentMessage.hasBuddyInfo = NO;
  resultRecentMessage.buddyInfo = [Buddy defaultInstance];
  return self;
}
@end

@interface RecentMsgListAck ()
@property (strong) NSMutableArray * recentMsgListArray;
@property SInt32 ret;
@property (strong) NSString* errorInfo;
@end

@implementation RecentMsgListAck

@synthesize recentMsgListArray;
@dynamic recentMsgList;
- (BOOL) hasRet {
  return !!hasRet_;
}
- (void) setHasRet:(BOOL) _value_ {
  hasRet_ = !!_value_;
}
@synthesize ret;
- (BOOL) hasErrorInfo {
  return !!hasErrorInfo_;
}
- (void) setHasErrorInfo:(BOOL) _value_ {
  hasErrorInfo_ = !!_value_;
}
@synthesize errorInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.ret = 0;
    self.errorInfo = @"";
  }
  return self;
}
static RecentMsgListAck* defaultRecentMsgListAckInstance = nil;
+ (void) initialize {
  if (self == [RecentMsgListAck class]) {
    defaultRecentMsgListAckInstance = [[RecentMsgListAck alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultRecentMsgListAckInstance;
}
- (instancetype) defaultInstance {
  return defaultRecentMsgListAckInstance;
}
- (NSArray *)recentMsgList {
  return recentMsgListArray;
}
- (RecentMessage*)recentMsgListAtIndex:(NSUInteger)index {
  return [recentMsgListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasRet) {
    return NO;
  }
  __block BOOL isInitrecentMsgList = YES;
   [self.recentMsgList enumerateObjectsUsingBlock:^(RecentMessage *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitrecentMsgList = NO;
      *stop = YES;
    }
  }];
  if (!isInitrecentMsgList) return isInitrecentMsgList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.recentMsgListArray enumerateObjectsUsingBlock:^(RecentMessage *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasRet) {
    [output writeInt32:2 value:self.ret];
  }
  if (self.hasErrorInfo) {
    [output writeString:3 value:self.errorInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.recentMsgListArray enumerateObjectsUsingBlock:^(RecentMessage *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasRet) {
    size_ += computeInt32Size(2, self.ret);
  }
  if (self.hasErrorInfo) {
    size_ += computeStringSize(3, self.errorInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RecentMsgListAck*) parseFromData:(NSData*) data {
  return (RecentMsgListAck*)[[[RecentMsgListAck builder] mergeFromData:data] build];
}
+ (RecentMsgListAck*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecentMsgListAck*)[[[RecentMsgListAck builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecentMsgListAck*) parseFromInputStream:(NSInputStream*) input {
  return (RecentMsgListAck*)[[[RecentMsgListAck builder] mergeFromInputStream:input] build];
}
+ (RecentMsgListAck*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecentMsgListAck*)[[[RecentMsgListAck builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecentMsgListAck*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecentMsgListAck*)[[[RecentMsgListAck builder] mergeFromCodedInputStream:input] build];
}
+ (RecentMsgListAck*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecentMsgListAck*)[[[RecentMsgListAck builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecentMsgListAckBuilder*) builder {
  return [[RecentMsgListAckBuilder alloc] init];
}
+ (RecentMsgListAckBuilder*) builderWithPrototype:(RecentMsgListAck*) prototype {
  return [[RecentMsgListAck builder] mergeFrom:prototype];
}
- (RecentMsgListAckBuilder*) builder {
  return [RecentMsgListAck builder];
}
- (RecentMsgListAckBuilder*) toBuilder {
  return [RecentMsgListAck builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.recentMsgListArray enumerateObjectsUsingBlock:^(RecentMessage *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"recentMsgList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasRet) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ret", [NSNumber numberWithInteger:self.ret]];
  }
  if (self.hasErrorInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorInfo", self.errorInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (RecentMessage* element in self.recentMsgListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"recentMsgList"];
  }
  if (self.hasRet) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ret] forKey: @"ret"];
  }
  if (self.hasErrorInfo) {
    [dictionary setObject: self.errorInfo forKey: @"errorInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RecentMsgListAck class]]) {
    return NO;
  }
  RecentMsgListAck *otherMessage = other;
  return
      [self.recentMsgListArray isEqualToArray:otherMessage.recentMsgListArray] &&
      self.hasRet == otherMessage.hasRet &&
      (!self.hasRet || self.ret == otherMessage.ret) &&
      self.hasErrorInfo == otherMessage.hasErrorInfo &&
      (!self.hasErrorInfo || [self.errorInfo isEqual:otherMessage.errorInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.recentMsgListArray enumerateObjectsUsingBlock:^(RecentMessage *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasRet) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ret] hash];
  }
  if (self.hasErrorInfo) {
    hashCode = hashCode * 31 + [self.errorInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RecentMsgListAckBuilder()
@property (strong) RecentMsgListAck* resultRecentMsgListAck;
@end

@implementation RecentMsgListAckBuilder
@synthesize resultRecentMsgListAck;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRecentMsgListAck = [[RecentMsgListAck alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRecentMsgListAck;
}
- (RecentMsgListAckBuilder*) clear {
  self.resultRecentMsgListAck = [[RecentMsgListAck alloc] init];
  return self;
}
- (RecentMsgListAckBuilder*) clone {
  return [RecentMsgListAck builderWithPrototype:resultRecentMsgListAck];
}
- (RecentMsgListAck*) defaultInstance {
  return [RecentMsgListAck defaultInstance];
}
- (RecentMsgListAck*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecentMsgListAck*) buildPartial {
  RecentMsgListAck* returnMe = resultRecentMsgListAck;
  self.resultRecentMsgListAck = nil;
  return returnMe;
}
- (RecentMsgListAckBuilder*) mergeFrom:(RecentMsgListAck*) other {
  if (other == [RecentMsgListAck defaultInstance]) {
    return self;
  }
  if (other.recentMsgListArray.count > 0) {
    if (resultRecentMsgListAck.recentMsgListArray == nil) {
      resultRecentMsgListAck.recentMsgListArray = [[NSMutableArray alloc] initWithArray:other.recentMsgListArray];
    } else {
      [resultRecentMsgListAck.recentMsgListArray addObjectsFromArray:other.recentMsgListArray];
    }
  }
  if (other.hasRet) {
    [self setRet:other.ret];
  }
  if (other.hasErrorInfo) {
    [self setErrorInfo:other.errorInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecentMsgListAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecentMsgListAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        RecentMessageBuilder* subBuilder = [RecentMessage builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRecentMsgList:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setRet:[input readInt32]];
        break;
      }
      case 26: {
        [self setErrorInfo:[input readString]];
        break;
      }
    }
  }
}
- (NSMutableArray *)recentMsgList {
  return resultRecentMsgListAck.recentMsgListArray;
}
- (RecentMessage*)recentMsgListAtIndex:(NSUInteger)index {
  return [resultRecentMsgListAck recentMsgListAtIndex:index];
}
- (RecentMsgListAckBuilder *)addRecentMsgList:(RecentMessage*)value {
  if (resultRecentMsgListAck.recentMsgListArray == nil) {
    resultRecentMsgListAck.recentMsgListArray = [[NSMutableArray alloc]init];
  }
  [resultRecentMsgListAck.recentMsgListArray addObject:value];
  return self;
}
- (RecentMsgListAckBuilder *)setRecentMsgListArray:(NSArray *)array {
  resultRecentMsgListAck.recentMsgListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (RecentMsgListAckBuilder *)clearRecentMsgList {
  resultRecentMsgListAck.recentMsgListArray = nil;
  return self;
}
- (BOOL) hasRet {
  return resultRecentMsgListAck.hasRet;
}
- (SInt32) ret {
  return resultRecentMsgListAck.ret;
}
- (RecentMsgListAckBuilder*) setRet:(SInt32) value {
  resultRecentMsgListAck.hasRet = YES;
  resultRecentMsgListAck.ret = value;
  return self;
}
- (RecentMsgListAckBuilder*) clearRet {
  resultRecentMsgListAck.hasRet = NO;
  resultRecentMsgListAck.ret = 0;
  return self;
}
- (BOOL) hasErrorInfo {
  return resultRecentMsgListAck.hasErrorInfo;
}
- (NSString*) errorInfo {
  return resultRecentMsgListAck.errorInfo;
}
- (RecentMsgListAckBuilder*) setErrorInfo:(NSString*) value {
  resultRecentMsgListAck.hasErrorInfo = YES;
  resultRecentMsgListAck.errorInfo = value;
  return self;
}
- (RecentMsgListAckBuilder*) clearErrorInfo {
  resultRecentMsgListAck.hasErrorInfo = NO;
  resultRecentMsgListAck.errorInfo = @"";
  return self;
}
@end

@interface GetOfflineMsg ()
@property UInt64 uid;
@property UInt32 method;
@property UInt64 buddyUid;
@property UInt64 groupId;
@property UInt64 pullStart;
@property UInt32 pullCount;
@end

@implementation GetOfflineMsg

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (BOOL) hasMethod {
  return !!hasMethod_;
}
- (void) setHasMethod:(BOOL) _value_ {
  hasMethod_ = !!_value_;
}
@synthesize method;
- (BOOL) hasBuddyUid {
  return !!hasBuddyUid_;
}
- (void) setHasBuddyUid:(BOOL) _value_ {
  hasBuddyUid_ = !!_value_;
}
@synthesize buddyUid;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasPullStart {
  return !!hasPullStart_;
}
- (void) setHasPullStart:(BOOL) _value_ {
  hasPullStart_ = !!_value_;
}
@synthesize pullStart;
- (BOOL) hasPullCount {
  return !!hasPullCount_;
}
- (void) setHasPullCount:(BOOL) _value_ {
  hasPullCount_ = !!_value_;
}
@synthesize pullCount;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
    self.method = 0;
    self.buddyUid = 0L;
    self.groupId = 0L;
    self.pullStart = 0L;
    self.pullCount = 0;
  }
  return self;
}
static GetOfflineMsg* defaultGetOfflineMsgInstance = nil;
+ (void) initialize {
  if (self == [GetOfflineMsg class]) {
    defaultGetOfflineMsgInstance = [[GetOfflineMsg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultGetOfflineMsgInstance;
}
- (instancetype) defaultInstance {
  return defaultGetOfflineMsgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUid) {
    return NO;
  }
  if (!self.hasMethod) {
    return NO;
  }
  if (!self.hasBuddyUid) {
    return NO;
  }
  if (!self.hasGroupId) {
    return NO;
  }
  if (!self.hasPullStart) {
    return NO;
  }
  if (!self.hasPullCount) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  if (self.hasMethod) {
    [output writeUInt32:2 value:self.method];
  }
  if (self.hasBuddyUid) {
    [output writeUInt64:3 value:self.buddyUid];
  }
  if (self.hasGroupId) {
    [output writeUInt64:4 value:self.groupId];
  }
  if (self.hasPullStart) {
    [output writeUInt64:5 value:self.pullStart];
  }
  if (self.hasPullCount) {
    [output writeUInt32:6 value:self.pullCount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  if (self.hasMethod) {
    size_ += computeUInt32Size(2, self.method);
  }
  if (self.hasBuddyUid) {
    size_ += computeUInt64Size(3, self.buddyUid);
  }
  if (self.hasGroupId) {
    size_ += computeUInt64Size(4, self.groupId);
  }
  if (self.hasPullStart) {
    size_ += computeUInt64Size(5, self.pullStart);
  }
  if (self.hasPullCount) {
    size_ += computeUInt32Size(6, self.pullCount);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetOfflineMsg*) parseFromData:(NSData*) data {
  return (GetOfflineMsg*)[[[GetOfflineMsg builder] mergeFromData:data] build];
}
+ (GetOfflineMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetOfflineMsg*)[[[GetOfflineMsg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetOfflineMsg*) parseFromInputStream:(NSInputStream*) input {
  return (GetOfflineMsg*)[[[GetOfflineMsg builder] mergeFromInputStream:input] build];
}
+ (GetOfflineMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetOfflineMsg*)[[[GetOfflineMsg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetOfflineMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetOfflineMsg*)[[[GetOfflineMsg builder] mergeFromCodedInputStream:input] build];
}
+ (GetOfflineMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetOfflineMsg*)[[[GetOfflineMsg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetOfflineMsgBuilder*) builder {
  return [[GetOfflineMsgBuilder alloc] init];
}
+ (GetOfflineMsgBuilder*) builderWithPrototype:(GetOfflineMsg*) prototype {
  return [[GetOfflineMsg builder] mergeFrom:prototype];
}
- (GetOfflineMsgBuilder*) builder {
  return [GetOfflineMsg builder];
}
- (GetOfflineMsgBuilder*) toBuilder {
  return [GetOfflineMsg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  if (self.hasMethod) {
    [output appendFormat:@"%@%@: %@\n", indent, @"method", [NSNumber numberWithInteger:self.method]];
  }
  if (self.hasBuddyUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"buddyUid", [NSNumber numberWithLongLong:self.buddyUid]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithLongLong:self.groupId]];
  }
  if (self.hasPullStart) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pullStart", [NSNumber numberWithLongLong:self.pullStart]];
  }
  if (self.hasPullCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pullCount", [NSNumber numberWithInteger:self.pullCount]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.uid] forKey: @"uid"];
  }
  if (self.hasMethod) {
    [dictionary setObject: [NSNumber numberWithInteger:self.method] forKey: @"method"];
  }
  if (self.hasBuddyUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.buddyUid] forKey: @"buddyUid"];
  }
  if (self.hasGroupId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.groupId] forKey: @"groupId"];
  }
  if (self.hasPullStart) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.pullStart] forKey: @"pullStart"];
  }
  if (self.hasPullCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.pullCount] forKey: @"pullCount"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GetOfflineMsg class]]) {
    return NO;
  }
  GetOfflineMsg *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      self.hasMethod == otherMessage.hasMethod &&
      (!self.hasMethod || self.method == otherMessage.method) &&
      self.hasBuddyUid == otherMessage.hasBuddyUid &&
      (!self.hasBuddyUid || self.buddyUid == otherMessage.buddyUid) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasPullStart == otherMessage.hasPullStart &&
      (!self.hasPullStart || self.pullStart == otherMessage.pullStart) &&
      self.hasPullCount == otherMessage.hasPullCount &&
      (!self.hasPullCount || self.pullCount == otherMessage.pullCount) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  if (self.hasMethod) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.method] hash];
  }
  if (self.hasBuddyUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.buddyUid] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.groupId] hash];
  }
  if (self.hasPullStart) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.pullStart] hash];
  }
  if (self.hasPullCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pullCount] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GetOfflineMsgBuilder()
@property (strong) GetOfflineMsg* resultGetOfflineMsg;
@end

@implementation GetOfflineMsgBuilder
@synthesize resultGetOfflineMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetOfflineMsg = [[GetOfflineMsg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetOfflineMsg;
}
- (GetOfflineMsgBuilder*) clear {
  self.resultGetOfflineMsg = [[GetOfflineMsg alloc] init];
  return self;
}
- (GetOfflineMsgBuilder*) clone {
  return [GetOfflineMsg builderWithPrototype:resultGetOfflineMsg];
}
- (GetOfflineMsg*) defaultInstance {
  return [GetOfflineMsg defaultInstance];
}
- (GetOfflineMsg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetOfflineMsg*) buildPartial {
  GetOfflineMsg* returnMe = resultGetOfflineMsg;
  self.resultGetOfflineMsg = nil;
  return returnMe;
}
- (GetOfflineMsgBuilder*) mergeFrom:(GetOfflineMsg*) other {
  if (other == [GetOfflineMsg defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasMethod) {
    [self setMethod:other.method];
  }
  if (other.hasBuddyUid) {
    [self setBuddyUid:other.buddyUid];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasPullStart) {
    [self setPullStart:other.pullStart];
  }
  if (other.hasPullCount) {
    [self setPullCount:other.pullCount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetOfflineMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetOfflineMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
      case 16: {
        [self setMethod:[input readUInt32]];
        break;
      }
      case 24: {
        [self setBuddyUid:[input readUInt64]];
        break;
      }
      case 32: {
        [self setGroupId:[input readUInt64]];
        break;
      }
      case 40: {
        [self setPullStart:[input readUInt64]];
        break;
      }
      case 48: {
        [self setPullCount:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultGetOfflineMsg.hasUid;
}
- (UInt64) uid {
  return resultGetOfflineMsg.uid;
}
- (GetOfflineMsgBuilder*) setUid:(UInt64) value {
  resultGetOfflineMsg.hasUid = YES;
  resultGetOfflineMsg.uid = value;
  return self;
}
- (GetOfflineMsgBuilder*) clearUid {
  resultGetOfflineMsg.hasUid = NO;
  resultGetOfflineMsg.uid = 0L;
  return self;
}
- (BOOL) hasMethod {
  return resultGetOfflineMsg.hasMethod;
}
- (UInt32) method {
  return resultGetOfflineMsg.method;
}
- (GetOfflineMsgBuilder*) setMethod:(UInt32) value {
  resultGetOfflineMsg.hasMethod = YES;
  resultGetOfflineMsg.method = value;
  return self;
}
- (GetOfflineMsgBuilder*) clearMethod {
  resultGetOfflineMsg.hasMethod = NO;
  resultGetOfflineMsg.method = 0;
  return self;
}
- (BOOL) hasBuddyUid {
  return resultGetOfflineMsg.hasBuddyUid;
}
- (UInt64) buddyUid {
  return resultGetOfflineMsg.buddyUid;
}
- (GetOfflineMsgBuilder*) setBuddyUid:(UInt64) value {
  resultGetOfflineMsg.hasBuddyUid = YES;
  resultGetOfflineMsg.buddyUid = value;
  return self;
}
- (GetOfflineMsgBuilder*) clearBuddyUid {
  resultGetOfflineMsg.hasBuddyUid = NO;
  resultGetOfflineMsg.buddyUid = 0L;
  return self;
}
- (BOOL) hasGroupId {
  return resultGetOfflineMsg.hasGroupId;
}
- (UInt64) groupId {
  return resultGetOfflineMsg.groupId;
}
- (GetOfflineMsgBuilder*) setGroupId:(UInt64) value {
  resultGetOfflineMsg.hasGroupId = YES;
  resultGetOfflineMsg.groupId = value;
  return self;
}
- (GetOfflineMsgBuilder*) clearGroupId {
  resultGetOfflineMsg.hasGroupId = NO;
  resultGetOfflineMsg.groupId = 0L;
  return self;
}
- (BOOL) hasPullStart {
  return resultGetOfflineMsg.hasPullStart;
}
- (UInt64) pullStart {
  return resultGetOfflineMsg.pullStart;
}
- (GetOfflineMsgBuilder*) setPullStart:(UInt64) value {
  resultGetOfflineMsg.hasPullStart = YES;
  resultGetOfflineMsg.pullStart = value;
  return self;
}
- (GetOfflineMsgBuilder*) clearPullStart {
  resultGetOfflineMsg.hasPullStart = NO;
  resultGetOfflineMsg.pullStart = 0L;
  return self;
}
- (BOOL) hasPullCount {
  return resultGetOfflineMsg.hasPullCount;
}
- (UInt32) pullCount {
  return resultGetOfflineMsg.pullCount;
}
- (GetOfflineMsgBuilder*) setPullCount:(UInt32) value {
  resultGetOfflineMsg.hasPullCount = YES;
  resultGetOfflineMsg.pullCount = value;
  return self;
}
- (GetOfflineMsgBuilder*) clearPullCount {
  resultGetOfflineMsg.hasPullCount = NO;
  resultGetOfflineMsg.pullCount = 0;
  return self;
}
@end

@interface GetOfflineMsgAck ()
@property UInt32 type;
@property (strong) NSMutableArray * msgListArray;
@property SInt32 ret;
@property (strong) NSString* errorInfo;
@end

@implementation GetOfflineMsgAck

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
@synthesize msgListArray;
@dynamic msgList;
- (BOOL) hasRet {
  return !!hasRet_;
}
- (void) setHasRet:(BOOL) _value_ {
  hasRet_ = !!_value_;
}
@synthesize ret;
- (BOOL) hasErrorInfo {
  return !!hasErrorInfo_;
}
- (void) setHasErrorInfo:(BOOL) _value_ {
  hasErrorInfo_ = !!_value_;
}
@synthesize errorInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.type = 0;
    self.ret = 0;
    self.errorInfo = @"";
  }
  return self;
}
static GetOfflineMsgAck* defaultGetOfflineMsgAckInstance = nil;
+ (void) initialize {
  if (self == [GetOfflineMsgAck class]) {
    defaultGetOfflineMsgAckInstance = [[GetOfflineMsgAck alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultGetOfflineMsgAckInstance;
}
- (instancetype) defaultInstance {
  return defaultGetOfflineMsgAckInstance;
}
- (NSArray *)msgList {
  return msgListArray;
}
- (Message*)msgListAtIndex:(NSUInteger)index {
  return [msgListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasRet) {
    return NO;
  }
  __block BOOL isInitmsgList = YES;
   [self.msgList enumerateObjectsUsingBlock:^(Message *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitmsgList = NO;
      *stop = YES;
    }
  }];
  if (!isInitmsgList) return isInitmsgList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeUInt32:1 value:self.type];
  }
  [self.msgListArray enumerateObjectsUsingBlock:^(Message *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasRet) {
    [output writeInt32:3 value:self.ret];
  }
  if (self.hasErrorInfo) {
    [output writeString:4 value:self.errorInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeUInt32Size(1, self.type);
  }
  [self.msgListArray enumerateObjectsUsingBlock:^(Message *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasRet) {
    size_ += computeInt32Size(3, self.ret);
  }
  if (self.hasErrorInfo) {
    size_ += computeStringSize(4, self.errorInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetOfflineMsgAck*) parseFromData:(NSData*) data {
  return (GetOfflineMsgAck*)[[[GetOfflineMsgAck builder] mergeFromData:data] build];
}
+ (GetOfflineMsgAck*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetOfflineMsgAck*)[[[GetOfflineMsgAck builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetOfflineMsgAck*) parseFromInputStream:(NSInputStream*) input {
  return (GetOfflineMsgAck*)[[[GetOfflineMsgAck builder] mergeFromInputStream:input] build];
}
+ (GetOfflineMsgAck*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetOfflineMsgAck*)[[[GetOfflineMsgAck builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetOfflineMsgAck*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetOfflineMsgAck*)[[[GetOfflineMsgAck builder] mergeFromCodedInputStream:input] build];
}
+ (GetOfflineMsgAck*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetOfflineMsgAck*)[[[GetOfflineMsgAck builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetOfflineMsgAckBuilder*) builder {
  return [[GetOfflineMsgAckBuilder alloc] init];
}
+ (GetOfflineMsgAckBuilder*) builderWithPrototype:(GetOfflineMsgAck*) prototype {
  return [[GetOfflineMsgAck builder] mergeFrom:prototype];
}
- (GetOfflineMsgAckBuilder*) builder {
  return [GetOfflineMsgAck builder];
}
- (GetOfflineMsgAckBuilder*) toBuilder {
  return [GetOfflineMsgAck builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  [self.msgListArray enumerateObjectsUsingBlock:^(Message *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasRet) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ret", [NSNumber numberWithInteger:self.ret]];
  }
  if (self.hasErrorInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorInfo", self.errorInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  for (Message* element in self.msgListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"msgList"];
  }
  if (self.hasRet) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ret] forKey: @"ret"];
  }
  if (self.hasErrorInfo) {
    [dictionary setObject: self.errorInfo forKey: @"errorInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GetOfflineMsgAck class]]) {
    return NO;
  }
  GetOfflineMsgAck *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      [self.msgListArray isEqualToArray:otherMessage.msgListArray] &&
      self.hasRet == otherMessage.hasRet &&
      (!self.hasRet || self.ret == otherMessage.ret) &&
      self.hasErrorInfo == otherMessage.hasErrorInfo &&
      (!self.hasErrorInfo || [self.errorInfo isEqual:otherMessage.errorInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  [self.msgListArray enumerateObjectsUsingBlock:^(Message *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasRet) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ret] hash];
  }
  if (self.hasErrorInfo) {
    hashCode = hashCode * 31 + [self.errorInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GetOfflineMsgAckBuilder()
@property (strong) GetOfflineMsgAck* resultGetOfflineMsgAck;
@end

@implementation GetOfflineMsgAckBuilder
@synthesize resultGetOfflineMsgAck;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetOfflineMsgAck = [[GetOfflineMsgAck alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetOfflineMsgAck;
}
- (GetOfflineMsgAckBuilder*) clear {
  self.resultGetOfflineMsgAck = [[GetOfflineMsgAck alloc] init];
  return self;
}
- (GetOfflineMsgAckBuilder*) clone {
  return [GetOfflineMsgAck builderWithPrototype:resultGetOfflineMsgAck];
}
- (GetOfflineMsgAck*) defaultInstance {
  return [GetOfflineMsgAck defaultInstance];
}
- (GetOfflineMsgAck*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetOfflineMsgAck*) buildPartial {
  GetOfflineMsgAck* returnMe = resultGetOfflineMsgAck;
  self.resultGetOfflineMsgAck = nil;
  return returnMe;
}
- (GetOfflineMsgAckBuilder*) mergeFrom:(GetOfflineMsgAck*) other {
  if (other == [GetOfflineMsgAck defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.msgListArray.count > 0) {
    if (resultGetOfflineMsgAck.msgListArray == nil) {
      resultGetOfflineMsgAck.msgListArray = [[NSMutableArray alloc] initWithArray:other.msgListArray];
    } else {
      [resultGetOfflineMsgAck.msgListArray addObjectsFromArray:other.msgListArray];
    }
  }
  if (other.hasRet) {
    [self setRet:other.ret];
  }
  if (other.hasErrorInfo) {
    [self setErrorInfo:other.errorInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetOfflineMsgAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetOfflineMsgAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readUInt32]];
        break;
      }
      case 18: {
        MessageBuilder* subBuilder = [Message builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMsgList:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setRet:[input readInt32]];
        break;
      }
      case 34: {
        [self setErrorInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return resultGetOfflineMsgAck.hasType;
}
- (UInt32) type {
  return resultGetOfflineMsgAck.type;
}
- (GetOfflineMsgAckBuilder*) setType:(UInt32) value {
  resultGetOfflineMsgAck.hasType = YES;
  resultGetOfflineMsgAck.type = value;
  return self;
}
- (GetOfflineMsgAckBuilder*) clearType {
  resultGetOfflineMsgAck.hasType = NO;
  resultGetOfflineMsgAck.type = 0;
  return self;
}
- (NSMutableArray *)msgList {
  return resultGetOfflineMsgAck.msgListArray;
}
- (Message*)msgListAtIndex:(NSUInteger)index {
  return [resultGetOfflineMsgAck msgListAtIndex:index];
}
- (GetOfflineMsgAckBuilder *)addMsgList:(Message*)value {
  if (resultGetOfflineMsgAck.msgListArray == nil) {
    resultGetOfflineMsgAck.msgListArray = [[NSMutableArray alloc]init];
  }
  [resultGetOfflineMsgAck.msgListArray addObject:value];
  return self;
}
- (GetOfflineMsgAckBuilder *)setMsgListArray:(NSArray *)array {
  resultGetOfflineMsgAck.msgListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (GetOfflineMsgAckBuilder *)clearMsgList {
  resultGetOfflineMsgAck.msgListArray = nil;
  return self;
}
- (BOOL) hasRet {
  return resultGetOfflineMsgAck.hasRet;
}
- (SInt32) ret {
  return resultGetOfflineMsgAck.ret;
}
- (GetOfflineMsgAckBuilder*) setRet:(SInt32) value {
  resultGetOfflineMsgAck.hasRet = YES;
  resultGetOfflineMsgAck.ret = value;
  return self;
}
- (GetOfflineMsgAckBuilder*) clearRet {
  resultGetOfflineMsgAck.hasRet = NO;
  resultGetOfflineMsgAck.ret = 0;
  return self;
}
- (BOOL) hasErrorInfo {
  return resultGetOfflineMsgAck.hasErrorInfo;
}
- (NSString*) errorInfo {
  return resultGetOfflineMsgAck.errorInfo;
}
- (GetOfflineMsgAckBuilder*) setErrorInfo:(NSString*) value {
  resultGetOfflineMsgAck.hasErrorInfo = YES;
  resultGetOfflineMsgAck.errorInfo = value;
  return self;
}
- (GetOfflineMsgAckBuilder*) clearErrorInfo {
  resultGetOfflineMsgAck.hasErrorInfo = NO;
  resultGetOfflineMsgAck.errorInfo = @"";
  return self;
}
@end

@interface GetBuddyGroupList ()
@property UInt64 uid;
@end

@implementation GetBuddyGroupList

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
  }
  return self;
}
static GetBuddyGroupList* defaultGetBuddyGroupListInstance = nil;
+ (void) initialize {
  if (self == [GetBuddyGroupList class]) {
    defaultGetBuddyGroupListInstance = [[GetBuddyGroupList alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultGetBuddyGroupListInstance;
}
- (instancetype) defaultInstance {
  return defaultGetBuddyGroupListInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUid) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetBuddyGroupList*) parseFromData:(NSData*) data {
  return (GetBuddyGroupList*)[[[GetBuddyGroupList builder] mergeFromData:data] build];
}
+ (GetBuddyGroupList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetBuddyGroupList*)[[[GetBuddyGroupList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetBuddyGroupList*) parseFromInputStream:(NSInputStream*) input {
  return (GetBuddyGroupList*)[[[GetBuddyGroupList builder] mergeFromInputStream:input] build];
}
+ (GetBuddyGroupList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetBuddyGroupList*)[[[GetBuddyGroupList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetBuddyGroupList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetBuddyGroupList*)[[[GetBuddyGroupList builder] mergeFromCodedInputStream:input] build];
}
+ (GetBuddyGroupList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetBuddyGroupList*)[[[GetBuddyGroupList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetBuddyGroupListBuilder*) builder {
  return [[GetBuddyGroupListBuilder alloc] init];
}
+ (GetBuddyGroupListBuilder*) builderWithPrototype:(GetBuddyGroupList*) prototype {
  return [[GetBuddyGroupList builder] mergeFrom:prototype];
}
- (GetBuddyGroupListBuilder*) builder {
  return [GetBuddyGroupList builder];
}
- (GetBuddyGroupListBuilder*) toBuilder {
  return [GetBuddyGroupList builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.uid] forKey: @"uid"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GetBuddyGroupList class]]) {
    return NO;
  }
  GetBuddyGroupList *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GetBuddyGroupListBuilder()
@property (strong) GetBuddyGroupList* resultGetBuddyGroupList;
@end

@implementation GetBuddyGroupListBuilder
@synthesize resultGetBuddyGroupList;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetBuddyGroupList = [[GetBuddyGroupList alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetBuddyGroupList;
}
- (GetBuddyGroupListBuilder*) clear {
  self.resultGetBuddyGroupList = [[GetBuddyGroupList alloc] init];
  return self;
}
- (GetBuddyGroupListBuilder*) clone {
  return [GetBuddyGroupList builderWithPrototype:resultGetBuddyGroupList];
}
- (GetBuddyGroupList*) defaultInstance {
  return [GetBuddyGroupList defaultInstance];
}
- (GetBuddyGroupList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetBuddyGroupList*) buildPartial {
  GetBuddyGroupList* returnMe = resultGetBuddyGroupList;
  self.resultGetBuddyGroupList = nil;
  return returnMe;
}
- (GetBuddyGroupListBuilder*) mergeFrom:(GetBuddyGroupList*) other {
  if (other == [GetBuddyGroupList defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetBuddyGroupListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetBuddyGroupListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultGetBuddyGroupList.hasUid;
}
- (UInt64) uid {
  return resultGetBuddyGroupList.uid;
}
- (GetBuddyGroupListBuilder*) setUid:(UInt64) value {
  resultGetBuddyGroupList.hasUid = YES;
  resultGetBuddyGroupList.uid = value;
  return self;
}
- (GetBuddyGroupListBuilder*) clearUid {
  resultGetBuddyGroupList.hasUid = NO;
  resultGetBuddyGroupList.uid = 0L;
  return self;
}
@end

@interface GetBuddyGroupListAck ()
@property UInt64 uid;
@property (strong) NSMutableArray * subGroupListArray;
@property SInt32 ret;
@property (strong) NSString* errorInfo;
@end

@implementation GetBuddyGroupListAck

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
@synthesize subGroupListArray;
@dynamic subGroupList;
- (BOOL) hasRet {
  return !!hasRet_;
}
- (void) setHasRet:(BOOL) _value_ {
  hasRet_ = !!_value_;
}
@synthesize ret;
- (BOOL) hasErrorInfo {
  return !!hasErrorInfo_;
}
- (void) setHasErrorInfo:(BOOL) _value_ {
  hasErrorInfo_ = !!_value_;
}
@synthesize errorInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
    self.ret = 0;
    self.errorInfo = @"";
  }
  return self;
}
static GetBuddyGroupListAck* defaultGetBuddyGroupListAckInstance = nil;
+ (void) initialize {
  if (self == [GetBuddyGroupListAck class]) {
    defaultGetBuddyGroupListAckInstance = [[GetBuddyGroupListAck alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultGetBuddyGroupListAckInstance;
}
- (instancetype) defaultInstance {
  return defaultGetBuddyGroupListAckInstance;
}
- (NSArray *)subGroupList {
  return subGroupListArray;
}
- (SubGroup*)subGroupListAtIndex:(NSUInteger)index {
  return [subGroupListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasUid) {
    return NO;
  }
  if (!self.hasRet) {
    return NO;
  }
  __block BOOL isInitsubGroupList = YES;
   [self.subGroupList enumerateObjectsUsingBlock:^(SubGroup *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitsubGroupList = NO;
      *stop = YES;
    }
  }];
  if (!isInitsubGroupList) return isInitsubGroupList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  [self.subGroupListArray enumerateObjectsUsingBlock:^(SubGroup *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasRet) {
    [output writeInt32:3 value:self.ret];
  }
  if (self.hasErrorInfo) {
    [output writeString:4 value:self.errorInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  [self.subGroupListArray enumerateObjectsUsingBlock:^(SubGroup *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasRet) {
    size_ += computeInt32Size(3, self.ret);
  }
  if (self.hasErrorInfo) {
    size_ += computeStringSize(4, self.errorInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetBuddyGroupListAck*) parseFromData:(NSData*) data {
  return (GetBuddyGroupListAck*)[[[GetBuddyGroupListAck builder] mergeFromData:data] build];
}
+ (GetBuddyGroupListAck*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetBuddyGroupListAck*)[[[GetBuddyGroupListAck builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetBuddyGroupListAck*) parseFromInputStream:(NSInputStream*) input {
  return (GetBuddyGroupListAck*)[[[GetBuddyGroupListAck builder] mergeFromInputStream:input] build];
}
+ (GetBuddyGroupListAck*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetBuddyGroupListAck*)[[[GetBuddyGroupListAck builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetBuddyGroupListAck*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetBuddyGroupListAck*)[[[GetBuddyGroupListAck builder] mergeFromCodedInputStream:input] build];
}
+ (GetBuddyGroupListAck*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetBuddyGroupListAck*)[[[GetBuddyGroupListAck builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetBuddyGroupListAckBuilder*) builder {
  return [[GetBuddyGroupListAckBuilder alloc] init];
}
+ (GetBuddyGroupListAckBuilder*) builderWithPrototype:(GetBuddyGroupListAck*) prototype {
  return [[GetBuddyGroupListAck builder] mergeFrom:prototype];
}
- (GetBuddyGroupListAckBuilder*) builder {
  return [GetBuddyGroupListAck builder];
}
- (GetBuddyGroupListAckBuilder*) toBuilder {
  return [GetBuddyGroupListAck builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  [self.subGroupListArray enumerateObjectsUsingBlock:^(SubGroup *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"subGroupList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasRet) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ret", [NSNumber numberWithInteger:self.ret]];
  }
  if (self.hasErrorInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorInfo", self.errorInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.uid] forKey: @"uid"];
  }
  for (SubGroup* element in self.subGroupListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"subGroupList"];
  }
  if (self.hasRet) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ret] forKey: @"ret"];
  }
  if (self.hasErrorInfo) {
    [dictionary setObject: self.errorInfo forKey: @"errorInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GetBuddyGroupListAck class]]) {
    return NO;
  }
  GetBuddyGroupListAck *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      [self.subGroupListArray isEqualToArray:otherMessage.subGroupListArray] &&
      self.hasRet == otherMessage.hasRet &&
      (!self.hasRet || self.ret == otherMessage.ret) &&
      self.hasErrorInfo == otherMessage.hasErrorInfo &&
      (!self.hasErrorInfo || [self.errorInfo isEqual:otherMessage.errorInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  [self.subGroupListArray enumerateObjectsUsingBlock:^(SubGroup *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasRet) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ret] hash];
  }
  if (self.hasErrorInfo) {
    hashCode = hashCode * 31 + [self.errorInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GetBuddyGroupListAckBuilder()
@property (strong) GetBuddyGroupListAck* resultGetBuddyGroupListAck;
@end

@implementation GetBuddyGroupListAckBuilder
@synthesize resultGetBuddyGroupListAck;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetBuddyGroupListAck = [[GetBuddyGroupListAck alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetBuddyGroupListAck;
}
- (GetBuddyGroupListAckBuilder*) clear {
  self.resultGetBuddyGroupListAck = [[GetBuddyGroupListAck alloc] init];
  return self;
}
- (GetBuddyGroupListAckBuilder*) clone {
  return [GetBuddyGroupListAck builderWithPrototype:resultGetBuddyGroupListAck];
}
- (GetBuddyGroupListAck*) defaultInstance {
  return [GetBuddyGroupListAck defaultInstance];
}
- (GetBuddyGroupListAck*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetBuddyGroupListAck*) buildPartial {
  GetBuddyGroupListAck* returnMe = resultGetBuddyGroupListAck;
  self.resultGetBuddyGroupListAck = nil;
  return returnMe;
}
- (GetBuddyGroupListAckBuilder*) mergeFrom:(GetBuddyGroupListAck*) other {
  if (other == [GetBuddyGroupListAck defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.subGroupListArray.count > 0) {
    if (resultGetBuddyGroupListAck.subGroupListArray == nil) {
      resultGetBuddyGroupListAck.subGroupListArray = [[NSMutableArray alloc] initWithArray:other.subGroupListArray];
    } else {
      [resultGetBuddyGroupListAck.subGroupListArray addObjectsFromArray:other.subGroupListArray];
    }
  }
  if (other.hasRet) {
    [self setRet:other.ret];
  }
  if (other.hasErrorInfo) {
    [self setErrorInfo:other.errorInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetBuddyGroupListAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetBuddyGroupListAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
      case 18: {
        SubGroupBuilder* subBuilder = [SubGroup builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSubGroupList:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setRet:[input readInt32]];
        break;
      }
      case 34: {
        [self setErrorInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultGetBuddyGroupListAck.hasUid;
}
- (UInt64) uid {
  return resultGetBuddyGroupListAck.uid;
}
- (GetBuddyGroupListAckBuilder*) setUid:(UInt64) value {
  resultGetBuddyGroupListAck.hasUid = YES;
  resultGetBuddyGroupListAck.uid = value;
  return self;
}
- (GetBuddyGroupListAckBuilder*) clearUid {
  resultGetBuddyGroupListAck.hasUid = NO;
  resultGetBuddyGroupListAck.uid = 0L;
  return self;
}
- (NSMutableArray *)subGroupList {
  return resultGetBuddyGroupListAck.subGroupListArray;
}
- (SubGroup*)subGroupListAtIndex:(NSUInteger)index {
  return [resultGetBuddyGroupListAck subGroupListAtIndex:index];
}
- (GetBuddyGroupListAckBuilder *)addSubGroupList:(SubGroup*)value {
  if (resultGetBuddyGroupListAck.subGroupListArray == nil) {
    resultGetBuddyGroupListAck.subGroupListArray = [[NSMutableArray alloc]init];
  }
  [resultGetBuddyGroupListAck.subGroupListArray addObject:value];
  return self;
}
- (GetBuddyGroupListAckBuilder *)setSubGroupListArray:(NSArray *)array {
  resultGetBuddyGroupListAck.subGroupListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (GetBuddyGroupListAckBuilder *)clearSubGroupList {
  resultGetBuddyGroupListAck.subGroupListArray = nil;
  return self;
}
- (BOOL) hasRet {
  return resultGetBuddyGroupListAck.hasRet;
}
- (SInt32) ret {
  return resultGetBuddyGroupListAck.ret;
}
- (GetBuddyGroupListAckBuilder*) setRet:(SInt32) value {
  resultGetBuddyGroupListAck.hasRet = YES;
  resultGetBuddyGroupListAck.ret = value;
  return self;
}
- (GetBuddyGroupListAckBuilder*) clearRet {
  resultGetBuddyGroupListAck.hasRet = NO;
  resultGetBuddyGroupListAck.ret = 0;
  return self;
}
- (BOOL) hasErrorInfo {
  return resultGetBuddyGroupListAck.hasErrorInfo;
}
- (NSString*) errorInfo {
  return resultGetBuddyGroupListAck.errorInfo;
}
- (GetBuddyGroupListAckBuilder*) setErrorInfo:(NSString*) value {
  resultGetBuddyGroupListAck.hasErrorInfo = YES;
  resultGetBuddyGroupListAck.errorInfo = value;
  return self;
}
- (GetBuddyGroupListAckBuilder*) clearErrorInfo {
  resultGetBuddyGroupListAck.hasErrorInfo = NO;
  resultGetBuddyGroupListAck.errorInfo = @"";
  return self;
}
@end

@interface GetBuddyList ()
@property UInt64 uid;
@property UInt32 deviceType;
@property UInt32 subGroupId;
@property UInt32 pageSize;
@property UInt32 pageId;
@end

@implementation GetBuddyList

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (BOOL) hasDeviceType {
  return !!hasDeviceType_;
}
- (void) setHasDeviceType:(BOOL) _value_ {
  hasDeviceType_ = !!_value_;
}
@synthesize deviceType;
- (BOOL) hasSubGroupId {
  return !!hasSubGroupId_;
}
- (void) setHasSubGroupId:(BOOL) _value_ {
  hasSubGroupId_ = !!_value_;
}
@synthesize subGroupId;
- (BOOL) hasPageSize {
  return !!hasPageSize_;
}
- (void) setHasPageSize:(BOOL) _value_ {
  hasPageSize_ = !!_value_;
}
@synthesize pageSize;
- (BOOL) hasPageId {
  return !!hasPageId_;
}
- (void) setHasPageId:(BOOL) _value_ {
  hasPageId_ = !!_value_;
}
@synthesize pageId;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
    self.deviceType = 0;
    self.subGroupId = 0;
    self.pageSize = 0;
    self.pageId = 0;
  }
  return self;
}
static GetBuddyList* defaultGetBuddyListInstance = nil;
+ (void) initialize {
  if (self == [GetBuddyList class]) {
    defaultGetBuddyListInstance = [[GetBuddyList alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultGetBuddyListInstance;
}
- (instancetype) defaultInstance {
  return defaultGetBuddyListInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUid) {
    return NO;
  }
  if (!self.hasDeviceType) {
    return NO;
  }
  if (!self.hasSubGroupId) {
    return NO;
  }
  if (!self.hasPageSize) {
    return NO;
  }
  if (!self.hasPageId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  if (self.hasDeviceType) {
    [output writeUInt32:2 value:self.deviceType];
  }
  if (self.hasSubGroupId) {
    [output writeUInt32:3 value:self.subGroupId];
  }
  if (self.hasPageSize) {
    [output writeUInt32:4 value:self.pageSize];
  }
  if (self.hasPageId) {
    [output writeUInt32:5 value:self.pageId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  if (self.hasDeviceType) {
    size_ += computeUInt32Size(2, self.deviceType);
  }
  if (self.hasSubGroupId) {
    size_ += computeUInt32Size(3, self.subGroupId);
  }
  if (self.hasPageSize) {
    size_ += computeUInt32Size(4, self.pageSize);
  }
  if (self.hasPageId) {
    size_ += computeUInt32Size(5, self.pageId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetBuddyList*) parseFromData:(NSData*) data {
  return (GetBuddyList*)[[[GetBuddyList builder] mergeFromData:data] build];
}
+ (GetBuddyList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetBuddyList*)[[[GetBuddyList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetBuddyList*) parseFromInputStream:(NSInputStream*) input {
  return (GetBuddyList*)[[[GetBuddyList builder] mergeFromInputStream:input] build];
}
+ (GetBuddyList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetBuddyList*)[[[GetBuddyList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetBuddyList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetBuddyList*)[[[GetBuddyList builder] mergeFromCodedInputStream:input] build];
}
+ (GetBuddyList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetBuddyList*)[[[GetBuddyList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetBuddyListBuilder*) builder {
  return [[GetBuddyListBuilder alloc] init];
}
+ (GetBuddyListBuilder*) builderWithPrototype:(GetBuddyList*) prototype {
  return [[GetBuddyList builder] mergeFrom:prototype];
}
- (GetBuddyListBuilder*) builder {
  return [GetBuddyList builder];
}
- (GetBuddyListBuilder*) toBuilder {
  return [GetBuddyList builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  if (self.hasDeviceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceType", [NSNumber numberWithInteger:self.deviceType]];
  }
  if (self.hasSubGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"subGroupId", [NSNumber numberWithInteger:self.subGroupId]];
  }
  if (self.hasPageSize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pageSize", [NSNumber numberWithInteger:self.pageSize]];
  }
  if (self.hasPageId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pageId", [NSNumber numberWithInteger:self.pageId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.uid] forKey: @"uid"];
  }
  if (self.hasDeviceType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.deviceType] forKey: @"deviceType"];
  }
  if (self.hasSubGroupId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.subGroupId] forKey: @"subGroupId"];
  }
  if (self.hasPageSize) {
    [dictionary setObject: [NSNumber numberWithInteger:self.pageSize] forKey: @"pageSize"];
  }
  if (self.hasPageId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.pageId] forKey: @"pageId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GetBuddyList class]]) {
    return NO;
  }
  GetBuddyList *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      self.hasDeviceType == otherMessage.hasDeviceType &&
      (!self.hasDeviceType || self.deviceType == otherMessage.deviceType) &&
      self.hasSubGroupId == otherMessage.hasSubGroupId &&
      (!self.hasSubGroupId || self.subGroupId == otherMessage.subGroupId) &&
      self.hasPageSize == otherMessage.hasPageSize &&
      (!self.hasPageSize || self.pageSize == otherMessage.pageSize) &&
      self.hasPageId == otherMessage.hasPageId &&
      (!self.hasPageId || self.pageId == otherMessage.pageId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  if (self.hasDeviceType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.deviceType] hash];
  }
  if (self.hasSubGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.subGroupId] hash];
  }
  if (self.hasPageSize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pageSize] hash];
  }
  if (self.hasPageId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pageId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GetBuddyListBuilder()
@property (strong) GetBuddyList* resultGetBuddyList;
@end

@implementation GetBuddyListBuilder
@synthesize resultGetBuddyList;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetBuddyList = [[GetBuddyList alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetBuddyList;
}
- (GetBuddyListBuilder*) clear {
  self.resultGetBuddyList = [[GetBuddyList alloc] init];
  return self;
}
- (GetBuddyListBuilder*) clone {
  return [GetBuddyList builderWithPrototype:resultGetBuddyList];
}
- (GetBuddyList*) defaultInstance {
  return [GetBuddyList defaultInstance];
}
- (GetBuddyList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetBuddyList*) buildPartial {
  GetBuddyList* returnMe = resultGetBuddyList;
  self.resultGetBuddyList = nil;
  return returnMe;
}
- (GetBuddyListBuilder*) mergeFrom:(GetBuddyList*) other {
  if (other == [GetBuddyList defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasDeviceType) {
    [self setDeviceType:other.deviceType];
  }
  if (other.hasSubGroupId) {
    [self setSubGroupId:other.subGroupId];
  }
  if (other.hasPageSize) {
    [self setPageSize:other.pageSize];
  }
  if (other.hasPageId) {
    [self setPageId:other.pageId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetBuddyListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetBuddyListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
      case 16: {
        [self setDeviceType:[input readUInt32]];
        break;
      }
      case 24: {
        [self setSubGroupId:[input readUInt32]];
        break;
      }
      case 32: {
        [self setPageSize:[input readUInt32]];
        break;
      }
      case 40: {
        [self setPageId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultGetBuddyList.hasUid;
}
- (UInt64) uid {
  return resultGetBuddyList.uid;
}
- (GetBuddyListBuilder*) setUid:(UInt64) value {
  resultGetBuddyList.hasUid = YES;
  resultGetBuddyList.uid = value;
  return self;
}
- (GetBuddyListBuilder*) clearUid {
  resultGetBuddyList.hasUid = NO;
  resultGetBuddyList.uid = 0L;
  return self;
}
- (BOOL) hasDeviceType {
  return resultGetBuddyList.hasDeviceType;
}
- (UInt32) deviceType {
  return resultGetBuddyList.deviceType;
}
- (GetBuddyListBuilder*) setDeviceType:(UInt32) value {
  resultGetBuddyList.hasDeviceType = YES;
  resultGetBuddyList.deviceType = value;
  return self;
}
- (GetBuddyListBuilder*) clearDeviceType {
  resultGetBuddyList.hasDeviceType = NO;
  resultGetBuddyList.deviceType = 0;
  return self;
}
- (BOOL) hasSubGroupId {
  return resultGetBuddyList.hasSubGroupId;
}
- (UInt32) subGroupId {
  return resultGetBuddyList.subGroupId;
}
- (GetBuddyListBuilder*) setSubGroupId:(UInt32) value {
  resultGetBuddyList.hasSubGroupId = YES;
  resultGetBuddyList.subGroupId = value;
  return self;
}
- (GetBuddyListBuilder*) clearSubGroupId {
  resultGetBuddyList.hasSubGroupId = NO;
  resultGetBuddyList.subGroupId = 0;
  return self;
}
- (BOOL) hasPageSize {
  return resultGetBuddyList.hasPageSize;
}
- (UInt32) pageSize {
  return resultGetBuddyList.pageSize;
}
- (GetBuddyListBuilder*) setPageSize:(UInt32) value {
  resultGetBuddyList.hasPageSize = YES;
  resultGetBuddyList.pageSize = value;
  return self;
}
- (GetBuddyListBuilder*) clearPageSize {
  resultGetBuddyList.hasPageSize = NO;
  resultGetBuddyList.pageSize = 0;
  return self;
}
- (BOOL) hasPageId {
  return resultGetBuddyList.hasPageId;
}
- (UInt32) pageId {
  return resultGetBuddyList.pageId;
}
- (GetBuddyListBuilder*) setPageId:(UInt32) value {
  resultGetBuddyList.hasPageId = YES;
  resultGetBuddyList.pageId = value;
  return self;
}
- (GetBuddyListBuilder*) clearPageId {
  resultGetBuddyList.hasPageId = NO;
  resultGetBuddyList.pageId = 0;
  return self;
}
@end

@interface GetBuddyListAck ()
@property (strong) NSMutableArray * buddyListArray;
@property SInt32 ret;
@property (strong) NSString* errorInfo;
@end

@implementation GetBuddyListAck

@synthesize buddyListArray;
@dynamic buddyList;
- (BOOL) hasRet {
  return !!hasRet_;
}
- (void) setHasRet:(BOOL) _value_ {
  hasRet_ = !!_value_;
}
@synthesize ret;
- (BOOL) hasErrorInfo {
  return !!hasErrorInfo_;
}
- (void) setHasErrorInfo:(BOOL) _value_ {
  hasErrorInfo_ = !!_value_;
}
@synthesize errorInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.ret = 0;
    self.errorInfo = @"";
  }
  return self;
}
static GetBuddyListAck* defaultGetBuddyListAckInstance = nil;
+ (void) initialize {
  if (self == [GetBuddyListAck class]) {
    defaultGetBuddyListAckInstance = [[GetBuddyListAck alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultGetBuddyListAckInstance;
}
- (instancetype) defaultInstance {
  return defaultGetBuddyListAckInstance;
}
- (NSArray *)buddyList {
  return buddyListArray;
}
- (Buddy*)buddyListAtIndex:(NSUInteger)index {
  return [buddyListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasRet) {
    return NO;
  }
  __block BOOL isInitbuddyList = YES;
   [self.buddyList enumerateObjectsUsingBlock:^(Buddy *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitbuddyList = NO;
      *stop = YES;
    }
  }];
  if (!isInitbuddyList) return isInitbuddyList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.buddyListArray enumerateObjectsUsingBlock:^(Buddy *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasRet) {
    [output writeInt32:2 value:self.ret];
  }
  if (self.hasErrorInfo) {
    [output writeString:3 value:self.errorInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.buddyListArray enumerateObjectsUsingBlock:^(Buddy *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasRet) {
    size_ += computeInt32Size(2, self.ret);
  }
  if (self.hasErrorInfo) {
    size_ += computeStringSize(3, self.errorInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetBuddyListAck*) parseFromData:(NSData*) data {
  return (GetBuddyListAck*)[[[GetBuddyListAck builder] mergeFromData:data] build];
}
+ (GetBuddyListAck*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetBuddyListAck*)[[[GetBuddyListAck builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetBuddyListAck*) parseFromInputStream:(NSInputStream*) input {
  return (GetBuddyListAck*)[[[GetBuddyListAck builder] mergeFromInputStream:input] build];
}
+ (GetBuddyListAck*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetBuddyListAck*)[[[GetBuddyListAck builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetBuddyListAck*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetBuddyListAck*)[[[GetBuddyListAck builder] mergeFromCodedInputStream:input] build];
}
+ (GetBuddyListAck*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetBuddyListAck*)[[[GetBuddyListAck builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetBuddyListAckBuilder*) builder {
  return [[GetBuddyListAckBuilder alloc] init];
}
+ (GetBuddyListAckBuilder*) builderWithPrototype:(GetBuddyListAck*) prototype {
  return [[GetBuddyListAck builder] mergeFrom:prototype];
}
- (GetBuddyListAckBuilder*) builder {
  return [GetBuddyListAck builder];
}
- (GetBuddyListAckBuilder*) toBuilder {
  return [GetBuddyListAck builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.buddyListArray enumerateObjectsUsingBlock:^(Buddy *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"buddyList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasRet) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ret", [NSNumber numberWithInteger:self.ret]];
  }
  if (self.hasErrorInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorInfo", self.errorInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (Buddy* element in self.buddyListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"buddyList"];
  }
  if (self.hasRet) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ret] forKey: @"ret"];
  }
  if (self.hasErrorInfo) {
    [dictionary setObject: self.errorInfo forKey: @"errorInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GetBuddyListAck class]]) {
    return NO;
  }
  GetBuddyListAck *otherMessage = other;
  return
      [self.buddyListArray isEqualToArray:otherMessage.buddyListArray] &&
      self.hasRet == otherMessage.hasRet &&
      (!self.hasRet || self.ret == otherMessage.ret) &&
      self.hasErrorInfo == otherMessage.hasErrorInfo &&
      (!self.hasErrorInfo || [self.errorInfo isEqual:otherMessage.errorInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.buddyListArray enumerateObjectsUsingBlock:^(Buddy *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasRet) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ret] hash];
  }
  if (self.hasErrorInfo) {
    hashCode = hashCode * 31 + [self.errorInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GetBuddyListAckBuilder()
@property (strong) GetBuddyListAck* resultGetBuddyListAck;
@end

@implementation GetBuddyListAckBuilder
@synthesize resultGetBuddyListAck;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetBuddyListAck = [[GetBuddyListAck alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetBuddyListAck;
}
- (GetBuddyListAckBuilder*) clear {
  self.resultGetBuddyListAck = [[GetBuddyListAck alloc] init];
  return self;
}
- (GetBuddyListAckBuilder*) clone {
  return [GetBuddyListAck builderWithPrototype:resultGetBuddyListAck];
}
- (GetBuddyListAck*) defaultInstance {
  return [GetBuddyListAck defaultInstance];
}
- (GetBuddyListAck*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetBuddyListAck*) buildPartial {
  GetBuddyListAck* returnMe = resultGetBuddyListAck;
  self.resultGetBuddyListAck = nil;
  return returnMe;
}
- (GetBuddyListAckBuilder*) mergeFrom:(GetBuddyListAck*) other {
  if (other == [GetBuddyListAck defaultInstance]) {
    return self;
  }
  if (other.buddyListArray.count > 0) {
    if (resultGetBuddyListAck.buddyListArray == nil) {
      resultGetBuddyListAck.buddyListArray = [[NSMutableArray alloc] initWithArray:other.buddyListArray];
    } else {
      [resultGetBuddyListAck.buddyListArray addObjectsFromArray:other.buddyListArray];
    }
  }
  if (other.hasRet) {
    [self setRet:other.ret];
  }
  if (other.hasErrorInfo) {
    [self setErrorInfo:other.errorInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetBuddyListAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetBuddyListAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        BuddyBuilder* subBuilder = [Buddy builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBuddyList:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setRet:[input readInt32]];
        break;
      }
      case 26: {
        [self setErrorInfo:[input readString]];
        break;
      }
    }
  }
}
- (NSMutableArray *)buddyList {
  return resultGetBuddyListAck.buddyListArray;
}
- (Buddy*)buddyListAtIndex:(NSUInteger)index {
  return [resultGetBuddyListAck buddyListAtIndex:index];
}
- (GetBuddyListAckBuilder *)addBuddyList:(Buddy*)value {
  if (resultGetBuddyListAck.buddyListArray == nil) {
    resultGetBuddyListAck.buddyListArray = [[NSMutableArray alloc]init];
  }
  [resultGetBuddyListAck.buddyListArray addObject:value];
  return self;
}
- (GetBuddyListAckBuilder *)setBuddyListArray:(NSArray *)array {
  resultGetBuddyListAck.buddyListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (GetBuddyListAckBuilder *)clearBuddyList {
  resultGetBuddyListAck.buddyListArray = nil;
  return self;
}
- (BOOL) hasRet {
  return resultGetBuddyListAck.hasRet;
}
- (SInt32) ret {
  return resultGetBuddyListAck.ret;
}
- (GetBuddyListAckBuilder*) setRet:(SInt32) value {
  resultGetBuddyListAck.hasRet = YES;
  resultGetBuddyListAck.ret = value;
  return self;
}
- (GetBuddyListAckBuilder*) clearRet {
  resultGetBuddyListAck.hasRet = NO;
  resultGetBuddyListAck.ret = 0;
  return self;
}
- (BOOL) hasErrorInfo {
  return resultGetBuddyListAck.hasErrorInfo;
}
- (NSString*) errorInfo {
  return resultGetBuddyListAck.errorInfo;
}
- (GetBuddyListAckBuilder*) setErrorInfo:(NSString*) value {
  resultGetBuddyListAck.hasErrorInfo = YES;
  resultGetBuddyListAck.errorInfo = value;
  return self;
}
- (GetBuddyListAckBuilder*) clearErrorInfo {
  resultGetBuddyListAck.hasErrorInfo = NO;
  resultGetBuddyListAck.errorInfo = @"";
  return self;
}
@end

@interface ChatMsg ()
@property UInt64 fromUid;
@property (strong) NSString* fromNickName;
@property UInt32 fromGender;
@property (strong) NSString* fromAvatar;
@property UInt64 toUid;
@property (strong) NSString* toNickName;
@property UInt32 toGender;
@property (strong) NSString* toAvatar;
@property UInt64 msgTime;
@property (strong) NSString* content;
@property UInt64 msgId;
@property UInt32 deviceType;
@end

@implementation ChatMsg

- (BOOL) hasFromUid {
  return !!hasFromUid_;
}
- (void) setHasFromUid:(BOOL) _value_ {
  hasFromUid_ = !!_value_;
}
@synthesize fromUid;
- (BOOL) hasFromNickName {
  return !!hasFromNickName_;
}
- (void) setHasFromNickName:(BOOL) _value_ {
  hasFromNickName_ = !!_value_;
}
@synthesize fromNickName;
- (BOOL) hasFromGender {
  return !!hasFromGender_;
}
- (void) setHasFromGender:(BOOL) _value_ {
  hasFromGender_ = !!_value_;
}
@synthesize fromGender;
- (BOOL) hasFromAvatar {
  return !!hasFromAvatar_;
}
- (void) setHasFromAvatar:(BOOL) _value_ {
  hasFromAvatar_ = !!_value_;
}
@synthesize fromAvatar;
- (BOOL) hasToUid {
  return !!hasToUid_;
}
- (void) setHasToUid:(BOOL) _value_ {
  hasToUid_ = !!_value_;
}
@synthesize toUid;
- (BOOL) hasToNickName {
  return !!hasToNickName_;
}
- (void) setHasToNickName:(BOOL) _value_ {
  hasToNickName_ = !!_value_;
}
@synthesize toNickName;
- (BOOL) hasToGender {
  return !!hasToGender_;
}
- (void) setHasToGender:(BOOL) _value_ {
  hasToGender_ = !!_value_;
}
@synthesize toGender;
- (BOOL) hasToAvatar {
  return !!hasToAvatar_;
}
- (void) setHasToAvatar:(BOOL) _value_ {
  hasToAvatar_ = !!_value_;
}
@synthesize toAvatar;
- (BOOL) hasMsgTime {
  return !!hasMsgTime_;
}
- (void) setHasMsgTime:(BOOL) _value_ {
  hasMsgTime_ = !!_value_;
}
@synthesize msgTime;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) _value_ {
  hasMsgId_ = !!_value_;
}
@synthesize msgId;
- (BOOL) hasDeviceType {
  return !!hasDeviceType_;
}
- (void) setHasDeviceType:(BOOL) _value_ {
  hasDeviceType_ = !!_value_;
}
@synthesize deviceType;
- (instancetype) init {
  if ((self = [super init])) {
    self.fromUid = 0L;
    self.fromNickName = @"";
    self.fromGender = 0;
    self.fromAvatar = @"";
    self.toUid = 0L;
    self.toNickName = @"";
    self.toGender = 0;
    self.toAvatar = @"";
    self.msgTime = 0L;
    self.content = @"";
    self.msgId = 0L;
    self.deviceType = 0;
  }
  return self;
}
static ChatMsg* defaultChatMsgInstance = nil;
+ (void) initialize {
  if (self == [ChatMsg class]) {
    defaultChatMsgInstance = [[ChatMsg alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultChatMsgInstance;
}
- (instancetype) defaultInstance {
  return defaultChatMsgInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFromUid) {
    return NO;
  }
  if (!self.hasFromNickName) {
    return NO;
  }
  if (!self.hasFromGender) {
    return NO;
  }
  if (!self.hasFromAvatar) {
    return NO;
  }
  if (!self.hasToUid) {
    return NO;
  }
  if (!self.hasToNickName) {
    return NO;
  }
  if (!self.hasToGender) {
    return NO;
  }
  if (!self.hasToAvatar) {
    return NO;
  }
  if (!self.hasMsgTime) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasMsgId) {
    return NO;
  }
  if (!self.hasDeviceType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFromUid) {
    [output writeUInt64:1 value:self.fromUid];
  }
  if (self.hasFromNickName) {
    [output writeString:2 value:self.fromNickName];
  }
  if (self.hasFromGender) {
    [output writeUInt32:3 value:self.fromGender];
  }
  if (self.hasFromAvatar) {
    [output writeString:4 value:self.fromAvatar];
  }
  if (self.hasToUid) {
    [output writeUInt64:5 value:self.toUid];
  }
  if (self.hasToNickName) {
    [output writeString:6 value:self.toNickName];
  }
  if (self.hasToGender) {
    [output writeUInt32:7 value:self.toGender];
  }
  if (self.hasToAvatar) {
    [output writeString:8 value:self.toAvatar];
  }
  if (self.hasMsgTime) {
    [output writeUInt64:9 value:self.msgTime];
  }
  if (self.hasContent) {
    [output writeString:10 value:self.content];
  }
  if (self.hasMsgId) {
    [output writeUInt64:11 value:self.msgId];
  }
  if (self.hasDeviceType) {
    [output writeUInt32:12 value:self.deviceType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFromUid) {
    size_ += computeUInt64Size(1, self.fromUid);
  }
  if (self.hasFromNickName) {
    size_ += computeStringSize(2, self.fromNickName);
  }
  if (self.hasFromGender) {
    size_ += computeUInt32Size(3, self.fromGender);
  }
  if (self.hasFromAvatar) {
    size_ += computeStringSize(4, self.fromAvatar);
  }
  if (self.hasToUid) {
    size_ += computeUInt64Size(5, self.toUid);
  }
  if (self.hasToNickName) {
    size_ += computeStringSize(6, self.toNickName);
  }
  if (self.hasToGender) {
    size_ += computeUInt32Size(7, self.toGender);
  }
  if (self.hasToAvatar) {
    size_ += computeStringSize(8, self.toAvatar);
  }
  if (self.hasMsgTime) {
    size_ += computeUInt64Size(9, self.msgTime);
  }
  if (self.hasContent) {
    size_ += computeStringSize(10, self.content);
  }
  if (self.hasMsgId) {
    size_ += computeUInt64Size(11, self.msgId);
  }
  if (self.hasDeviceType) {
    size_ += computeUInt32Size(12, self.deviceType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ChatMsg*) parseFromData:(NSData*) data {
  return (ChatMsg*)[[[ChatMsg builder] mergeFromData:data] build];
}
+ (ChatMsg*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatMsg*)[[[ChatMsg builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChatMsg*) parseFromInputStream:(NSInputStream*) input {
  return (ChatMsg*)[[[ChatMsg builder] mergeFromInputStream:input] build];
}
+ (ChatMsg*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatMsg*)[[[ChatMsg builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChatMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChatMsg*)[[[ChatMsg builder] mergeFromCodedInputStream:input] build];
}
+ (ChatMsg*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatMsg*)[[[ChatMsg builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChatMsgBuilder*) builder {
  return [[ChatMsgBuilder alloc] init];
}
+ (ChatMsgBuilder*) builderWithPrototype:(ChatMsg*) prototype {
  return [[ChatMsg builder] mergeFrom:prototype];
}
- (ChatMsgBuilder*) builder {
  return [ChatMsg builder];
}
- (ChatMsgBuilder*) toBuilder {
  return [ChatMsg builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFromUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromUid", [NSNumber numberWithLongLong:self.fromUid]];
  }
  if (self.hasFromNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromNickName", self.fromNickName];
  }
  if (self.hasFromGender) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromGender", [NSNumber numberWithInteger:self.fromGender]];
  }
  if (self.hasFromAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromAvatar", self.fromAvatar];
  }
  if (self.hasToUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toUid", [NSNumber numberWithLongLong:self.toUid]];
  }
  if (self.hasToNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toNickName", self.toNickName];
  }
  if (self.hasToGender) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toGender", [NSNumber numberWithInteger:self.toGender]];
  }
  if (self.hasToAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toAvatar", self.toAvatar];
  }
  if (self.hasMsgTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgTime", [NSNumber numberWithLongLong:self.msgTime]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", [NSNumber numberWithLongLong:self.msgId]];
  }
  if (self.hasDeviceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceType", [NSNumber numberWithInteger:self.deviceType]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasFromUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.fromUid] forKey: @"fromUid"];
  }
  if (self.hasFromNickName) {
    [dictionary setObject: self.fromNickName forKey: @"fromNickName"];
  }
  if (self.hasFromGender) {
    [dictionary setObject: [NSNumber numberWithInteger:self.fromGender] forKey: @"fromGender"];
  }
  if (self.hasFromAvatar) {
    [dictionary setObject: self.fromAvatar forKey: @"fromAvatar"];
  }
  if (self.hasToUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.toUid] forKey: @"toUid"];
  }
  if (self.hasToNickName) {
    [dictionary setObject: self.toNickName forKey: @"toNickName"];
  }
  if (self.hasToGender) {
    [dictionary setObject: [NSNumber numberWithInteger:self.toGender] forKey: @"toGender"];
  }
  if (self.hasToAvatar) {
    [dictionary setObject: self.toAvatar forKey: @"toAvatar"];
  }
  if (self.hasMsgTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgTime] forKey: @"msgTime"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasMsgId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgId] forKey: @"msgId"];
  }
  if (self.hasDeviceType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.deviceType] forKey: @"deviceType"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ChatMsg class]]) {
    return NO;
  }
  ChatMsg *otherMessage = other;
  return
      self.hasFromUid == otherMessage.hasFromUid &&
      (!self.hasFromUid || self.fromUid == otherMessage.fromUid) &&
      self.hasFromNickName == otherMessage.hasFromNickName &&
      (!self.hasFromNickName || [self.fromNickName isEqual:otherMessage.fromNickName]) &&
      self.hasFromGender == otherMessage.hasFromGender &&
      (!self.hasFromGender || self.fromGender == otherMessage.fromGender) &&
      self.hasFromAvatar == otherMessage.hasFromAvatar &&
      (!self.hasFromAvatar || [self.fromAvatar isEqual:otherMessage.fromAvatar]) &&
      self.hasToUid == otherMessage.hasToUid &&
      (!self.hasToUid || self.toUid == otherMessage.toUid) &&
      self.hasToNickName == otherMessage.hasToNickName &&
      (!self.hasToNickName || [self.toNickName isEqual:otherMessage.toNickName]) &&
      self.hasToGender == otherMessage.hasToGender &&
      (!self.hasToGender || self.toGender == otherMessage.toGender) &&
      self.hasToAvatar == otherMessage.hasToAvatar &&
      (!self.hasToAvatar || [self.toAvatar isEqual:otherMessage.toAvatar]) &&
      self.hasMsgTime == otherMessage.hasMsgTime &&
      (!self.hasMsgTime || self.msgTime == otherMessage.msgTime) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || self.msgId == otherMessage.msgId) &&
      self.hasDeviceType == otherMessage.hasDeviceType &&
      (!self.hasDeviceType || self.deviceType == otherMessage.deviceType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFromUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.fromUid] hash];
  }
  if (self.hasFromNickName) {
    hashCode = hashCode * 31 + [self.fromNickName hash];
  }
  if (self.hasFromGender) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.fromGender] hash];
  }
  if (self.hasFromAvatar) {
    hashCode = hashCode * 31 + [self.fromAvatar hash];
  }
  if (self.hasToUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.toUid] hash];
  }
  if (self.hasToNickName) {
    hashCode = hashCode * 31 + [self.toNickName hash];
  }
  if (self.hasToGender) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.toGender] hash];
  }
  if (self.hasToAvatar) {
    hashCode = hashCode * 31 + [self.toAvatar hash];
  }
  if (self.hasMsgTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgTime] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgId] hash];
  }
  if (self.hasDeviceType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.deviceType] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ChatMsgBuilder()
@property (strong) ChatMsg* resultChatMsg;
@end

@implementation ChatMsgBuilder
@synthesize resultChatMsg;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultChatMsg = [[ChatMsg alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultChatMsg;
}
- (ChatMsgBuilder*) clear {
  self.resultChatMsg = [[ChatMsg alloc] init];
  return self;
}
- (ChatMsgBuilder*) clone {
  return [ChatMsg builderWithPrototype:resultChatMsg];
}
- (ChatMsg*) defaultInstance {
  return [ChatMsg defaultInstance];
}
- (ChatMsg*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChatMsg*) buildPartial {
  ChatMsg* returnMe = resultChatMsg;
  self.resultChatMsg = nil;
  return returnMe;
}
- (ChatMsgBuilder*) mergeFrom:(ChatMsg*) other {
  if (other == [ChatMsg defaultInstance]) {
    return self;
  }
  if (other.hasFromUid) {
    [self setFromUid:other.fromUid];
  }
  if (other.hasFromNickName) {
    [self setFromNickName:other.fromNickName];
  }
  if (other.hasFromGender) {
    [self setFromGender:other.fromGender];
  }
  if (other.hasFromAvatar) {
    [self setFromAvatar:other.fromAvatar];
  }
  if (other.hasToUid) {
    [self setToUid:other.toUid];
  }
  if (other.hasToNickName) {
    [self setToNickName:other.toNickName];
  }
  if (other.hasToGender) {
    [self setToGender:other.toGender];
  }
  if (other.hasToAvatar) {
    [self setToAvatar:other.toAvatar];
  }
  if (other.hasMsgTime) {
    [self setMsgTime:other.msgTime];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasDeviceType) {
    [self setDeviceType:other.deviceType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChatMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChatMsgBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFromUid:[input readUInt64]];
        break;
      }
      case 18: {
        [self setFromNickName:[input readString]];
        break;
      }
      case 24: {
        [self setFromGender:[input readUInt32]];
        break;
      }
      case 34: {
        [self setFromAvatar:[input readString]];
        break;
      }
      case 40: {
        [self setToUid:[input readUInt64]];
        break;
      }
      case 50: {
        [self setToNickName:[input readString]];
        break;
      }
      case 56: {
        [self setToGender:[input readUInt32]];
        break;
      }
      case 66: {
        [self setToAvatar:[input readString]];
        break;
      }
      case 72: {
        [self setMsgTime:[input readUInt64]];
        break;
      }
      case 82: {
        [self setContent:[input readString]];
        break;
      }
      case 88: {
        [self setMsgId:[input readUInt64]];
        break;
      }
      case 96: {
        [self setDeviceType:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasFromUid {
  return resultChatMsg.hasFromUid;
}
- (UInt64) fromUid {
  return resultChatMsg.fromUid;
}
- (ChatMsgBuilder*) setFromUid:(UInt64) value {
  resultChatMsg.hasFromUid = YES;
  resultChatMsg.fromUid = value;
  return self;
}
- (ChatMsgBuilder*) clearFromUid {
  resultChatMsg.hasFromUid = NO;
  resultChatMsg.fromUid = 0L;
  return self;
}
- (BOOL) hasFromNickName {
  return resultChatMsg.hasFromNickName;
}
- (NSString*) fromNickName {
  return resultChatMsg.fromNickName;
}
- (ChatMsgBuilder*) setFromNickName:(NSString*) value {
  resultChatMsg.hasFromNickName = YES;
  resultChatMsg.fromNickName = value;
  return self;
}
- (ChatMsgBuilder*) clearFromNickName {
  resultChatMsg.hasFromNickName = NO;
  resultChatMsg.fromNickName = @"";
  return self;
}
- (BOOL) hasFromGender {
  return resultChatMsg.hasFromGender;
}
- (UInt32) fromGender {
  return resultChatMsg.fromGender;
}
- (ChatMsgBuilder*) setFromGender:(UInt32) value {
  resultChatMsg.hasFromGender = YES;
  resultChatMsg.fromGender = value;
  return self;
}
- (ChatMsgBuilder*) clearFromGender {
  resultChatMsg.hasFromGender = NO;
  resultChatMsg.fromGender = 0;
  return self;
}
- (BOOL) hasFromAvatar {
  return resultChatMsg.hasFromAvatar;
}
- (NSString*) fromAvatar {
  return resultChatMsg.fromAvatar;
}
- (ChatMsgBuilder*) setFromAvatar:(NSString*) value {
  resultChatMsg.hasFromAvatar = YES;
  resultChatMsg.fromAvatar = value;
  return self;
}
- (ChatMsgBuilder*) clearFromAvatar {
  resultChatMsg.hasFromAvatar = NO;
  resultChatMsg.fromAvatar = @"";
  return self;
}
- (BOOL) hasToUid {
  return resultChatMsg.hasToUid;
}
- (UInt64) toUid {
  return resultChatMsg.toUid;
}
- (ChatMsgBuilder*) setToUid:(UInt64) value {
  resultChatMsg.hasToUid = YES;
  resultChatMsg.toUid = value;
  return self;
}
- (ChatMsgBuilder*) clearToUid {
  resultChatMsg.hasToUid = NO;
  resultChatMsg.toUid = 0L;
  return self;
}
- (BOOL) hasToNickName {
  return resultChatMsg.hasToNickName;
}
- (NSString*) toNickName {
  return resultChatMsg.toNickName;
}
- (ChatMsgBuilder*) setToNickName:(NSString*) value {
  resultChatMsg.hasToNickName = YES;
  resultChatMsg.toNickName = value;
  return self;
}
- (ChatMsgBuilder*) clearToNickName {
  resultChatMsg.hasToNickName = NO;
  resultChatMsg.toNickName = @"";
  return self;
}
- (BOOL) hasToGender {
  return resultChatMsg.hasToGender;
}
- (UInt32) toGender {
  return resultChatMsg.toGender;
}
- (ChatMsgBuilder*) setToGender:(UInt32) value {
  resultChatMsg.hasToGender = YES;
  resultChatMsg.toGender = value;
  return self;
}
- (ChatMsgBuilder*) clearToGender {
  resultChatMsg.hasToGender = NO;
  resultChatMsg.toGender = 0;
  return self;
}
- (BOOL) hasToAvatar {
  return resultChatMsg.hasToAvatar;
}
- (NSString*) toAvatar {
  return resultChatMsg.toAvatar;
}
- (ChatMsgBuilder*) setToAvatar:(NSString*) value {
  resultChatMsg.hasToAvatar = YES;
  resultChatMsg.toAvatar = value;
  return self;
}
- (ChatMsgBuilder*) clearToAvatar {
  resultChatMsg.hasToAvatar = NO;
  resultChatMsg.toAvatar = @"";
  return self;
}
- (BOOL) hasMsgTime {
  return resultChatMsg.hasMsgTime;
}
- (UInt64) msgTime {
  return resultChatMsg.msgTime;
}
- (ChatMsgBuilder*) setMsgTime:(UInt64) value {
  resultChatMsg.hasMsgTime = YES;
  resultChatMsg.msgTime = value;
  return self;
}
- (ChatMsgBuilder*) clearMsgTime {
  resultChatMsg.hasMsgTime = NO;
  resultChatMsg.msgTime = 0L;
  return self;
}
- (BOOL) hasContent {
  return resultChatMsg.hasContent;
}
- (NSString*) content {
  return resultChatMsg.content;
}
- (ChatMsgBuilder*) setContent:(NSString*) value {
  resultChatMsg.hasContent = YES;
  resultChatMsg.content = value;
  return self;
}
- (ChatMsgBuilder*) clearContent {
  resultChatMsg.hasContent = NO;
  resultChatMsg.content = @"";
  return self;
}
- (BOOL) hasMsgId {
  return resultChatMsg.hasMsgId;
}
- (UInt64) msgId {
  return resultChatMsg.msgId;
}
- (ChatMsgBuilder*) setMsgId:(UInt64) value {
  resultChatMsg.hasMsgId = YES;
  resultChatMsg.msgId = value;
  return self;
}
- (ChatMsgBuilder*) clearMsgId {
  resultChatMsg.hasMsgId = NO;
  resultChatMsg.msgId = 0L;
  return self;
}
- (BOOL) hasDeviceType {
  return resultChatMsg.hasDeviceType;
}
- (UInt32) deviceType {
  return resultChatMsg.deviceType;
}
- (ChatMsgBuilder*) setDeviceType:(UInt32) value {
  resultChatMsg.hasDeviceType = YES;
  resultChatMsg.deviceType = value;
  return self;
}
- (ChatMsgBuilder*) clearDeviceType {
  resultChatMsg.hasDeviceType = NO;
  resultChatMsg.deviceType = 0;
  return self;
}
@end

@interface ChatMsgAck ()
@property UInt64 msgId;
@property SInt32 ret;
@property (strong) NSString* errorInfo;
@end

@implementation ChatMsgAck

- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) _value_ {
  hasMsgId_ = !!_value_;
}
@synthesize msgId;
- (BOOL) hasRet {
  return !!hasRet_;
}
- (void) setHasRet:(BOOL) _value_ {
  hasRet_ = !!_value_;
}
@synthesize ret;
- (BOOL) hasErrorInfo {
  return !!hasErrorInfo_;
}
- (void) setHasErrorInfo:(BOOL) _value_ {
  hasErrorInfo_ = !!_value_;
}
@synthesize errorInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.msgId = 0L;
    self.ret = 0;
    self.errorInfo = @"";
  }
  return self;
}
static ChatMsgAck* defaultChatMsgAckInstance = nil;
+ (void) initialize {
  if (self == [ChatMsgAck class]) {
    defaultChatMsgAckInstance = [[ChatMsgAck alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultChatMsgAckInstance;
}
- (instancetype) defaultInstance {
  return defaultChatMsgAckInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMsgId) {
    return NO;
  }
  if (!self.hasRet) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMsgId) {
    [output writeUInt64:1 value:self.msgId];
  }
  if (self.hasRet) {
    [output writeInt32:2 value:self.ret];
  }
  if (self.hasErrorInfo) {
    [output writeString:3 value:self.errorInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMsgId) {
    size_ += computeUInt64Size(1, self.msgId);
  }
  if (self.hasRet) {
    size_ += computeInt32Size(2, self.ret);
  }
  if (self.hasErrorInfo) {
    size_ += computeStringSize(3, self.errorInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ChatMsgAck*) parseFromData:(NSData*) data {
  return (ChatMsgAck*)[[[ChatMsgAck builder] mergeFromData:data] build];
}
+ (ChatMsgAck*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatMsgAck*)[[[ChatMsgAck builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ChatMsgAck*) parseFromInputStream:(NSInputStream*) input {
  return (ChatMsgAck*)[[[ChatMsgAck builder] mergeFromInputStream:input] build];
}
+ (ChatMsgAck*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatMsgAck*)[[[ChatMsgAck builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChatMsgAck*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ChatMsgAck*)[[[ChatMsgAck builder] mergeFromCodedInputStream:input] build];
}
+ (ChatMsgAck*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ChatMsgAck*)[[[ChatMsgAck builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ChatMsgAckBuilder*) builder {
  return [[ChatMsgAckBuilder alloc] init];
}
+ (ChatMsgAckBuilder*) builderWithPrototype:(ChatMsgAck*) prototype {
  return [[ChatMsgAck builder] mergeFrom:prototype];
}
- (ChatMsgAckBuilder*) builder {
  return [ChatMsgAck builder];
}
- (ChatMsgAckBuilder*) toBuilder {
  return [ChatMsgAck builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", [NSNumber numberWithLongLong:self.msgId]];
  }
  if (self.hasRet) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ret", [NSNumber numberWithInteger:self.ret]];
  }
  if (self.hasErrorInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorInfo", self.errorInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMsgId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgId] forKey: @"msgId"];
  }
  if (self.hasRet) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ret] forKey: @"ret"];
  }
  if (self.hasErrorInfo) {
    [dictionary setObject: self.errorInfo forKey: @"errorInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ChatMsgAck class]]) {
    return NO;
  }
  ChatMsgAck *otherMessage = other;
  return
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || self.msgId == otherMessage.msgId) &&
      self.hasRet == otherMessage.hasRet &&
      (!self.hasRet || self.ret == otherMessage.ret) &&
      self.hasErrorInfo == otherMessage.hasErrorInfo &&
      (!self.hasErrorInfo || [self.errorInfo isEqual:otherMessage.errorInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgId] hash];
  }
  if (self.hasRet) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ret] hash];
  }
  if (self.hasErrorInfo) {
    hashCode = hashCode * 31 + [self.errorInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ChatMsgAckBuilder()
@property (strong) ChatMsgAck* resultChatMsgAck;
@end

@implementation ChatMsgAckBuilder
@synthesize resultChatMsgAck;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultChatMsgAck = [[ChatMsgAck alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultChatMsgAck;
}
- (ChatMsgAckBuilder*) clear {
  self.resultChatMsgAck = [[ChatMsgAck alloc] init];
  return self;
}
- (ChatMsgAckBuilder*) clone {
  return [ChatMsgAck builderWithPrototype:resultChatMsgAck];
}
- (ChatMsgAck*) defaultInstance {
  return [ChatMsgAck defaultInstance];
}
- (ChatMsgAck*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ChatMsgAck*) buildPartial {
  ChatMsgAck* returnMe = resultChatMsgAck;
  self.resultChatMsgAck = nil;
  return returnMe;
}
- (ChatMsgAckBuilder*) mergeFrom:(ChatMsgAck*) other {
  if (other == [ChatMsgAck defaultInstance]) {
    return self;
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasRet) {
    [self setRet:other.ret];
  }
  if (other.hasErrorInfo) {
    [self setErrorInfo:other.errorInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ChatMsgAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ChatMsgAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMsgId:[input readUInt64]];
        break;
      }
      case 16: {
        [self setRet:[input readInt32]];
        break;
      }
      case 26: {
        [self setErrorInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMsgId {
  return resultChatMsgAck.hasMsgId;
}
- (UInt64) msgId {
  return resultChatMsgAck.msgId;
}
- (ChatMsgAckBuilder*) setMsgId:(UInt64) value {
  resultChatMsgAck.hasMsgId = YES;
  resultChatMsgAck.msgId = value;
  return self;
}
- (ChatMsgAckBuilder*) clearMsgId {
  resultChatMsgAck.hasMsgId = NO;
  resultChatMsgAck.msgId = 0L;
  return self;
}
- (BOOL) hasRet {
  return resultChatMsgAck.hasRet;
}
- (SInt32) ret {
  return resultChatMsgAck.ret;
}
- (ChatMsgAckBuilder*) setRet:(SInt32) value {
  resultChatMsgAck.hasRet = YES;
  resultChatMsgAck.ret = value;
  return self;
}
- (ChatMsgAckBuilder*) clearRet {
  resultChatMsgAck.hasRet = NO;
  resultChatMsgAck.ret = 0;
  return self;
}
- (BOOL) hasErrorInfo {
  return resultChatMsgAck.hasErrorInfo;
}
- (NSString*) errorInfo {
  return resultChatMsgAck.errorInfo;
}
- (ChatMsgAckBuilder*) setErrorInfo:(NSString*) value {
  resultChatMsgAck.hasErrorInfo = YES;
  resultChatMsgAck.errorInfo = value;
  return self;
}
- (ChatMsgAckBuilder*) clearErrorInfo {
  resultChatMsgAck.hasErrorInfo = NO;
  resultChatMsgAck.errorInfo = @"";
  return self;
}
@end

@interface ReceiveChatMsgAck ()
@property UInt64 uid;
@property UInt32 deviceType;
@property UInt32 type;
@property UInt64 buddyUid;
@property UInt32 groupId;
@property UInt64 msgId;
@property SInt32 ret;
@property (strong) NSString* errorInfo;
@end

@implementation ReceiveChatMsgAck

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (BOOL) hasDeviceType {
  return !!hasDeviceType_;
}
- (void) setHasDeviceType:(BOOL) _value_ {
  hasDeviceType_ = !!_value_;
}
@synthesize deviceType;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasBuddyUid {
  return !!hasBuddyUid_;
}
- (void) setHasBuddyUid:(BOOL) _value_ {
  hasBuddyUid_ = !!_value_;
}
@synthesize buddyUid;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) _value_ {
  hasMsgId_ = !!_value_;
}
@synthesize msgId;
- (BOOL) hasRet {
  return !!hasRet_;
}
- (void) setHasRet:(BOOL) _value_ {
  hasRet_ = !!_value_;
}
@synthesize ret;
- (BOOL) hasErrorInfo {
  return !!hasErrorInfo_;
}
- (void) setHasErrorInfo:(BOOL) _value_ {
  hasErrorInfo_ = !!_value_;
}
@synthesize errorInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
    self.deviceType = 0;
    self.type = 0;
    self.buddyUid = 0L;
    self.groupId = 0;
    self.msgId = 0L;
    self.ret = 0;
    self.errorInfo = @"";
  }
  return self;
}
static ReceiveChatMsgAck* defaultReceiveChatMsgAckInstance = nil;
+ (void) initialize {
  if (self == [ReceiveChatMsgAck class]) {
    defaultReceiveChatMsgAckInstance = [[ReceiveChatMsgAck alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultReceiveChatMsgAckInstance;
}
- (instancetype) defaultInstance {
  return defaultReceiveChatMsgAckInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUid) {
    return NO;
  }
  if (!self.hasDeviceType) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasBuddyUid) {
    return NO;
  }
  if (!self.hasGroupId) {
    return NO;
  }
  if (!self.hasMsgId) {
    return NO;
  }
  if (!self.hasRet) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  if (self.hasDeviceType) {
    [output writeUInt32:2 value:self.deviceType];
  }
  if (self.hasType) {
    [output writeUInt32:3 value:self.type];
  }
  if (self.hasBuddyUid) {
    [output writeUInt64:4 value:self.buddyUid];
  }
  if (self.hasGroupId) {
    [output writeUInt32:5 value:self.groupId];
  }
  if (self.hasMsgId) {
    [output writeUInt64:6 value:self.msgId];
  }
  if (self.hasRet) {
    [output writeInt32:7 value:self.ret];
  }
  if (self.hasErrorInfo) {
    [output writeString:8 value:self.errorInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  if (self.hasDeviceType) {
    size_ += computeUInt32Size(2, self.deviceType);
  }
  if (self.hasType) {
    size_ += computeUInt32Size(3, self.type);
  }
  if (self.hasBuddyUid) {
    size_ += computeUInt64Size(4, self.buddyUid);
  }
  if (self.hasGroupId) {
    size_ += computeUInt32Size(5, self.groupId);
  }
  if (self.hasMsgId) {
    size_ += computeUInt64Size(6, self.msgId);
  }
  if (self.hasRet) {
    size_ += computeInt32Size(7, self.ret);
  }
  if (self.hasErrorInfo) {
    size_ += computeStringSize(8, self.errorInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ReceiveChatMsgAck*) parseFromData:(NSData*) data {
  return (ReceiveChatMsgAck*)[[[ReceiveChatMsgAck builder] mergeFromData:data] build];
}
+ (ReceiveChatMsgAck*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReceiveChatMsgAck*)[[[ReceiveChatMsgAck builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ReceiveChatMsgAck*) parseFromInputStream:(NSInputStream*) input {
  return (ReceiveChatMsgAck*)[[[ReceiveChatMsgAck builder] mergeFromInputStream:input] build];
}
+ (ReceiveChatMsgAck*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReceiveChatMsgAck*)[[[ReceiveChatMsgAck builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReceiveChatMsgAck*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ReceiveChatMsgAck*)[[[ReceiveChatMsgAck builder] mergeFromCodedInputStream:input] build];
}
+ (ReceiveChatMsgAck*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReceiveChatMsgAck*)[[[ReceiveChatMsgAck builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReceiveChatMsgAckBuilder*) builder {
  return [[ReceiveChatMsgAckBuilder alloc] init];
}
+ (ReceiveChatMsgAckBuilder*) builderWithPrototype:(ReceiveChatMsgAck*) prototype {
  return [[ReceiveChatMsgAck builder] mergeFrom:prototype];
}
- (ReceiveChatMsgAckBuilder*) builder {
  return [ReceiveChatMsgAck builder];
}
- (ReceiveChatMsgAckBuilder*) toBuilder {
  return [ReceiveChatMsgAck builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  if (self.hasDeviceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceType", [NSNumber numberWithInteger:self.deviceType]];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", [NSNumber numberWithInteger:self.type]];
  }
  if (self.hasBuddyUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"buddyUid", [NSNumber numberWithLongLong:self.buddyUid]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", [NSNumber numberWithInteger:self.groupId]];
  }
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", [NSNumber numberWithLongLong:self.msgId]];
  }
  if (self.hasRet) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ret", [NSNumber numberWithInteger:self.ret]];
  }
  if (self.hasErrorInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorInfo", self.errorInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.uid] forKey: @"uid"];
  }
  if (self.hasDeviceType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.deviceType] forKey: @"deviceType"];
  }
  if (self.hasType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.type] forKey: @"type"];
  }
  if (self.hasBuddyUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.buddyUid] forKey: @"buddyUid"];
  }
  if (self.hasGroupId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.groupId] forKey: @"groupId"];
  }
  if (self.hasMsgId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgId] forKey: @"msgId"];
  }
  if (self.hasRet) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ret] forKey: @"ret"];
  }
  if (self.hasErrorInfo) {
    [dictionary setObject: self.errorInfo forKey: @"errorInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ReceiveChatMsgAck class]]) {
    return NO;
  }
  ReceiveChatMsgAck *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      self.hasDeviceType == otherMessage.hasDeviceType &&
      (!self.hasDeviceType || self.deviceType == otherMessage.deviceType) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasBuddyUid == otherMessage.hasBuddyUid &&
      (!self.hasBuddyUid || self.buddyUid == otherMessage.buddyUid) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || self.groupId == otherMessage.groupId) &&
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || self.msgId == otherMessage.msgId) &&
      self.hasRet == otherMessage.hasRet &&
      (!self.hasRet || self.ret == otherMessage.ret) &&
      self.hasErrorInfo == otherMessage.hasErrorInfo &&
      (!self.hasErrorInfo || [self.errorInfo isEqual:otherMessage.errorInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  if (self.hasDeviceType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.deviceType] hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.type] hash];
  }
  if (self.hasBuddyUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.buddyUid] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.groupId] hash];
  }
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgId] hash];
  }
  if (self.hasRet) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ret] hash];
  }
  if (self.hasErrorInfo) {
    hashCode = hashCode * 31 + [self.errorInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ReceiveChatMsgAckBuilder()
@property (strong) ReceiveChatMsgAck* resultReceiveChatMsgAck;
@end

@implementation ReceiveChatMsgAckBuilder
@synthesize resultReceiveChatMsgAck;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReceiveChatMsgAck = [[ReceiveChatMsgAck alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReceiveChatMsgAck;
}
- (ReceiveChatMsgAckBuilder*) clear {
  self.resultReceiveChatMsgAck = [[ReceiveChatMsgAck alloc] init];
  return self;
}
- (ReceiveChatMsgAckBuilder*) clone {
  return [ReceiveChatMsgAck builderWithPrototype:resultReceiveChatMsgAck];
}
- (ReceiveChatMsgAck*) defaultInstance {
  return [ReceiveChatMsgAck defaultInstance];
}
- (ReceiveChatMsgAck*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ReceiveChatMsgAck*) buildPartial {
  ReceiveChatMsgAck* returnMe = resultReceiveChatMsgAck;
  self.resultReceiveChatMsgAck = nil;
  return returnMe;
}
- (ReceiveChatMsgAckBuilder*) mergeFrom:(ReceiveChatMsgAck*) other {
  if (other == [ReceiveChatMsgAck defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasDeviceType) {
    [self setDeviceType:other.deviceType];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasBuddyUid) {
    [self setBuddyUid:other.buddyUid];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasRet) {
    [self setRet:other.ret];
  }
  if (other.hasErrorInfo) {
    [self setErrorInfo:other.errorInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ReceiveChatMsgAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ReceiveChatMsgAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
      case 16: {
        [self setDeviceType:[input readUInt32]];
        break;
      }
      case 24: {
        [self setType:[input readUInt32]];
        break;
      }
      case 32: {
        [self setBuddyUid:[input readUInt64]];
        break;
      }
      case 40: {
        [self setGroupId:[input readUInt32]];
        break;
      }
      case 48: {
        [self setMsgId:[input readUInt64]];
        break;
      }
      case 56: {
        [self setRet:[input readInt32]];
        break;
      }
      case 66: {
        [self setErrorInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultReceiveChatMsgAck.hasUid;
}
- (UInt64) uid {
  return resultReceiveChatMsgAck.uid;
}
- (ReceiveChatMsgAckBuilder*) setUid:(UInt64) value {
  resultReceiveChatMsgAck.hasUid = YES;
  resultReceiveChatMsgAck.uid = value;
  return self;
}
- (ReceiveChatMsgAckBuilder*) clearUid {
  resultReceiveChatMsgAck.hasUid = NO;
  resultReceiveChatMsgAck.uid = 0L;
  return self;
}
- (BOOL) hasDeviceType {
  return resultReceiveChatMsgAck.hasDeviceType;
}
- (UInt32) deviceType {
  return resultReceiveChatMsgAck.deviceType;
}
- (ReceiveChatMsgAckBuilder*) setDeviceType:(UInt32) value {
  resultReceiveChatMsgAck.hasDeviceType = YES;
  resultReceiveChatMsgAck.deviceType = value;
  return self;
}
- (ReceiveChatMsgAckBuilder*) clearDeviceType {
  resultReceiveChatMsgAck.hasDeviceType = NO;
  resultReceiveChatMsgAck.deviceType = 0;
  return self;
}
- (BOOL) hasType {
  return resultReceiveChatMsgAck.hasType;
}
- (UInt32) type {
  return resultReceiveChatMsgAck.type;
}
- (ReceiveChatMsgAckBuilder*) setType:(UInt32) value {
  resultReceiveChatMsgAck.hasType = YES;
  resultReceiveChatMsgAck.type = value;
  return self;
}
- (ReceiveChatMsgAckBuilder*) clearType {
  resultReceiveChatMsgAck.hasType = NO;
  resultReceiveChatMsgAck.type = 0;
  return self;
}
- (BOOL) hasBuddyUid {
  return resultReceiveChatMsgAck.hasBuddyUid;
}
- (UInt64) buddyUid {
  return resultReceiveChatMsgAck.buddyUid;
}
- (ReceiveChatMsgAckBuilder*) setBuddyUid:(UInt64) value {
  resultReceiveChatMsgAck.hasBuddyUid = YES;
  resultReceiveChatMsgAck.buddyUid = value;
  return self;
}
- (ReceiveChatMsgAckBuilder*) clearBuddyUid {
  resultReceiveChatMsgAck.hasBuddyUid = NO;
  resultReceiveChatMsgAck.buddyUid = 0L;
  return self;
}
- (BOOL) hasGroupId {
  return resultReceiveChatMsgAck.hasGroupId;
}
- (UInt32) groupId {
  return resultReceiveChatMsgAck.groupId;
}
- (ReceiveChatMsgAckBuilder*) setGroupId:(UInt32) value {
  resultReceiveChatMsgAck.hasGroupId = YES;
  resultReceiveChatMsgAck.groupId = value;
  return self;
}
- (ReceiveChatMsgAckBuilder*) clearGroupId {
  resultReceiveChatMsgAck.hasGroupId = NO;
  resultReceiveChatMsgAck.groupId = 0;
  return self;
}
- (BOOL) hasMsgId {
  return resultReceiveChatMsgAck.hasMsgId;
}
- (UInt64) msgId {
  return resultReceiveChatMsgAck.msgId;
}
- (ReceiveChatMsgAckBuilder*) setMsgId:(UInt64) value {
  resultReceiveChatMsgAck.hasMsgId = YES;
  resultReceiveChatMsgAck.msgId = value;
  return self;
}
- (ReceiveChatMsgAckBuilder*) clearMsgId {
  resultReceiveChatMsgAck.hasMsgId = NO;
  resultReceiveChatMsgAck.msgId = 0L;
  return self;
}
- (BOOL) hasRet {
  return resultReceiveChatMsgAck.hasRet;
}
- (SInt32) ret {
  return resultReceiveChatMsgAck.ret;
}
- (ReceiveChatMsgAckBuilder*) setRet:(SInt32) value {
  resultReceiveChatMsgAck.hasRet = YES;
  resultReceiveChatMsgAck.ret = value;
  return self;
}
- (ReceiveChatMsgAckBuilder*) clearRet {
  resultReceiveChatMsgAck.hasRet = NO;
  resultReceiveChatMsgAck.ret = 0;
  return self;
}
- (BOOL) hasErrorInfo {
  return resultReceiveChatMsgAck.hasErrorInfo;
}
- (NSString*) errorInfo {
  return resultReceiveChatMsgAck.errorInfo;
}
- (ReceiveChatMsgAckBuilder*) setErrorInfo:(NSString*) value {
  resultReceiveChatMsgAck.hasErrorInfo = YES;
  resultReceiveChatMsgAck.errorInfo = value;
  return self;
}
- (ReceiveChatMsgAckBuilder*) clearErrorInfo {
  resultReceiveChatMsgAck.hasErrorInfo = NO;
  resultReceiveChatMsgAck.errorInfo = @"";
  return self;
}
@end

@interface ModifySubGroup ()
@property UInt64 uid;
@property UInt32 method;
@property UInt32 subGroupId;
@property (strong) NSString* subGroupName;
@property UInt32 moveTo;
@end

@implementation ModifySubGroup

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (BOOL) hasMethod {
  return !!hasMethod_;
}
- (void) setHasMethod:(BOOL) _value_ {
  hasMethod_ = !!_value_;
}
@synthesize method;
- (BOOL) hasSubGroupId {
  return !!hasSubGroupId_;
}
- (void) setHasSubGroupId:(BOOL) _value_ {
  hasSubGroupId_ = !!_value_;
}
@synthesize subGroupId;
- (BOOL) hasSubGroupName {
  return !!hasSubGroupName_;
}
- (void) setHasSubGroupName:(BOOL) _value_ {
  hasSubGroupName_ = !!_value_;
}
@synthesize subGroupName;
- (BOOL) hasMoveTo {
  return !!hasMoveTo_;
}
- (void) setHasMoveTo:(BOOL) _value_ {
  hasMoveTo_ = !!_value_;
}
@synthesize moveTo;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
    self.method = 0;
    self.subGroupId = 0;
    self.subGroupName = @"";
    self.moveTo = 0;
  }
  return self;
}
static ModifySubGroup* defaultModifySubGroupInstance = nil;
+ (void) initialize {
  if (self == [ModifySubGroup class]) {
    defaultModifySubGroupInstance = [[ModifySubGroup alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultModifySubGroupInstance;
}
- (instancetype) defaultInstance {
  return defaultModifySubGroupInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUid) {
    return NO;
  }
  if (!self.hasMethod) {
    return NO;
  }
  if (!self.hasSubGroupId) {
    return NO;
  }
  if (!self.hasSubGroupName) {
    return NO;
  }
  if (!self.hasMoveTo) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  if (self.hasMethod) {
    [output writeUInt32:2 value:self.method];
  }
  if (self.hasSubGroupId) {
    [output writeUInt32:3 value:self.subGroupId];
  }
  if (self.hasSubGroupName) {
    [output writeString:4 value:self.subGroupName];
  }
  if (self.hasMoveTo) {
    [output writeUInt32:5 value:self.moveTo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  if (self.hasMethod) {
    size_ += computeUInt32Size(2, self.method);
  }
  if (self.hasSubGroupId) {
    size_ += computeUInt32Size(3, self.subGroupId);
  }
  if (self.hasSubGroupName) {
    size_ += computeStringSize(4, self.subGroupName);
  }
  if (self.hasMoveTo) {
    size_ += computeUInt32Size(5, self.moveTo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ModifySubGroup*) parseFromData:(NSData*) data {
  return (ModifySubGroup*)[[[ModifySubGroup builder] mergeFromData:data] build];
}
+ (ModifySubGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ModifySubGroup*)[[[ModifySubGroup builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ModifySubGroup*) parseFromInputStream:(NSInputStream*) input {
  return (ModifySubGroup*)[[[ModifySubGroup builder] mergeFromInputStream:input] build];
}
+ (ModifySubGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ModifySubGroup*)[[[ModifySubGroup builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ModifySubGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ModifySubGroup*)[[[ModifySubGroup builder] mergeFromCodedInputStream:input] build];
}
+ (ModifySubGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ModifySubGroup*)[[[ModifySubGroup builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ModifySubGroupBuilder*) builder {
  return [[ModifySubGroupBuilder alloc] init];
}
+ (ModifySubGroupBuilder*) builderWithPrototype:(ModifySubGroup*) prototype {
  return [[ModifySubGroup builder] mergeFrom:prototype];
}
- (ModifySubGroupBuilder*) builder {
  return [ModifySubGroup builder];
}
- (ModifySubGroupBuilder*) toBuilder {
  return [ModifySubGroup builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  if (self.hasMethod) {
    [output appendFormat:@"%@%@: %@\n", indent, @"method", [NSNumber numberWithInteger:self.method]];
  }
  if (self.hasSubGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"subGroupId", [NSNumber numberWithInteger:self.subGroupId]];
  }
  if (self.hasSubGroupName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"subGroupName", self.subGroupName];
  }
  if (self.hasMoveTo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"moveTo", [NSNumber numberWithInteger:self.moveTo]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.uid] forKey: @"uid"];
  }
  if (self.hasMethod) {
    [dictionary setObject: [NSNumber numberWithInteger:self.method] forKey: @"method"];
  }
  if (self.hasSubGroupId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.subGroupId] forKey: @"subGroupId"];
  }
  if (self.hasSubGroupName) {
    [dictionary setObject: self.subGroupName forKey: @"subGroupName"];
  }
  if (self.hasMoveTo) {
    [dictionary setObject: [NSNumber numberWithInteger:self.moveTo] forKey: @"moveTo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ModifySubGroup class]]) {
    return NO;
  }
  ModifySubGroup *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      self.hasMethod == otherMessage.hasMethod &&
      (!self.hasMethod || self.method == otherMessage.method) &&
      self.hasSubGroupId == otherMessage.hasSubGroupId &&
      (!self.hasSubGroupId || self.subGroupId == otherMessage.subGroupId) &&
      self.hasSubGroupName == otherMessage.hasSubGroupName &&
      (!self.hasSubGroupName || [self.subGroupName isEqual:otherMessage.subGroupName]) &&
      self.hasMoveTo == otherMessage.hasMoveTo &&
      (!self.hasMoveTo || self.moveTo == otherMessage.moveTo) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  if (self.hasMethod) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.method] hash];
  }
  if (self.hasSubGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.subGroupId] hash];
  }
  if (self.hasSubGroupName) {
    hashCode = hashCode * 31 + [self.subGroupName hash];
  }
  if (self.hasMoveTo) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.moveTo] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ModifySubGroupBuilder()
@property (strong) ModifySubGroup* resultModifySubGroup;
@end

@implementation ModifySubGroupBuilder
@synthesize resultModifySubGroup;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultModifySubGroup = [[ModifySubGroup alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultModifySubGroup;
}
- (ModifySubGroupBuilder*) clear {
  self.resultModifySubGroup = [[ModifySubGroup alloc] init];
  return self;
}
- (ModifySubGroupBuilder*) clone {
  return [ModifySubGroup builderWithPrototype:resultModifySubGroup];
}
- (ModifySubGroup*) defaultInstance {
  return [ModifySubGroup defaultInstance];
}
- (ModifySubGroup*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ModifySubGroup*) buildPartial {
  ModifySubGroup* returnMe = resultModifySubGroup;
  self.resultModifySubGroup = nil;
  return returnMe;
}
- (ModifySubGroupBuilder*) mergeFrom:(ModifySubGroup*) other {
  if (other == [ModifySubGroup defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasMethod) {
    [self setMethod:other.method];
  }
  if (other.hasSubGroupId) {
    [self setSubGroupId:other.subGroupId];
  }
  if (other.hasSubGroupName) {
    [self setSubGroupName:other.subGroupName];
  }
  if (other.hasMoveTo) {
    [self setMoveTo:other.moveTo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ModifySubGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ModifySubGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
      case 16: {
        [self setMethod:[input readUInt32]];
        break;
      }
      case 24: {
        [self setSubGroupId:[input readUInt32]];
        break;
      }
      case 34: {
        [self setSubGroupName:[input readString]];
        break;
      }
      case 40: {
        [self setMoveTo:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultModifySubGroup.hasUid;
}
- (UInt64) uid {
  return resultModifySubGroup.uid;
}
- (ModifySubGroupBuilder*) setUid:(UInt64) value {
  resultModifySubGroup.hasUid = YES;
  resultModifySubGroup.uid = value;
  return self;
}
- (ModifySubGroupBuilder*) clearUid {
  resultModifySubGroup.hasUid = NO;
  resultModifySubGroup.uid = 0L;
  return self;
}
- (BOOL) hasMethod {
  return resultModifySubGroup.hasMethod;
}
- (UInt32) method {
  return resultModifySubGroup.method;
}
- (ModifySubGroupBuilder*) setMethod:(UInt32) value {
  resultModifySubGroup.hasMethod = YES;
  resultModifySubGroup.method = value;
  return self;
}
- (ModifySubGroupBuilder*) clearMethod {
  resultModifySubGroup.hasMethod = NO;
  resultModifySubGroup.method = 0;
  return self;
}
- (BOOL) hasSubGroupId {
  return resultModifySubGroup.hasSubGroupId;
}
- (UInt32) subGroupId {
  return resultModifySubGroup.subGroupId;
}
- (ModifySubGroupBuilder*) setSubGroupId:(UInt32) value {
  resultModifySubGroup.hasSubGroupId = YES;
  resultModifySubGroup.subGroupId = value;
  return self;
}
- (ModifySubGroupBuilder*) clearSubGroupId {
  resultModifySubGroup.hasSubGroupId = NO;
  resultModifySubGroup.subGroupId = 0;
  return self;
}
- (BOOL) hasSubGroupName {
  return resultModifySubGroup.hasSubGroupName;
}
- (NSString*) subGroupName {
  return resultModifySubGroup.subGroupName;
}
- (ModifySubGroupBuilder*) setSubGroupName:(NSString*) value {
  resultModifySubGroup.hasSubGroupName = YES;
  resultModifySubGroup.subGroupName = value;
  return self;
}
- (ModifySubGroupBuilder*) clearSubGroupName {
  resultModifySubGroup.hasSubGroupName = NO;
  resultModifySubGroup.subGroupName = @"";
  return self;
}
- (BOOL) hasMoveTo {
  return resultModifySubGroup.hasMoveTo;
}
- (UInt32) moveTo {
  return resultModifySubGroup.moveTo;
}
- (ModifySubGroupBuilder*) setMoveTo:(UInt32) value {
  resultModifySubGroup.hasMoveTo = YES;
  resultModifySubGroup.moveTo = value;
  return self;
}
- (ModifySubGroupBuilder*) clearMoveTo {
  resultModifySubGroup.hasMoveTo = NO;
  resultModifySubGroup.moveTo = 0;
  return self;
}
@end

@interface ModifySubGroupAck ()
@property SInt32 ret;
@property (strong) NSString* errorInfo;
@end

@implementation ModifySubGroupAck

- (BOOL) hasRet {
  return !!hasRet_;
}
- (void) setHasRet:(BOOL) _value_ {
  hasRet_ = !!_value_;
}
@synthesize ret;
- (BOOL) hasErrorInfo {
  return !!hasErrorInfo_;
}
- (void) setHasErrorInfo:(BOOL) _value_ {
  hasErrorInfo_ = !!_value_;
}
@synthesize errorInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.ret = 0;
    self.errorInfo = @"";
  }
  return self;
}
static ModifySubGroupAck* defaultModifySubGroupAckInstance = nil;
+ (void) initialize {
  if (self == [ModifySubGroupAck class]) {
    defaultModifySubGroupAckInstance = [[ModifySubGroupAck alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultModifySubGroupAckInstance;
}
- (instancetype) defaultInstance {
  return defaultModifySubGroupAckInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRet) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRet) {
    [output writeInt32:1 value:self.ret];
  }
  if (self.hasErrorInfo) {
    [output writeString:2 value:self.errorInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRet) {
    size_ += computeInt32Size(1, self.ret);
  }
  if (self.hasErrorInfo) {
    size_ += computeStringSize(2, self.errorInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ModifySubGroupAck*) parseFromData:(NSData*) data {
  return (ModifySubGroupAck*)[[[ModifySubGroupAck builder] mergeFromData:data] build];
}
+ (ModifySubGroupAck*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ModifySubGroupAck*)[[[ModifySubGroupAck builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ModifySubGroupAck*) parseFromInputStream:(NSInputStream*) input {
  return (ModifySubGroupAck*)[[[ModifySubGroupAck builder] mergeFromInputStream:input] build];
}
+ (ModifySubGroupAck*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ModifySubGroupAck*)[[[ModifySubGroupAck builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ModifySubGroupAck*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ModifySubGroupAck*)[[[ModifySubGroupAck builder] mergeFromCodedInputStream:input] build];
}
+ (ModifySubGroupAck*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ModifySubGroupAck*)[[[ModifySubGroupAck builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ModifySubGroupAckBuilder*) builder {
  return [[ModifySubGroupAckBuilder alloc] init];
}
+ (ModifySubGroupAckBuilder*) builderWithPrototype:(ModifySubGroupAck*) prototype {
  return [[ModifySubGroupAck builder] mergeFrom:prototype];
}
- (ModifySubGroupAckBuilder*) builder {
  return [ModifySubGroupAck builder];
}
- (ModifySubGroupAckBuilder*) toBuilder {
  return [ModifySubGroupAck builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRet) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ret", [NSNumber numberWithInteger:self.ret]];
  }
  if (self.hasErrorInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorInfo", self.errorInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasRet) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ret] forKey: @"ret"];
  }
  if (self.hasErrorInfo) {
    [dictionary setObject: self.errorInfo forKey: @"errorInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ModifySubGroupAck class]]) {
    return NO;
  }
  ModifySubGroupAck *otherMessage = other;
  return
      self.hasRet == otherMessage.hasRet &&
      (!self.hasRet || self.ret == otherMessage.ret) &&
      self.hasErrorInfo == otherMessage.hasErrorInfo &&
      (!self.hasErrorInfo || [self.errorInfo isEqual:otherMessage.errorInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasRet) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ret] hash];
  }
  if (self.hasErrorInfo) {
    hashCode = hashCode * 31 + [self.errorInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ModifySubGroupAckBuilder()
@property (strong) ModifySubGroupAck* resultModifySubGroupAck;
@end

@implementation ModifySubGroupAckBuilder
@synthesize resultModifySubGroupAck;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultModifySubGroupAck = [[ModifySubGroupAck alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultModifySubGroupAck;
}
- (ModifySubGroupAckBuilder*) clear {
  self.resultModifySubGroupAck = [[ModifySubGroupAck alloc] init];
  return self;
}
- (ModifySubGroupAckBuilder*) clone {
  return [ModifySubGroupAck builderWithPrototype:resultModifySubGroupAck];
}
- (ModifySubGroupAck*) defaultInstance {
  return [ModifySubGroupAck defaultInstance];
}
- (ModifySubGroupAck*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ModifySubGroupAck*) buildPartial {
  ModifySubGroupAck* returnMe = resultModifySubGroupAck;
  self.resultModifySubGroupAck = nil;
  return returnMe;
}
- (ModifySubGroupAckBuilder*) mergeFrom:(ModifySubGroupAck*) other {
  if (other == [ModifySubGroupAck defaultInstance]) {
    return self;
  }
  if (other.hasRet) {
    [self setRet:other.ret];
  }
  if (other.hasErrorInfo) {
    [self setErrorInfo:other.errorInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ModifySubGroupAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ModifySubGroupAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRet:[input readInt32]];
        break;
      }
      case 18: {
        [self setErrorInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRet {
  return resultModifySubGroupAck.hasRet;
}
- (SInt32) ret {
  return resultModifySubGroupAck.ret;
}
- (ModifySubGroupAckBuilder*) setRet:(SInt32) value {
  resultModifySubGroupAck.hasRet = YES;
  resultModifySubGroupAck.ret = value;
  return self;
}
- (ModifySubGroupAckBuilder*) clearRet {
  resultModifySubGroupAck.hasRet = NO;
  resultModifySubGroupAck.ret = 0;
  return self;
}
- (BOOL) hasErrorInfo {
  return resultModifySubGroupAck.hasErrorInfo;
}
- (NSString*) errorInfo {
  return resultModifySubGroupAck.errorInfo;
}
- (ModifySubGroupAckBuilder*) setErrorInfo:(NSString*) value {
  resultModifySubGroupAck.hasErrorInfo = YES;
  resultModifySubGroupAck.errorInfo = value;
  return self;
}
- (ModifySubGroupAckBuilder*) clearErrorInfo {
  resultModifySubGroupAck.hasErrorInfo = NO;
  resultModifySubGroupAck.errorInfo = @"";
  return self;
}
@end

@interface AddBuddy ()
@property UInt64 requesterId;
@property (strong) NSString* requesterNickName;
@property UInt32 requesterGender;
@property (strong) NSString* requesterAvatar;
@property UInt64 buddyUid;
@property UInt64 msgId;
@property (strong) NSString* vertifyContent;
@property UInt32 subGroupId;
@end

@implementation AddBuddy

- (BOOL) hasRequesterId {
  return !!hasRequesterId_;
}
- (void) setHasRequesterId:(BOOL) _value_ {
  hasRequesterId_ = !!_value_;
}
@synthesize requesterId;
- (BOOL) hasRequesterNickName {
  return !!hasRequesterNickName_;
}
- (void) setHasRequesterNickName:(BOOL) _value_ {
  hasRequesterNickName_ = !!_value_;
}
@synthesize requesterNickName;
- (BOOL) hasRequesterGender {
  return !!hasRequesterGender_;
}
- (void) setHasRequesterGender:(BOOL) _value_ {
  hasRequesterGender_ = !!_value_;
}
@synthesize requesterGender;
- (BOOL) hasRequesterAvatar {
  return !!hasRequesterAvatar_;
}
- (void) setHasRequesterAvatar:(BOOL) _value_ {
  hasRequesterAvatar_ = !!_value_;
}
@synthesize requesterAvatar;
- (BOOL) hasBuddyUid {
  return !!hasBuddyUid_;
}
- (void) setHasBuddyUid:(BOOL) _value_ {
  hasBuddyUid_ = !!_value_;
}
@synthesize buddyUid;
- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) _value_ {
  hasMsgId_ = !!_value_;
}
@synthesize msgId;
- (BOOL) hasVertifyContent {
  return !!hasVertifyContent_;
}
- (void) setHasVertifyContent:(BOOL) _value_ {
  hasVertifyContent_ = !!_value_;
}
@synthesize vertifyContent;
- (BOOL) hasSubGroupId {
  return !!hasSubGroupId_;
}
- (void) setHasSubGroupId:(BOOL) _value_ {
  hasSubGroupId_ = !!_value_;
}
@synthesize subGroupId;
- (instancetype) init {
  if ((self = [super init])) {
    self.requesterId = 0L;
    self.requesterNickName = @"";
    self.requesterGender = 0;
    self.requesterAvatar = @"";
    self.buddyUid = 0L;
    self.msgId = 0L;
    self.vertifyContent = @"";
    self.subGroupId = 0;
  }
  return self;
}
static AddBuddy* defaultAddBuddyInstance = nil;
+ (void) initialize {
  if (self == [AddBuddy class]) {
    defaultAddBuddyInstance = [[AddBuddy alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultAddBuddyInstance;
}
- (instancetype) defaultInstance {
  return defaultAddBuddyInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRequesterId) {
    return NO;
  }
  if (!self.hasRequesterNickName) {
    return NO;
  }
  if (!self.hasRequesterGender) {
    return NO;
  }
  if (!self.hasRequesterAvatar) {
    return NO;
  }
  if (!self.hasBuddyUid) {
    return NO;
  }
  if (!self.hasMsgId) {
    return NO;
  }
  if (!self.hasVertifyContent) {
    return NO;
  }
  if (!self.hasSubGroupId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRequesterId) {
    [output writeUInt64:1 value:self.requesterId];
  }
  if (self.hasRequesterNickName) {
    [output writeString:2 value:self.requesterNickName];
  }
  if (self.hasRequesterGender) {
    [output writeUInt32:3 value:self.requesterGender];
  }
  if (self.hasRequesterAvatar) {
    [output writeString:4 value:self.requesterAvatar];
  }
  if (self.hasBuddyUid) {
    [output writeUInt64:5 value:self.buddyUid];
  }
  if (self.hasMsgId) {
    [output writeUInt64:6 value:self.msgId];
  }
  if (self.hasVertifyContent) {
    [output writeString:7 value:self.vertifyContent];
  }
  if (self.hasSubGroupId) {
    [output writeUInt32:8 value:self.subGroupId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRequesterId) {
    size_ += computeUInt64Size(1, self.requesterId);
  }
  if (self.hasRequesterNickName) {
    size_ += computeStringSize(2, self.requesterNickName);
  }
  if (self.hasRequesterGender) {
    size_ += computeUInt32Size(3, self.requesterGender);
  }
  if (self.hasRequesterAvatar) {
    size_ += computeStringSize(4, self.requesterAvatar);
  }
  if (self.hasBuddyUid) {
    size_ += computeUInt64Size(5, self.buddyUid);
  }
  if (self.hasMsgId) {
    size_ += computeUInt64Size(6, self.msgId);
  }
  if (self.hasVertifyContent) {
    size_ += computeStringSize(7, self.vertifyContent);
  }
  if (self.hasSubGroupId) {
    size_ += computeUInt32Size(8, self.subGroupId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AddBuddy*) parseFromData:(NSData*) data {
  return (AddBuddy*)[[[AddBuddy builder] mergeFromData:data] build];
}
+ (AddBuddy*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddBuddy*)[[[AddBuddy builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AddBuddy*) parseFromInputStream:(NSInputStream*) input {
  return (AddBuddy*)[[[AddBuddy builder] mergeFromInputStream:input] build];
}
+ (AddBuddy*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddBuddy*)[[[AddBuddy builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AddBuddy*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AddBuddy*)[[[AddBuddy builder] mergeFromCodedInputStream:input] build];
}
+ (AddBuddy*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddBuddy*)[[[AddBuddy builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AddBuddyBuilder*) builder {
  return [[AddBuddyBuilder alloc] init];
}
+ (AddBuddyBuilder*) builderWithPrototype:(AddBuddy*) prototype {
  return [[AddBuddy builder] mergeFrom:prototype];
}
- (AddBuddyBuilder*) builder {
  return [AddBuddy builder];
}
- (AddBuddyBuilder*) toBuilder {
  return [AddBuddy builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRequesterId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"requesterId", [NSNumber numberWithLongLong:self.requesterId]];
  }
  if (self.hasRequesterNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"requesterNickName", self.requesterNickName];
  }
  if (self.hasRequesterGender) {
    [output appendFormat:@"%@%@: %@\n", indent, @"requesterGender", [NSNumber numberWithInteger:self.requesterGender]];
  }
  if (self.hasRequesterAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"requesterAvatar", self.requesterAvatar];
  }
  if (self.hasBuddyUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"buddyUid", [NSNumber numberWithLongLong:self.buddyUid]];
  }
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", [NSNumber numberWithLongLong:self.msgId]];
  }
  if (self.hasVertifyContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"vertifyContent", self.vertifyContent];
  }
  if (self.hasSubGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"subGroupId", [NSNumber numberWithInteger:self.subGroupId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasRequesterId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.requesterId] forKey: @"requesterId"];
  }
  if (self.hasRequesterNickName) {
    [dictionary setObject: self.requesterNickName forKey: @"requesterNickName"];
  }
  if (self.hasRequesterGender) {
    [dictionary setObject: [NSNumber numberWithInteger:self.requesterGender] forKey: @"requesterGender"];
  }
  if (self.hasRequesterAvatar) {
    [dictionary setObject: self.requesterAvatar forKey: @"requesterAvatar"];
  }
  if (self.hasBuddyUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.buddyUid] forKey: @"buddyUid"];
  }
  if (self.hasMsgId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgId] forKey: @"msgId"];
  }
  if (self.hasVertifyContent) {
    [dictionary setObject: self.vertifyContent forKey: @"vertifyContent"];
  }
  if (self.hasSubGroupId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.subGroupId] forKey: @"subGroupId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AddBuddy class]]) {
    return NO;
  }
  AddBuddy *otherMessage = other;
  return
      self.hasRequesterId == otherMessage.hasRequesterId &&
      (!self.hasRequesterId || self.requesterId == otherMessage.requesterId) &&
      self.hasRequesterNickName == otherMessage.hasRequesterNickName &&
      (!self.hasRequesterNickName || [self.requesterNickName isEqual:otherMessage.requesterNickName]) &&
      self.hasRequesterGender == otherMessage.hasRequesterGender &&
      (!self.hasRequesterGender || self.requesterGender == otherMessage.requesterGender) &&
      self.hasRequesterAvatar == otherMessage.hasRequesterAvatar &&
      (!self.hasRequesterAvatar || [self.requesterAvatar isEqual:otherMessage.requesterAvatar]) &&
      self.hasBuddyUid == otherMessage.hasBuddyUid &&
      (!self.hasBuddyUid || self.buddyUid == otherMessage.buddyUid) &&
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || self.msgId == otherMessage.msgId) &&
      self.hasVertifyContent == otherMessage.hasVertifyContent &&
      (!self.hasVertifyContent || [self.vertifyContent isEqual:otherMessage.vertifyContent]) &&
      self.hasSubGroupId == otherMessage.hasSubGroupId &&
      (!self.hasSubGroupId || self.subGroupId == otherMessage.subGroupId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasRequesterId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.requesterId] hash];
  }
  if (self.hasRequesterNickName) {
    hashCode = hashCode * 31 + [self.requesterNickName hash];
  }
  if (self.hasRequesterGender) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.requesterGender] hash];
  }
  if (self.hasRequesterAvatar) {
    hashCode = hashCode * 31 + [self.requesterAvatar hash];
  }
  if (self.hasBuddyUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.buddyUid] hash];
  }
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgId] hash];
  }
  if (self.hasVertifyContent) {
    hashCode = hashCode * 31 + [self.vertifyContent hash];
  }
  if (self.hasSubGroupId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.subGroupId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AddBuddyBuilder()
@property (strong) AddBuddy* resultAddBuddy;
@end

@implementation AddBuddyBuilder
@synthesize resultAddBuddy;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAddBuddy = [[AddBuddy alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAddBuddy;
}
- (AddBuddyBuilder*) clear {
  self.resultAddBuddy = [[AddBuddy alloc] init];
  return self;
}
- (AddBuddyBuilder*) clone {
  return [AddBuddy builderWithPrototype:resultAddBuddy];
}
- (AddBuddy*) defaultInstance {
  return [AddBuddy defaultInstance];
}
- (AddBuddy*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AddBuddy*) buildPartial {
  AddBuddy* returnMe = resultAddBuddy;
  self.resultAddBuddy = nil;
  return returnMe;
}
- (AddBuddyBuilder*) mergeFrom:(AddBuddy*) other {
  if (other == [AddBuddy defaultInstance]) {
    return self;
  }
  if (other.hasRequesterId) {
    [self setRequesterId:other.requesterId];
  }
  if (other.hasRequesterNickName) {
    [self setRequesterNickName:other.requesterNickName];
  }
  if (other.hasRequesterGender) {
    [self setRequesterGender:other.requesterGender];
  }
  if (other.hasRequesterAvatar) {
    [self setRequesterAvatar:other.requesterAvatar];
  }
  if (other.hasBuddyUid) {
    [self setBuddyUid:other.buddyUid];
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasVertifyContent) {
    [self setVertifyContent:other.vertifyContent];
  }
  if (other.hasSubGroupId) {
    [self setSubGroupId:other.subGroupId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AddBuddyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AddBuddyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRequesterId:[input readUInt64]];
        break;
      }
      case 18: {
        [self setRequesterNickName:[input readString]];
        break;
      }
      case 24: {
        [self setRequesterGender:[input readUInt32]];
        break;
      }
      case 34: {
        [self setRequesterAvatar:[input readString]];
        break;
      }
      case 40: {
        [self setBuddyUid:[input readUInt64]];
        break;
      }
      case 48: {
        [self setMsgId:[input readUInt64]];
        break;
      }
      case 58: {
        [self setVertifyContent:[input readString]];
        break;
      }
      case 64: {
        [self setSubGroupId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasRequesterId {
  return resultAddBuddy.hasRequesterId;
}
- (UInt64) requesterId {
  return resultAddBuddy.requesterId;
}
- (AddBuddyBuilder*) setRequesterId:(UInt64) value {
  resultAddBuddy.hasRequesterId = YES;
  resultAddBuddy.requesterId = value;
  return self;
}
- (AddBuddyBuilder*) clearRequesterId {
  resultAddBuddy.hasRequesterId = NO;
  resultAddBuddy.requesterId = 0L;
  return self;
}
- (BOOL) hasRequesterNickName {
  return resultAddBuddy.hasRequesterNickName;
}
- (NSString*) requesterNickName {
  return resultAddBuddy.requesterNickName;
}
- (AddBuddyBuilder*) setRequesterNickName:(NSString*) value {
  resultAddBuddy.hasRequesterNickName = YES;
  resultAddBuddy.requesterNickName = value;
  return self;
}
- (AddBuddyBuilder*) clearRequesterNickName {
  resultAddBuddy.hasRequesterNickName = NO;
  resultAddBuddy.requesterNickName = @"";
  return self;
}
- (BOOL) hasRequesterGender {
  return resultAddBuddy.hasRequesterGender;
}
- (UInt32) requesterGender {
  return resultAddBuddy.requesterGender;
}
- (AddBuddyBuilder*) setRequesterGender:(UInt32) value {
  resultAddBuddy.hasRequesterGender = YES;
  resultAddBuddy.requesterGender = value;
  return self;
}
- (AddBuddyBuilder*) clearRequesterGender {
  resultAddBuddy.hasRequesterGender = NO;
  resultAddBuddy.requesterGender = 0;
  return self;
}
- (BOOL) hasRequesterAvatar {
  return resultAddBuddy.hasRequesterAvatar;
}
- (NSString*) requesterAvatar {
  return resultAddBuddy.requesterAvatar;
}
- (AddBuddyBuilder*) setRequesterAvatar:(NSString*) value {
  resultAddBuddy.hasRequesterAvatar = YES;
  resultAddBuddy.requesterAvatar = value;
  return self;
}
- (AddBuddyBuilder*) clearRequesterAvatar {
  resultAddBuddy.hasRequesterAvatar = NO;
  resultAddBuddy.requesterAvatar = @"";
  return self;
}
- (BOOL) hasBuddyUid {
  return resultAddBuddy.hasBuddyUid;
}
- (UInt64) buddyUid {
  return resultAddBuddy.buddyUid;
}
- (AddBuddyBuilder*) setBuddyUid:(UInt64) value {
  resultAddBuddy.hasBuddyUid = YES;
  resultAddBuddy.buddyUid = value;
  return self;
}
- (AddBuddyBuilder*) clearBuddyUid {
  resultAddBuddy.hasBuddyUid = NO;
  resultAddBuddy.buddyUid = 0L;
  return self;
}
- (BOOL) hasMsgId {
  return resultAddBuddy.hasMsgId;
}
- (UInt64) msgId {
  return resultAddBuddy.msgId;
}
- (AddBuddyBuilder*) setMsgId:(UInt64) value {
  resultAddBuddy.hasMsgId = YES;
  resultAddBuddy.msgId = value;
  return self;
}
- (AddBuddyBuilder*) clearMsgId {
  resultAddBuddy.hasMsgId = NO;
  resultAddBuddy.msgId = 0L;
  return self;
}
- (BOOL) hasVertifyContent {
  return resultAddBuddy.hasVertifyContent;
}
- (NSString*) vertifyContent {
  return resultAddBuddy.vertifyContent;
}
- (AddBuddyBuilder*) setVertifyContent:(NSString*) value {
  resultAddBuddy.hasVertifyContent = YES;
  resultAddBuddy.vertifyContent = value;
  return self;
}
- (AddBuddyBuilder*) clearVertifyContent {
  resultAddBuddy.hasVertifyContent = NO;
  resultAddBuddy.vertifyContent = @"";
  return self;
}
- (BOOL) hasSubGroupId {
  return resultAddBuddy.hasSubGroupId;
}
- (UInt32) subGroupId {
  return resultAddBuddy.subGroupId;
}
- (AddBuddyBuilder*) setSubGroupId:(UInt32) value {
  resultAddBuddy.hasSubGroupId = YES;
  resultAddBuddy.subGroupId = value;
  return self;
}
- (AddBuddyBuilder*) clearSubGroupId {
  resultAddBuddy.hasSubGroupId = NO;
  resultAddBuddy.subGroupId = 0;
  return self;
}
@end

@interface AddBuddyAck ()
@property UInt64 msgId;
@property SInt32 ret;
@property (strong) NSString* errorInfo;
@end

@implementation AddBuddyAck

- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) _value_ {
  hasMsgId_ = !!_value_;
}
@synthesize msgId;
- (BOOL) hasRet {
  return !!hasRet_;
}
- (void) setHasRet:(BOOL) _value_ {
  hasRet_ = !!_value_;
}
@synthesize ret;
- (BOOL) hasErrorInfo {
  return !!hasErrorInfo_;
}
- (void) setHasErrorInfo:(BOOL) _value_ {
  hasErrorInfo_ = !!_value_;
}
@synthesize errorInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.msgId = 0L;
    self.ret = 0;
    self.errorInfo = @"";
  }
  return self;
}
static AddBuddyAck* defaultAddBuddyAckInstance = nil;
+ (void) initialize {
  if (self == [AddBuddyAck class]) {
    defaultAddBuddyAckInstance = [[AddBuddyAck alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultAddBuddyAckInstance;
}
- (instancetype) defaultInstance {
  return defaultAddBuddyAckInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMsgId) {
    return NO;
  }
  if (!self.hasRet) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMsgId) {
    [output writeUInt64:1 value:self.msgId];
  }
  if (self.hasRet) {
    [output writeInt32:2 value:self.ret];
  }
  if (self.hasErrorInfo) {
    [output writeString:3 value:self.errorInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMsgId) {
    size_ += computeUInt64Size(1, self.msgId);
  }
  if (self.hasRet) {
    size_ += computeInt32Size(2, self.ret);
  }
  if (self.hasErrorInfo) {
    size_ += computeStringSize(3, self.errorInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AddBuddyAck*) parseFromData:(NSData*) data {
  return (AddBuddyAck*)[[[AddBuddyAck builder] mergeFromData:data] build];
}
+ (AddBuddyAck*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddBuddyAck*)[[[AddBuddyAck builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AddBuddyAck*) parseFromInputStream:(NSInputStream*) input {
  return (AddBuddyAck*)[[[AddBuddyAck builder] mergeFromInputStream:input] build];
}
+ (AddBuddyAck*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddBuddyAck*)[[[AddBuddyAck builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AddBuddyAck*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AddBuddyAck*)[[[AddBuddyAck builder] mergeFromCodedInputStream:input] build];
}
+ (AddBuddyAck*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddBuddyAck*)[[[AddBuddyAck builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AddBuddyAckBuilder*) builder {
  return [[AddBuddyAckBuilder alloc] init];
}
+ (AddBuddyAckBuilder*) builderWithPrototype:(AddBuddyAck*) prototype {
  return [[AddBuddyAck builder] mergeFrom:prototype];
}
- (AddBuddyAckBuilder*) builder {
  return [AddBuddyAck builder];
}
- (AddBuddyAckBuilder*) toBuilder {
  return [AddBuddyAck builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", [NSNumber numberWithLongLong:self.msgId]];
  }
  if (self.hasRet) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ret", [NSNumber numberWithInteger:self.ret]];
  }
  if (self.hasErrorInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorInfo", self.errorInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMsgId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgId] forKey: @"msgId"];
  }
  if (self.hasRet) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ret] forKey: @"ret"];
  }
  if (self.hasErrorInfo) {
    [dictionary setObject: self.errorInfo forKey: @"errorInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AddBuddyAck class]]) {
    return NO;
  }
  AddBuddyAck *otherMessage = other;
  return
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || self.msgId == otherMessage.msgId) &&
      self.hasRet == otherMessage.hasRet &&
      (!self.hasRet || self.ret == otherMessage.ret) &&
      self.hasErrorInfo == otherMessage.hasErrorInfo &&
      (!self.hasErrorInfo || [self.errorInfo isEqual:otherMessage.errorInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgId] hash];
  }
  if (self.hasRet) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ret] hash];
  }
  if (self.hasErrorInfo) {
    hashCode = hashCode * 31 + [self.errorInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AddBuddyAckBuilder()
@property (strong) AddBuddyAck* resultAddBuddyAck;
@end

@implementation AddBuddyAckBuilder
@synthesize resultAddBuddyAck;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAddBuddyAck = [[AddBuddyAck alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAddBuddyAck;
}
- (AddBuddyAckBuilder*) clear {
  self.resultAddBuddyAck = [[AddBuddyAck alloc] init];
  return self;
}
- (AddBuddyAckBuilder*) clone {
  return [AddBuddyAck builderWithPrototype:resultAddBuddyAck];
}
- (AddBuddyAck*) defaultInstance {
  return [AddBuddyAck defaultInstance];
}
- (AddBuddyAck*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AddBuddyAck*) buildPartial {
  AddBuddyAck* returnMe = resultAddBuddyAck;
  self.resultAddBuddyAck = nil;
  return returnMe;
}
- (AddBuddyAckBuilder*) mergeFrom:(AddBuddyAck*) other {
  if (other == [AddBuddyAck defaultInstance]) {
    return self;
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasRet) {
    [self setRet:other.ret];
  }
  if (other.hasErrorInfo) {
    [self setErrorInfo:other.errorInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AddBuddyAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AddBuddyAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMsgId:[input readUInt64]];
        break;
      }
      case 16: {
        [self setRet:[input readInt32]];
        break;
      }
      case 26: {
        [self setErrorInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMsgId {
  return resultAddBuddyAck.hasMsgId;
}
- (UInt64) msgId {
  return resultAddBuddyAck.msgId;
}
- (AddBuddyAckBuilder*) setMsgId:(UInt64) value {
  resultAddBuddyAck.hasMsgId = YES;
  resultAddBuddyAck.msgId = value;
  return self;
}
- (AddBuddyAckBuilder*) clearMsgId {
  resultAddBuddyAck.hasMsgId = NO;
  resultAddBuddyAck.msgId = 0L;
  return self;
}
- (BOOL) hasRet {
  return resultAddBuddyAck.hasRet;
}
- (SInt32) ret {
  return resultAddBuddyAck.ret;
}
- (AddBuddyAckBuilder*) setRet:(SInt32) value {
  resultAddBuddyAck.hasRet = YES;
  resultAddBuddyAck.ret = value;
  return self;
}
- (AddBuddyAckBuilder*) clearRet {
  resultAddBuddyAck.hasRet = NO;
  resultAddBuddyAck.ret = 0;
  return self;
}
- (BOOL) hasErrorInfo {
  return resultAddBuddyAck.hasErrorInfo;
}
- (NSString*) errorInfo {
  return resultAddBuddyAck.errorInfo;
}
- (AddBuddyAckBuilder*) setErrorInfo:(NSString*) value {
  resultAddBuddyAck.hasErrorInfo = YES;
  resultAddBuddyAck.errorInfo = value;
  return self;
}
- (AddBuddyAckBuilder*) clearErrorInfo {
  resultAddBuddyAck.hasErrorInfo = NO;
  resultAddBuddyAck.errorInfo = @"";
  return self;
}
@end

@interface BuddyVerify ()
@property UInt64 responserId;
@property (strong) NSString* responserNickname;
@property UInt32 responserGender;
@property (strong) NSString* responserAvatar;
@property UInt64 buddyUid;
@property UInt64 msgId;
@property UInt32 agree;
@property UInt32 subGruopId;
@end

@implementation BuddyVerify

- (BOOL) hasResponserId {
  return !!hasResponserId_;
}
- (void) setHasResponserId:(BOOL) _value_ {
  hasResponserId_ = !!_value_;
}
@synthesize responserId;
- (BOOL) hasResponserNickname {
  return !!hasResponserNickname_;
}
- (void) setHasResponserNickname:(BOOL) _value_ {
  hasResponserNickname_ = !!_value_;
}
@synthesize responserNickname;
- (BOOL) hasResponserGender {
  return !!hasResponserGender_;
}
- (void) setHasResponserGender:(BOOL) _value_ {
  hasResponserGender_ = !!_value_;
}
@synthesize responserGender;
- (BOOL) hasResponserAvatar {
  return !!hasResponserAvatar_;
}
- (void) setHasResponserAvatar:(BOOL) _value_ {
  hasResponserAvatar_ = !!_value_;
}
@synthesize responserAvatar;
- (BOOL) hasBuddyUid {
  return !!hasBuddyUid_;
}
- (void) setHasBuddyUid:(BOOL) _value_ {
  hasBuddyUid_ = !!_value_;
}
@synthesize buddyUid;
- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) _value_ {
  hasMsgId_ = !!_value_;
}
@synthesize msgId;
- (BOOL) hasAgree {
  return !!hasAgree_;
}
- (void) setHasAgree:(BOOL) _value_ {
  hasAgree_ = !!_value_;
}
@synthesize agree;
- (BOOL) hasSubGruopId {
  return !!hasSubGruopId_;
}
- (void) setHasSubGruopId:(BOOL) _value_ {
  hasSubGruopId_ = !!_value_;
}
@synthesize subGruopId;
- (instancetype) init {
  if ((self = [super init])) {
    self.responserId = 0L;
    self.responserNickname = @"";
    self.responserGender = 0;
    self.responserAvatar = @"";
    self.buddyUid = 0L;
    self.msgId = 0L;
    self.agree = 0;
    self.subGruopId = 0;
  }
  return self;
}
static BuddyVerify* defaultBuddyVerifyInstance = nil;
+ (void) initialize {
  if (self == [BuddyVerify class]) {
    defaultBuddyVerifyInstance = [[BuddyVerify alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBuddyVerifyInstance;
}
- (instancetype) defaultInstance {
  return defaultBuddyVerifyInstance;
}
- (BOOL) isInitialized {
  if (!self.hasResponserId) {
    return NO;
  }
  if (!self.hasResponserNickname) {
    return NO;
  }
  if (!self.hasResponserGender) {
    return NO;
  }
  if (!self.hasResponserAvatar) {
    return NO;
  }
  if (!self.hasBuddyUid) {
    return NO;
  }
  if (!self.hasMsgId) {
    return NO;
  }
  if (!self.hasAgree) {
    return NO;
  }
  if (!self.hasSubGruopId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResponserId) {
    [output writeUInt64:1 value:self.responserId];
  }
  if (self.hasResponserNickname) {
    [output writeString:2 value:self.responserNickname];
  }
  if (self.hasResponserGender) {
    [output writeUInt32:3 value:self.responserGender];
  }
  if (self.hasResponserAvatar) {
    [output writeString:4 value:self.responserAvatar];
  }
  if (self.hasBuddyUid) {
    [output writeUInt64:5 value:self.buddyUid];
  }
  if (self.hasMsgId) {
    [output writeUInt64:6 value:self.msgId];
  }
  if (self.hasAgree) {
    [output writeUInt32:7 value:self.agree];
  }
  if (self.hasSubGruopId) {
    [output writeUInt32:8 value:self.subGruopId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasResponserId) {
    size_ += computeUInt64Size(1, self.responserId);
  }
  if (self.hasResponserNickname) {
    size_ += computeStringSize(2, self.responserNickname);
  }
  if (self.hasResponserGender) {
    size_ += computeUInt32Size(3, self.responserGender);
  }
  if (self.hasResponserAvatar) {
    size_ += computeStringSize(4, self.responserAvatar);
  }
  if (self.hasBuddyUid) {
    size_ += computeUInt64Size(5, self.buddyUid);
  }
  if (self.hasMsgId) {
    size_ += computeUInt64Size(6, self.msgId);
  }
  if (self.hasAgree) {
    size_ += computeUInt32Size(7, self.agree);
  }
  if (self.hasSubGruopId) {
    size_ += computeUInt32Size(8, self.subGruopId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BuddyVerify*) parseFromData:(NSData*) data {
  return (BuddyVerify*)[[[BuddyVerify builder] mergeFromData:data] build];
}
+ (BuddyVerify*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BuddyVerify*)[[[BuddyVerify builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BuddyVerify*) parseFromInputStream:(NSInputStream*) input {
  return (BuddyVerify*)[[[BuddyVerify builder] mergeFromInputStream:input] build];
}
+ (BuddyVerify*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BuddyVerify*)[[[BuddyVerify builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BuddyVerify*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BuddyVerify*)[[[BuddyVerify builder] mergeFromCodedInputStream:input] build];
}
+ (BuddyVerify*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BuddyVerify*)[[[BuddyVerify builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BuddyVerifyBuilder*) builder {
  return [[BuddyVerifyBuilder alloc] init];
}
+ (BuddyVerifyBuilder*) builderWithPrototype:(BuddyVerify*) prototype {
  return [[BuddyVerify builder] mergeFrom:prototype];
}
- (BuddyVerifyBuilder*) builder {
  return [BuddyVerify builder];
}
- (BuddyVerifyBuilder*) toBuilder {
  return [BuddyVerify builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResponserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"responserId", [NSNumber numberWithLongLong:self.responserId]];
  }
  if (self.hasResponserNickname) {
    [output appendFormat:@"%@%@: %@\n", indent, @"responserNickname", self.responserNickname];
  }
  if (self.hasResponserGender) {
    [output appendFormat:@"%@%@: %@\n", indent, @"responserGender", [NSNumber numberWithInteger:self.responserGender]];
  }
  if (self.hasResponserAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"responserAvatar", self.responserAvatar];
  }
  if (self.hasBuddyUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"buddyUid", [NSNumber numberWithLongLong:self.buddyUid]];
  }
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", [NSNumber numberWithLongLong:self.msgId]];
  }
  if (self.hasAgree) {
    [output appendFormat:@"%@%@: %@\n", indent, @"agree", [NSNumber numberWithInteger:self.agree]];
  }
  if (self.hasSubGruopId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"subGruopId", [NSNumber numberWithInteger:self.subGruopId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasResponserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.responserId] forKey: @"responserId"];
  }
  if (self.hasResponserNickname) {
    [dictionary setObject: self.responserNickname forKey: @"responserNickname"];
  }
  if (self.hasResponserGender) {
    [dictionary setObject: [NSNumber numberWithInteger:self.responserGender] forKey: @"responserGender"];
  }
  if (self.hasResponserAvatar) {
    [dictionary setObject: self.responserAvatar forKey: @"responserAvatar"];
  }
  if (self.hasBuddyUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.buddyUid] forKey: @"buddyUid"];
  }
  if (self.hasMsgId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgId] forKey: @"msgId"];
  }
  if (self.hasAgree) {
    [dictionary setObject: [NSNumber numberWithInteger:self.agree] forKey: @"agree"];
  }
  if (self.hasSubGruopId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.subGruopId] forKey: @"subGruopId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BuddyVerify class]]) {
    return NO;
  }
  BuddyVerify *otherMessage = other;
  return
      self.hasResponserId == otherMessage.hasResponserId &&
      (!self.hasResponserId || self.responserId == otherMessage.responserId) &&
      self.hasResponserNickname == otherMessage.hasResponserNickname &&
      (!self.hasResponserNickname || [self.responserNickname isEqual:otherMessage.responserNickname]) &&
      self.hasResponserGender == otherMessage.hasResponserGender &&
      (!self.hasResponserGender || self.responserGender == otherMessage.responserGender) &&
      self.hasResponserAvatar == otherMessage.hasResponserAvatar &&
      (!self.hasResponserAvatar || [self.responserAvatar isEqual:otherMessage.responserAvatar]) &&
      self.hasBuddyUid == otherMessage.hasBuddyUid &&
      (!self.hasBuddyUid || self.buddyUid == otherMessage.buddyUid) &&
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || self.msgId == otherMessage.msgId) &&
      self.hasAgree == otherMessage.hasAgree &&
      (!self.hasAgree || self.agree == otherMessage.agree) &&
      self.hasSubGruopId == otherMessage.hasSubGruopId &&
      (!self.hasSubGruopId || self.subGruopId == otherMessage.subGruopId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasResponserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.responserId] hash];
  }
  if (self.hasResponserNickname) {
    hashCode = hashCode * 31 + [self.responserNickname hash];
  }
  if (self.hasResponserGender) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.responserGender] hash];
  }
  if (self.hasResponserAvatar) {
    hashCode = hashCode * 31 + [self.responserAvatar hash];
  }
  if (self.hasBuddyUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.buddyUid] hash];
  }
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgId] hash];
  }
  if (self.hasAgree) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.agree] hash];
  }
  if (self.hasSubGruopId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.subGruopId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BuddyVerifyBuilder()
@property (strong) BuddyVerify* resultBuddyVerify;
@end

@implementation BuddyVerifyBuilder
@synthesize resultBuddyVerify;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBuddyVerify = [[BuddyVerify alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBuddyVerify;
}
- (BuddyVerifyBuilder*) clear {
  self.resultBuddyVerify = [[BuddyVerify alloc] init];
  return self;
}
- (BuddyVerifyBuilder*) clone {
  return [BuddyVerify builderWithPrototype:resultBuddyVerify];
}
- (BuddyVerify*) defaultInstance {
  return [BuddyVerify defaultInstance];
}
- (BuddyVerify*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BuddyVerify*) buildPartial {
  BuddyVerify* returnMe = resultBuddyVerify;
  self.resultBuddyVerify = nil;
  return returnMe;
}
- (BuddyVerifyBuilder*) mergeFrom:(BuddyVerify*) other {
  if (other == [BuddyVerify defaultInstance]) {
    return self;
  }
  if (other.hasResponserId) {
    [self setResponserId:other.responserId];
  }
  if (other.hasResponserNickname) {
    [self setResponserNickname:other.responserNickname];
  }
  if (other.hasResponserGender) {
    [self setResponserGender:other.responserGender];
  }
  if (other.hasResponserAvatar) {
    [self setResponserAvatar:other.responserAvatar];
  }
  if (other.hasBuddyUid) {
    [self setBuddyUid:other.buddyUid];
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasAgree) {
    [self setAgree:other.agree];
  }
  if (other.hasSubGruopId) {
    [self setSubGruopId:other.subGruopId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BuddyVerifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BuddyVerifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setResponserId:[input readUInt64]];
        break;
      }
      case 18: {
        [self setResponserNickname:[input readString]];
        break;
      }
      case 24: {
        [self setResponserGender:[input readUInt32]];
        break;
      }
      case 34: {
        [self setResponserAvatar:[input readString]];
        break;
      }
      case 40: {
        [self setBuddyUid:[input readUInt64]];
        break;
      }
      case 48: {
        [self setMsgId:[input readUInt64]];
        break;
      }
      case 56: {
        [self setAgree:[input readUInt32]];
        break;
      }
      case 64: {
        [self setSubGruopId:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasResponserId {
  return resultBuddyVerify.hasResponserId;
}
- (UInt64) responserId {
  return resultBuddyVerify.responserId;
}
- (BuddyVerifyBuilder*) setResponserId:(UInt64) value {
  resultBuddyVerify.hasResponserId = YES;
  resultBuddyVerify.responserId = value;
  return self;
}
- (BuddyVerifyBuilder*) clearResponserId {
  resultBuddyVerify.hasResponserId = NO;
  resultBuddyVerify.responserId = 0L;
  return self;
}
- (BOOL) hasResponserNickname {
  return resultBuddyVerify.hasResponserNickname;
}
- (NSString*) responserNickname {
  return resultBuddyVerify.responserNickname;
}
- (BuddyVerifyBuilder*) setResponserNickname:(NSString*) value {
  resultBuddyVerify.hasResponserNickname = YES;
  resultBuddyVerify.responserNickname = value;
  return self;
}
- (BuddyVerifyBuilder*) clearResponserNickname {
  resultBuddyVerify.hasResponserNickname = NO;
  resultBuddyVerify.responserNickname = @"";
  return self;
}
- (BOOL) hasResponserGender {
  return resultBuddyVerify.hasResponserGender;
}
- (UInt32) responserGender {
  return resultBuddyVerify.responserGender;
}
- (BuddyVerifyBuilder*) setResponserGender:(UInt32) value {
  resultBuddyVerify.hasResponserGender = YES;
  resultBuddyVerify.responserGender = value;
  return self;
}
- (BuddyVerifyBuilder*) clearResponserGender {
  resultBuddyVerify.hasResponserGender = NO;
  resultBuddyVerify.responserGender = 0;
  return self;
}
- (BOOL) hasResponserAvatar {
  return resultBuddyVerify.hasResponserAvatar;
}
- (NSString*) responserAvatar {
  return resultBuddyVerify.responserAvatar;
}
- (BuddyVerifyBuilder*) setResponserAvatar:(NSString*) value {
  resultBuddyVerify.hasResponserAvatar = YES;
  resultBuddyVerify.responserAvatar = value;
  return self;
}
- (BuddyVerifyBuilder*) clearResponserAvatar {
  resultBuddyVerify.hasResponserAvatar = NO;
  resultBuddyVerify.responserAvatar = @"";
  return self;
}
- (BOOL) hasBuddyUid {
  return resultBuddyVerify.hasBuddyUid;
}
- (UInt64) buddyUid {
  return resultBuddyVerify.buddyUid;
}
- (BuddyVerifyBuilder*) setBuddyUid:(UInt64) value {
  resultBuddyVerify.hasBuddyUid = YES;
  resultBuddyVerify.buddyUid = value;
  return self;
}
- (BuddyVerifyBuilder*) clearBuddyUid {
  resultBuddyVerify.hasBuddyUid = NO;
  resultBuddyVerify.buddyUid = 0L;
  return self;
}
- (BOOL) hasMsgId {
  return resultBuddyVerify.hasMsgId;
}
- (UInt64) msgId {
  return resultBuddyVerify.msgId;
}
- (BuddyVerifyBuilder*) setMsgId:(UInt64) value {
  resultBuddyVerify.hasMsgId = YES;
  resultBuddyVerify.msgId = value;
  return self;
}
- (BuddyVerifyBuilder*) clearMsgId {
  resultBuddyVerify.hasMsgId = NO;
  resultBuddyVerify.msgId = 0L;
  return self;
}
- (BOOL) hasAgree {
  return resultBuddyVerify.hasAgree;
}
- (UInt32) agree {
  return resultBuddyVerify.agree;
}
- (BuddyVerifyBuilder*) setAgree:(UInt32) value {
  resultBuddyVerify.hasAgree = YES;
  resultBuddyVerify.agree = value;
  return self;
}
- (BuddyVerifyBuilder*) clearAgree {
  resultBuddyVerify.hasAgree = NO;
  resultBuddyVerify.agree = 0;
  return self;
}
- (BOOL) hasSubGruopId {
  return resultBuddyVerify.hasSubGruopId;
}
- (UInt32) subGruopId {
  return resultBuddyVerify.subGruopId;
}
- (BuddyVerifyBuilder*) setSubGruopId:(UInt32) value {
  resultBuddyVerify.hasSubGruopId = YES;
  resultBuddyVerify.subGruopId = value;
  return self;
}
- (BuddyVerifyBuilder*) clearSubGruopId {
  resultBuddyVerify.hasSubGruopId = NO;
  resultBuddyVerify.subGruopId = 0;
  return self;
}
@end

@interface BuddyVerityAck ()
@property UInt64 msgId;
@property SInt32 ret;
@property (strong) NSString* errorInfo;
@end

@implementation BuddyVerityAck

- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) _value_ {
  hasMsgId_ = !!_value_;
}
@synthesize msgId;
- (BOOL) hasRet {
  return !!hasRet_;
}
- (void) setHasRet:(BOOL) _value_ {
  hasRet_ = !!_value_;
}
@synthesize ret;
- (BOOL) hasErrorInfo {
  return !!hasErrorInfo_;
}
- (void) setHasErrorInfo:(BOOL) _value_ {
  hasErrorInfo_ = !!_value_;
}
@synthesize errorInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.msgId = 0L;
    self.ret = 0;
    self.errorInfo = @"";
  }
  return self;
}
static BuddyVerityAck* defaultBuddyVerityAckInstance = nil;
+ (void) initialize {
  if (self == [BuddyVerityAck class]) {
    defaultBuddyVerityAckInstance = [[BuddyVerityAck alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultBuddyVerityAckInstance;
}
- (instancetype) defaultInstance {
  return defaultBuddyVerityAckInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMsgId) {
    return NO;
  }
  if (!self.hasRet) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMsgId) {
    [output writeUInt64:1 value:self.msgId];
  }
  if (self.hasRet) {
    [output writeInt32:2 value:self.ret];
  }
  if (self.hasErrorInfo) {
    [output writeString:3 value:self.errorInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMsgId) {
    size_ += computeUInt64Size(1, self.msgId);
  }
  if (self.hasRet) {
    size_ += computeInt32Size(2, self.ret);
  }
  if (self.hasErrorInfo) {
    size_ += computeStringSize(3, self.errorInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (BuddyVerityAck*) parseFromData:(NSData*) data {
  return (BuddyVerityAck*)[[[BuddyVerityAck builder] mergeFromData:data] build];
}
+ (BuddyVerityAck*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BuddyVerityAck*)[[[BuddyVerityAck builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (BuddyVerityAck*) parseFromInputStream:(NSInputStream*) input {
  return (BuddyVerityAck*)[[[BuddyVerityAck builder] mergeFromInputStream:input] build];
}
+ (BuddyVerityAck*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BuddyVerityAck*)[[[BuddyVerityAck builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BuddyVerityAck*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BuddyVerityAck*)[[[BuddyVerityAck builder] mergeFromCodedInputStream:input] build];
}
+ (BuddyVerityAck*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BuddyVerityAck*)[[[BuddyVerityAck builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (BuddyVerityAckBuilder*) builder {
  return [[BuddyVerityAckBuilder alloc] init];
}
+ (BuddyVerityAckBuilder*) builderWithPrototype:(BuddyVerityAck*) prototype {
  return [[BuddyVerityAck builder] mergeFrom:prototype];
}
- (BuddyVerityAckBuilder*) builder {
  return [BuddyVerityAck builder];
}
- (BuddyVerityAckBuilder*) toBuilder {
  return [BuddyVerityAck builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", [NSNumber numberWithLongLong:self.msgId]];
  }
  if (self.hasRet) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ret", [NSNumber numberWithInteger:self.ret]];
  }
  if (self.hasErrorInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorInfo", self.errorInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMsgId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgId] forKey: @"msgId"];
  }
  if (self.hasRet) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ret] forKey: @"ret"];
  }
  if (self.hasErrorInfo) {
    [dictionary setObject: self.errorInfo forKey: @"errorInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[BuddyVerityAck class]]) {
    return NO;
  }
  BuddyVerityAck *otherMessage = other;
  return
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || self.msgId == otherMessage.msgId) &&
      self.hasRet == otherMessage.hasRet &&
      (!self.hasRet || self.ret == otherMessage.ret) &&
      self.hasErrorInfo == otherMessage.hasErrorInfo &&
      (!self.hasErrorInfo || [self.errorInfo isEqual:otherMessage.errorInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgId] hash];
  }
  if (self.hasRet) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ret] hash];
  }
  if (self.hasErrorInfo) {
    hashCode = hashCode * 31 + [self.errorInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface BuddyVerityAckBuilder()
@property (strong) BuddyVerityAck* resultBuddyVerityAck;
@end

@implementation BuddyVerityAckBuilder
@synthesize resultBuddyVerityAck;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBuddyVerityAck = [[BuddyVerityAck alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBuddyVerityAck;
}
- (BuddyVerityAckBuilder*) clear {
  self.resultBuddyVerityAck = [[BuddyVerityAck alloc] init];
  return self;
}
- (BuddyVerityAckBuilder*) clone {
  return [BuddyVerityAck builderWithPrototype:resultBuddyVerityAck];
}
- (BuddyVerityAck*) defaultInstance {
  return [BuddyVerityAck defaultInstance];
}
- (BuddyVerityAck*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (BuddyVerityAck*) buildPartial {
  BuddyVerityAck* returnMe = resultBuddyVerityAck;
  self.resultBuddyVerityAck = nil;
  return returnMe;
}
- (BuddyVerityAckBuilder*) mergeFrom:(BuddyVerityAck*) other {
  if (other == [BuddyVerityAck defaultInstance]) {
    return self;
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasRet) {
    [self setRet:other.ret];
  }
  if (other.hasErrorInfo) {
    [self setErrorInfo:other.errorInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (BuddyVerityAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (BuddyVerityAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMsgId:[input readUInt64]];
        break;
      }
      case 16: {
        [self setRet:[input readInt32]];
        break;
      }
      case 26: {
        [self setErrorInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMsgId {
  return resultBuddyVerityAck.hasMsgId;
}
- (UInt64) msgId {
  return resultBuddyVerityAck.msgId;
}
- (BuddyVerityAckBuilder*) setMsgId:(UInt64) value {
  resultBuddyVerityAck.hasMsgId = YES;
  resultBuddyVerityAck.msgId = value;
  return self;
}
- (BuddyVerityAckBuilder*) clearMsgId {
  resultBuddyVerityAck.hasMsgId = NO;
  resultBuddyVerityAck.msgId = 0L;
  return self;
}
- (BOOL) hasRet {
  return resultBuddyVerityAck.hasRet;
}
- (SInt32) ret {
  return resultBuddyVerityAck.ret;
}
- (BuddyVerityAckBuilder*) setRet:(SInt32) value {
  resultBuddyVerityAck.hasRet = YES;
  resultBuddyVerityAck.ret = value;
  return self;
}
- (BuddyVerityAckBuilder*) clearRet {
  resultBuddyVerityAck.hasRet = NO;
  resultBuddyVerityAck.ret = 0;
  return self;
}
- (BOOL) hasErrorInfo {
  return resultBuddyVerityAck.hasErrorInfo;
}
- (NSString*) errorInfo {
  return resultBuddyVerityAck.errorInfo;
}
- (BuddyVerityAckBuilder*) setErrorInfo:(NSString*) value {
  resultBuddyVerityAck.hasErrorInfo = YES;
  resultBuddyVerityAck.errorInfo = value;
  return self;
}
- (BuddyVerityAckBuilder*) clearErrorInfo {
  resultBuddyVerityAck.hasErrorInfo = NO;
  resultBuddyVerityAck.errorInfo = @"";
  return self;
}
@end

@interface DeleteBuddy ()
@property UInt64 uid;
@property UInt64 buddyUid;
@property SInt32 method;
@end

@implementation DeleteBuddy

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (BOOL) hasBuddyUid {
  return !!hasBuddyUid_;
}
- (void) setHasBuddyUid:(BOOL) _value_ {
  hasBuddyUid_ = !!_value_;
}
@synthesize buddyUid;
- (BOOL) hasMethod {
  return !!hasMethod_;
}
- (void) setHasMethod:(BOOL) _value_ {
  hasMethod_ = !!_value_;
}
@synthesize method;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
    self.buddyUid = 0L;
    self.method = 0;
  }
  return self;
}
static DeleteBuddy* defaultDeleteBuddyInstance = nil;
+ (void) initialize {
  if (self == [DeleteBuddy class]) {
    defaultDeleteBuddyInstance = [[DeleteBuddy alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultDeleteBuddyInstance;
}
- (instancetype) defaultInstance {
  return defaultDeleteBuddyInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUid) {
    return NO;
  }
  if (!self.hasBuddyUid) {
    return NO;
  }
  if (!self.hasMethod) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  if (self.hasBuddyUid) {
    [output writeUInt64:2 value:self.buddyUid];
  }
  if (self.hasMethod) {
    [output writeInt32:3 value:self.method];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  if (self.hasBuddyUid) {
    size_ += computeUInt64Size(2, self.buddyUid);
  }
  if (self.hasMethod) {
    size_ += computeInt32Size(3, self.method);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (DeleteBuddy*) parseFromData:(NSData*) data {
  return (DeleteBuddy*)[[[DeleteBuddy builder] mergeFromData:data] build];
}
+ (DeleteBuddy*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteBuddy*)[[[DeleteBuddy builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DeleteBuddy*) parseFromInputStream:(NSInputStream*) input {
  return (DeleteBuddy*)[[[DeleteBuddy builder] mergeFromInputStream:input] build];
}
+ (DeleteBuddy*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteBuddy*)[[[DeleteBuddy builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeleteBuddy*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DeleteBuddy*)[[[DeleteBuddy builder] mergeFromCodedInputStream:input] build];
}
+ (DeleteBuddy*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteBuddy*)[[[DeleteBuddy builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeleteBuddyBuilder*) builder {
  return [[DeleteBuddyBuilder alloc] init];
}
+ (DeleteBuddyBuilder*) builderWithPrototype:(DeleteBuddy*) prototype {
  return [[DeleteBuddy builder] mergeFrom:prototype];
}
- (DeleteBuddyBuilder*) builder {
  return [DeleteBuddy builder];
}
- (DeleteBuddyBuilder*) toBuilder {
  return [DeleteBuddy builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  if (self.hasBuddyUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"buddyUid", [NSNumber numberWithLongLong:self.buddyUid]];
  }
  if (self.hasMethod) {
    [output appendFormat:@"%@%@: %@\n", indent, @"method", [NSNumber numberWithInteger:self.method]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.uid] forKey: @"uid"];
  }
  if (self.hasBuddyUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.buddyUid] forKey: @"buddyUid"];
  }
  if (self.hasMethod) {
    [dictionary setObject: [NSNumber numberWithInteger:self.method] forKey: @"method"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[DeleteBuddy class]]) {
    return NO;
  }
  DeleteBuddy *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      self.hasBuddyUid == otherMessage.hasBuddyUid &&
      (!self.hasBuddyUid || self.buddyUid == otherMessage.buddyUid) &&
      self.hasMethod == otherMessage.hasMethod &&
      (!self.hasMethod || self.method == otherMessage.method) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  if (self.hasBuddyUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.buddyUid] hash];
  }
  if (self.hasMethod) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.method] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface DeleteBuddyBuilder()
@property (strong) DeleteBuddy* resultDeleteBuddy;
@end

@implementation DeleteBuddyBuilder
@synthesize resultDeleteBuddy;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeleteBuddy = [[DeleteBuddy alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeleteBuddy;
}
- (DeleteBuddyBuilder*) clear {
  self.resultDeleteBuddy = [[DeleteBuddy alloc] init];
  return self;
}
- (DeleteBuddyBuilder*) clone {
  return [DeleteBuddy builderWithPrototype:resultDeleteBuddy];
}
- (DeleteBuddy*) defaultInstance {
  return [DeleteBuddy defaultInstance];
}
- (DeleteBuddy*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DeleteBuddy*) buildPartial {
  DeleteBuddy* returnMe = resultDeleteBuddy;
  self.resultDeleteBuddy = nil;
  return returnMe;
}
- (DeleteBuddyBuilder*) mergeFrom:(DeleteBuddy*) other {
  if (other == [DeleteBuddy defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasBuddyUid) {
    [self setBuddyUid:other.buddyUid];
  }
  if (other.hasMethod) {
    [self setMethod:other.method];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DeleteBuddyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DeleteBuddyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
      case 16: {
        [self setBuddyUid:[input readUInt64]];
        break;
      }
      case 24: {
        [self setMethod:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultDeleteBuddy.hasUid;
}
- (UInt64) uid {
  return resultDeleteBuddy.uid;
}
- (DeleteBuddyBuilder*) setUid:(UInt64) value {
  resultDeleteBuddy.hasUid = YES;
  resultDeleteBuddy.uid = value;
  return self;
}
- (DeleteBuddyBuilder*) clearUid {
  resultDeleteBuddy.hasUid = NO;
  resultDeleteBuddy.uid = 0L;
  return self;
}
- (BOOL) hasBuddyUid {
  return resultDeleteBuddy.hasBuddyUid;
}
- (UInt64) buddyUid {
  return resultDeleteBuddy.buddyUid;
}
- (DeleteBuddyBuilder*) setBuddyUid:(UInt64) value {
  resultDeleteBuddy.hasBuddyUid = YES;
  resultDeleteBuddy.buddyUid = value;
  return self;
}
- (DeleteBuddyBuilder*) clearBuddyUid {
  resultDeleteBuddy.hasBuddyUid = NO;
  resultDeleteBuddy.buddyUid = 0L;
  return self;
}
- (BOOL) hasMethod {
  return resultDeleteBuddy.hasMethod;
}
- (SInt32) method {
  return resultDeleteBuddy.method;
}
- (DeleteBuddyBuilder*) setMethod:(SInt32) value {
  resultDeleteBuddy.hasMethod = YES;
  resultDeleteBuddy.method = value;
  return self;
}
- (DeleteBuddyBuilder*) clearMethod {
  resultDeleteBuddy.hasMethod = NO;
  resultDeleteBuddy.method = 0;
  return self;
}
@end

@interface DeleteBuddyAck ()
@property SInt32 ret;
@property (strong) NSString* errorInfo;
@end

@implementation DeleteBuddyAck

- (BOOL) hasRet {
  return !!hasRet_;
}
- (void) setHasRet:(BOOL) _value_ {
  hasRet_ = !!_value_;
}
@synthesize ret;
- (BOOL) hasErrorInfo {
  return !!hasErrorInfo_;
}
- (void) setHasErrorInfo:(BOOL) _value_ {
  hasErrorInfo_ = !!_value_;
}
@synthesize errorInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.ret = 0;
    self.errorInfo = @"";
  }
  return self;
}
static DeleteBuddyAck* defaultDeleteBuddyAckInstance = nil;
+ (void) initialize {
  if (self == [DeleteBuddyAck class]) {
    defaultDeleteBuddyAckInstance = [[DeleteBuddyAck alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultDeleteBuddyAckInstance;
}
- (instancetype) defaultInstance {
  return defaultDeleteBuddyAckInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRet) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRet) {
    [output writeInt32:1 value:self.ret];
  }
  if (self.hasErrorInfo) {
    [output writeString:2 value:self.errorInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRet) {
    size_ += computeInt32Size(1, self.ret);
  }
  if (self.hasErrorInfo) {
    size_ += computeStringSize(2, self.errorInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (DeleteBuddyAck*) parseFromData:(NSData*) data {
  return (DeleteBuddyAck*)[[[DeleteBuddyAck builder] mergeFromData:data] build];
}
+ (DeleteBuddyAck*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteBuddyAck*)[[[DeleteBuddyAck builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DeleteBuddyAck*) parseFromInputStream:(NSInputStream*) input {
  return (DeleteBuddyAck*)[[[DeleteBuddyAck builder] mergeFromInputStream:input] build];
}
+ (DeleteBuddyAck*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteBuddyAck*)[[[DeleteBuddyAck builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeleteBuddyAck*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DeleteBuddyAck*)[[[DeleteBuddyAck builder] mergeFromCodedInputStream:input] build];
}
+ (DeleteBuddyAck*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DeleteBuddyAck*)[[[DeleteBuddyAck builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DeleteBuddyAckBuilder*) builder {
  return [[DeleteBuddyAckBuilder alloc] init];
}
+ (DeleteBuddyAckBuilder*) builderWithPrototype:(DeleteBuddyAck*) prototype {
  return [[DeleteBuddyAck builder] mergeFrom:prototype];
}
- (DeleteBuddyAckBuilder*) builder {
  return [DeleteBuddyAck builder];
}
- (DeleteBuddyAckBuilder*) toBuilder {
  return [DeleteBuddyAck builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRet) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ret", [NSNumber numberWithInteger:self.ret]];
  }
  if (self.hasErrorInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorInfo", self.errorInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasRet) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ret] forKey: @"ret"];
  }
  if (self.hasErrorInfo) {
    [dictionary setObject: self.errorInfo forKey: @"errorInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[DeleteBuddyAck class]]) {
    return NO;
  }
  DeleteBuddyAck *otherMessage = other;
  return
      self.hasRet == otherMessage.hasRet &&
      (!self.hasRet || self.ret == otherMessage.ret) &&
      self.hasErrorInfo == otherMessage.hasErrorInfo &&
      (!self.hasErrorInfo || [self.errorInfo isEqual:otherMessage.errorInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasRet) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ret] hash];
  }
  if (self.hasErrorInfo) {
    hashCode = hashCode * 31 + [self.errorInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface DeleteBuddyAckBuilder()
@property (strong) DeleteBuddyAck* resultDeleteBuddyAck;
@end

@implementation DeleteBuddyAckBuilder
@synthesize resultDeleteBuddyAck;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeleteBuddyAck = [[DeleteBuddyAck alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeleteBuddyAck;
}
- (DeleteBuddyAckBuilder*) clear {
  self.resultDeleteBuddyAck = [[DeleteBuddyAck alloc] init];
  return self;
}
- (DeleteBuddyAckBuilder*) clone {
  return [DeleteBuddyAck builderWithPrototype:resultDeleteBuddyAck];
}
- (DeleteBuddyAck*) defaultInstance {
  return [DeleteBuddyAck defaultInstance];
}
- (DeleteBuddyAck*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DeleteBuddyAck*) buildPartial {
  DeleteBuddyAck* returnMe = resultDeleteBuddyAck;
  self.resultDeleteBuddyAck = nil;
  return returnMe;
}
- (DeleteBuddyAckBuilder*) mergeFrom:(DeleteBuddyAck*) other {
  if (other == [DeleteBuddyAck defaultInstance]) {
    return self;
  }
  if (other.hasRet) {
    [self setRet:other.ret];
  }
  if (other.hasErrorInfo) {
    [self setErrorInfo:other.errorInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DeleteBuddyAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DeleteBuddyAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRet:[input readInt32]];
        break;
      }
      case 18: {
        [self setErrorInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRet {
  return resultDeleteBuddyAck.hasRet;
}
- (SInt32) ret {
  return resultDeleteBuddyAck.ret;
}
- (DeleteBuddyAckBuilder*) setRet:(SInt32) value {
  resultDeleteBuddyAck.hasRet = YES;
  resultDeleteBuddyAck.ret = value;
  return self;
}
- (DeleteBuddyAckBuilder*) clearRet {
  resultDeleteBuddyAck.hasRet = NO;
  resultDeleteBuddyAck.ret = 0;
  return self;
}
- (BOOL) hasErrorInfo {
  return resultDeleteBuddyAck.hasErrorInfo;
}
- (NSString*) errorInfo {
  return resultDeleteBuddyAck.errorInfo;
}
- (DeleteBuddyAckBuilder*) setErrorInfo:(NSString*) value {
  resultDeleteBuddyAck.hasErrorInfo = YES;
  resultDeleteBuddyAck.errorInfo = value;
  return self;
}
- (DeleteBuddyAckBuilder*) clearErrorInfo {
  resultDeleteBuddyAck.hasErrorInfo = NO;
  resultDeleteBuddyAck.errorInfo = @"";
  return self;
}
@end

@interface GetSystemMsgList ()
@property UInt64 uid;
@end

@implementation GetSystemMsgList

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
  }
  return self;
}
static GetSystemMsgList* defaultGetSystemMsgListInstance = nil;
+ (void) initialize {
  if (self == [GetSystemMsgList class]) {
    defaultGetSystemMsgListInstance = [[GetSystemMsgList alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultGetSystemMsgListInstance;
}
- (instancetype) defaultInstance {
  return defaultGetSystemMsgListInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUid) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeUInt64:1 value:self.uid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeUInt64Size(1, self.uid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetSystemMsgList*) parseFromData:(NSData*) data {
  return (GetSystemMsgList*)[[[GetSystemMsgList builder] mergeFromData:data] build];
}
+ (GetSystemMsgList*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetSystemMsgList*)[[[GetSystemMsgList builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetSystemMsgList*) parseFromInputStream:(NSInputStream*) input {
  return (GetSystemMsgList*)[[[GetSystemMsgList builder] mergeFromInputStream:input] build];
}
+ (GetSystemMsgList*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetSystemMsgList*)[[[GetSystemMsgList builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetSystemMsgList*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetSystemMsgList*)[[[GetSystemMsgList builder] mergeFromCodedInputStream:input] build];
}
+ (GetSystemMsgList*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetSystemMsgList*)[[[GetSystemMsgList builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetSystemMsgListBuilder*) builder {
  return [[GetSystemMsgListBuilder alloc] init];
}
+ (GetSystemMsgListBuilder*) builderWithPrototype:(GetSystemMsgList*) prototype {
  return [[GetSystemMsgList builder] mergeFrom:prototype];
}
- (GetSystemMsgListBuilder*) builder {
  return [GetSystemMsgList builder];
}
- (GetSystemMsgListBuilder*) toBuilder {
  return [GetSystemMsgList builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.uid] forKey: @"uid"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GetSystemMsgList class]]) {
    return NO;
  }
  GetSystemMsgList *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GetSystemMsgListBuilder()
@property (strong) GetSystemMsgList* resultGetSystemMsgList;
@end

@implementation GetSystemMsgListBuilder
@synthesize resultGetSystemMsgList;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetSystemMsgList = [[GetSystemMsgList alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetSystemMsgList;
}
- (GetSystemMsgListBuilder*) clear {
  self.resultGetSystemMsgList = [[GetSystemMsgList alloc] init];
  return self;
}
- (GetSystemMsgListBuilder*) clone {
  return [GetSystemMsgList builderWithPrototype:resultGetSystemMsgList];
}
- (GetSystemMsgList*) defaultInstance {
  return [GetSystemMsgList defaultInstance];
}
- (GetSystemMsgList*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetSystemMsgList*) buildPartial {
  GetSystemMsgList* returnMe = resultGetSystemMsgList;
  self.resultGetSystemMsgList = nil;
  return returnMe;
}
- (GetSystemMsgListBuilder*) mergeFrom:(GetSystemMsgList*) other {
  if (other == [GetSystemMsgList defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetSystemMsgListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetSystemMsgListBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultGetSystemMsgList.hasUid;
}
- (UInt64) uid {
  return resultGetSystemMsgList.uid;
}
- (GetSystemMsgListBuilder*) setUid:(UInt64) value {
  resultGetSystemMsgList.hasUid = YES;
  resultGetSystemMsgList.uid = value;
  return self;
}
- (GetSystemMsgListBuilder*) clearUid {
  resultGetSystemMsgList.hasUid = NO;
  resultGetSystemMsgList.uid = 0L;
  return self;
}
@end

@interface GetSystemMsgListAck ()
@property (strong) NSMutableArray * systemMsgListArray;
@property SInt32 ret;
@property (strong) NSString* errorInfo;
@end

@implementation GetSystemMsgListAck

@synthesize systemMsgListArray;
@dynamic systemMsgList;
- (BOOL) hasRet {
  return !!hasRet_;
}
- (void) setHasRet:(BOOL) _value_ {
  hasRet_ = !!_value_;
}
@synthesize ret;
- (BOOL) hasErrorInfo {
  return !!hasErrorInfo_;
}
- (void) setHasErrorInfo:(BOOL) _value_ {
  hasErrorInfo_ = !!_value_;
}
@synthesize errorInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.ret = 0;
    self.errorInfo = @"";
  }
  return self;
}
static GetSystemMsgListAck* defaultGetSystemMsgListAckInstance = nil;
+ (void) initialize {
  if (self == [GetSystemMsgListAck class]) {
    defaultGetSystemMsgListAckInstance = [[GetSystemMsgListAck alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultGetSystemMsgListAckInstance;
}
- (instancetype) defaultInstance {
  return defaultGetSystemMsgListAckInstance;
}
- (NSArray *)systemMsgList {
  return systemMsgListArray;
}
- (SysMessage*)systemMsgListAtIndex:(NSUInteger)index {
  return [systemMsgListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasRet) {
    return NO;
  }
  __block BOOL isInitsystemMsgList = YES;
   [self.systemMsgList enumerateObjectsUsingBlock:^(SysMessage *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitsystemMsgList = NO;
      *stop = YES;
    }
  }];
  if (!isInitsystemMsgList) return isInitsystemMsgList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.systemMsgListArray enumerateObjectsUsingBlock:^(SysMessage *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasRet) {
    [output writeInt32:2 value:self.ret];
  }
  if (self.hasErrorInfo) {
    [output writeString:3 value:self.errorInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.systemMsgListArray enumerateObjectsUsingBlock:^(SysMessage *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasRet) {
    size_ += computeInt32Size(2, self.ret);
  }
  if (self.hasErrorInfo) {
    size_ += computeStringSize(3, self.errorInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetSystemMsgListAck*) parseFromData:(NSData*) data {
  return (GetSystemMsgListAck*)[[[GetSystemMsgListAck builder] mergeFromData:data] build];
}
+ (GetSystemMsgListAck*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetSystemMsgListAck*)[[[GetSystemMsgListAck builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetSystemMsgListAck*) parseFromInputStream:(NSInputStream*) input {
  return (GetSystemMsgListAck*)[[[GetSystemMsgListAck builder] mergeFromInputStream:input] build];
}
+ (GetSystemMsgListAck*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetSystemMsgListAck*)[[[GetSystemMsgListAck builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetSystemMsgListAck*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetSystemMsgListAck*)[[[GetSystemMsgListAck builder] mergeFromCodedInputStream:input] build];
}
+ (GetSystemMsgListAck*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetSystemMsgListAck*)[[[GetSystemMsgListAck builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetSystemMsgListAckBuilder*) builder {
  return [[GetSystemMsgListAckBuilder alloc] init];
}
+ (GetSystemMsgListAckBuilder*) builderWithPrototype:(GetSystemMsgListAck*) prototype {
  return [[GetSystemMsgListAck builder] mergeFrom:prototype];
}
- (GetSystemMsgListAckBuilder*) builder {
  return [GetSystemMsgListAck builder];
}
- (GetSystemMsgListAckBuilder*) toBuilder {
  return [GetSystemMsgListAck builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.systemMsgListArray enumerateObjectsUsingBlock:^(SysMessage *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"systemMsgList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasRet) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ret", [NSNumber numberWithInteger:self.ret]];
  }
  if (self.hasErrorInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorInfo", self.errorInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (SysMessage* element in self.systemMsgListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"systemMsgList"];
  }
  if (self.hasRet) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ret] forKey: @"ret"];
  }
  if (self.hasErrorInfo) {
    [dictionary setObject: self.errorInfo forKey: @"errorInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GetSystemMsgListAck class]]) {
    return NO;
  }
  GetSystemMsgListAck *otherMessage = other;
  return
      [self.systemMsgListArray isEqualToArray:otherMessage.systemMsgListArray] &&
      self.hasRet == otherMessage.hasRet &&
      (!self.hasRet || self.ret == otherMessage.ret) &&
      self.hasErrorInfo == otherMessage.hasErrorInfo &&
      (!self.hasErrorInfo || [self.errorInfo isEqual:otherMessage.errorInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.systemMsgListArray enumerateObjectsUsingBlock:^(SysMessage *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasRet) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ret] hash];
  }
  if (self.hasErrorInfo) {
    hashCode = hashCode * 31 + [self.errorInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GetSystemMsgListAckBuilder()
@property (strong) GetSystemMsgListAck* resultGetSystemMsgListAck;
@end

@implementation GetSystemMsgListAckBuilder
@synthesize resultGetSystemMsgListAck;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetSystemMsgListAck = [[GetSystemMsgListAck alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetSystemMsgListAck;
}
- (GetSystemMsgListAckBuilder*) clear {
  self.resultGetSystemMsgListAck = [[GetSystemMsgListAck alloc] init];
  return self;
}
- (GetSystemMsgListAckBuilder*) clone {
  return [GetSystemMsgListAck builderWithPrototype:resultGetSystemMsgListAck];
}
- (GetSystemMsgListAck*) defaultInstance {
  return [GetSystemMsgListAck defaultInstance];
}
- (GetSystemMsgListAck*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetSystemMsgListAck*) buildPartial {
  GetSystemMsgListAck* returnMe = resultGetSystemMsgListAck;
  self.resultGetSystemMsgListAck = nil;
  return returnMe;
}
- (GetSystemMsgListAckBuilder*) mergeFrom:(GetSystemMsgListAck*) other {
  if (other == [GetSystemMsgListAck defaultInstance]) {
    return self;
  }
  if (other.systemMsgListArray.count > 0) {
    if (resultGetSystemMsgListAck.systemMsgListArray == nil) {
      resultGetSystemMsgListAck.systemMsgListArray = [[NSMutableArray alloc] initWithArray:other.systemMsgListArray];
    } else {
      [resultGetSystemMsgListAck.systemMsgListArray addObjectsFromArray:other.systemMsgListArray];
    }
  }
  if (other.hasRet) {
    [self setRet:other.ret];
  }
  if (other.hasErrorInfo) {
    [self setErrorInfo:other.errorInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetSystemMsgListAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetSystemMsgListAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        SysMessageBuilder* subBuilder = [SysMessage builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSystemMsgList:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setRet:[input readInt32]];
        break;
      }
      case 26: {
        [self setErrorInfo:[input readString]];
        break;
      }
    }
  }
}
- (NSMutableArray *)systemMsgList {
  return resultGetSystemMsgListAck.systemMsgListArray;
}
- (SysMessage*)systemMsgListAtIndex:(NSUInteger)index {
  return [resultGetSystemMsgListAck systemMsgListAtIndex:index];
}
- (GetSystemMsgListAckBuilder *)addSystemMsgList:(SysMessage*)value {
  if (resultGetSystemMsgListAck.systemMsgListArray == nil) {
    resultGetSystemMsgListAck.systemMsgListArray = [[NSMutableArray alloc]init];
  }
  [resultGetSystemMsgListAck.systemMsgListArray addObject:value];
  return self;
}
- (GetSystemMsgListAckBuilder *)setSystemMsgListArray:(NSArray *)array {
  resultGetSystemMsgListAck.systemMsgListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (GetSystemMsgListAckBuilder *)clearSystemMsgList {
  resultGetSystemMsgListAck.systemMsgListArray = nil;
  return self;
}
- (BOOL) hasRet {
  return resultGetSystemMsgListAck.hasRet;
}
- (SInt32) ret {
  return resultGetSystemMsgListAck.ret;
}
- (GetSystemMsgListAckBuilder*) setRet:(SInt32) value {
  resultGetSystemMsgListAck.hasRet = YES;
  resultGetSystemMsgListAck.ret = value;
  return self;
}
- (GetSystemMsgListAckBuilder*) clearRet {
  resultGetSystemMsgListAck.hasRet = NO;
  resultGetSystemMsgListAck.ret = 0;
  return self;
}
- (BOOL) hasErrorInfo {
  return resultGetSystemMsgListAck.hasErrorInfo;
}
- (NSString*) errorInfo {
  return resultGetSystemMsgListAck.errorInfo;
}
- (GetSystemMsgListAckBuilder*) setErrorInfo:(NSString*) value {
  resultGetSystemMsgListAck.hasErrorInfo = YES;
  resultGetSystemMsgListAck.errorInfo = value;
  return self;
}
- (GetSystemMsgListAckBuilder*) clearErrorInfo {
  resultGetSystemMsgListAck.hasErrorInfo = NO;
  resultGetSystemMsgListAck.errorInfo = @"";
  return self;
}
@end

@interface LoginReq ()
@property (strong) NSString* cstId;
@property (strong) NSString* loginToken;
@property UInt32 channelType;
@property (strong) NSString* entResNo;
@property UInt32 status;
@property BOOL forceLogin;
@property UInt32 deviceType;
@property (strong) NSString* deviceToken;
@end

@implementation LoginReq

- (BOOL) hasCstId {
  return !!hasCstId_;
}
- (void) setHasCstId:(BOOL) _value_ {
  hasCstId_ = !!_value_;
}
@synthesize cstId;
- (BOOL) hasLoginToken {
  return !!hasLoginToken_;
}
- (void) setHasLoginToken:(BOOL) _value_ {
  hasLoginToken_ = !!_value_;
}
@synthesize loginToken;
- (BOOL) hasChannelType {
  return !!hasChannelType_;
}
- (void) setHasChannelType:(BOOL) _value_ {
  hasChannelType_ = !!_value_;
}
@synthesize channelType;
- (BOOL) hasEntResNo {
  return !!hasEntResNo_;
}
- (void) setHasEntResNo:(BOOL) _value_ {
  hasEntResNo_ = !!_value_;
}
@synthesize entResNo;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasForceLogin {
  return !!hasForceLogin_;
}
- (void) setHasForceLogin:(BOOL) _value_ {
  hasForceLogin_ = !!_value_;
}
- (BOOL) forceLogin {
  return !!forceLogin_;
}
- (void) setForceLogin:(BOOL) _value_ {
  forceLogin_ = !!_value_;
}
- (BOOL) hasDeviceType {
  return !!hasDeviceType_;
}
- (void) setHasDeviceType:(BOOL) _value_ {
  hasDeviceType_ = !!_value_;
}
@synthesize deviceType;
- (BOOL) hasDeviceToken {
  return !!hasDeviceToken_;
}
- (void) setHasDeviceToken:(BOOL) _value_ {
  hasDeviceToken_ = !!_value_;
}
@synthesize deviceToken;
- (instancetype) init {
  if ((self = [super init])) {
    self.cstId = @"";
    self.loginToken = @"";
    self.channelType = 0;
    self.entResNo = @"";
    self.status = 0;
    self.forceLogin = NO;
    self.deviceType = 0;
    self.deviceToken = @"";
  }
  return self;
}
static LoginReq* defaultLoginReqInstance = nil;
+ (void) initialize {
  if (self == [LoginReq class]) {
    defaultLoginReqInstance = [[LoginReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultLoginReqInstance;
}
- (instancetype) defaultInstance {
  return defaultLoginReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCstId) {
    return NO;
  }
  if (!self.hasLoginToken) {
    return NO;
  }
  if (!self.hasChannelType) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  if (!self.hasForceLogin) {
    return NO;
  }
  if (!self.hasDeviceType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCstId) {
    [output writeString:1 value:self.cstId];
  }
  if (self.hasLoginToken) {
    [output writeString:2 value:self.loginToken];
  }
  if (self.hasChannelType) {
    [output writeUInt32:3 value:self.channelType];
  }
  if (self.hasEntResNo) {
    [output writeString:4 value:self.entResNo];
  }
  if (self.hasStatus) {
    [output writeUInt32:5 value:self.status];
  }
  if (self.hasForceLogin) {
    [output writeBool:6 value:self.forceLogin];
  }
  if (self.hasDeviceType) {
    [output writeUInt32:7 value:self.deviceType];
  }
  if (self.hasDeviceToken) {
    [output writeString:8 value:self.deviceToken];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCstId) {
    size_ += computeStringSize(1, self.cstId);
  }
  if (self.hasLoginToken) {
    size_ += computeStringSize(2, self.loginToken);
  }
  if (self.hasChannelType) {
    size_ += computeUInt32Size(3, self.channelType);
  }
  if (self.hasEntResNo) {
    size_ += computeStringSize(4, self.entResNo);
  }
  if (self.hasStatus) {
    size_ += computeUInt32Size(5, self.status);
  }
  if (self.hasForceLogin) {
    size_ += computeBoolSize(6, self.forceLogin);
  }
  if (self.hasDeviceType) {
    size_ += computeUInt32Size(7, self.deviceType);
  }
  if (self.hasDeviceToken) {
    size_ += computeStringSize(8, self.deviceToken);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LoginReq*) parseFromData:(NSData*) data {
  return (LoginReq*)[[[LoginReq builder] mergeFromData:data] build];
}
+ (LoginReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginReq*)[[[LoginReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoginReq*) parseFromInputStream:(NSInputStream*) input {
  return (LoginReq*)[[[LoginReq builder] mergeFromInputStream:input] build];
}
+ (LoginReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginReq*)[[[LoginReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoginReq*)[[[LoginReq builder] mergeFromCodedInputStream:input] build];
}
+ (LoginReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginReq*)[[[LoginReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginReqBuilder*) builder {
  return [[LoginReqBuilder alloc] init];
}
+ (LoginReqBuilder*) builderWithPrototype:(LoginReq*) prototype {
  return [[LoginReq builder] mergeFrom:prototype];
}
- (LoginReqBuilder*) builder {
  return [LoginReq builder];
}
- (LoginReqBuilder*) toBuilder {
  return [LoginReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCstId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cstId", self.cstId];
  }
  if (self.hasLoginToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"loginToken", self.loginToken];
  }
  if (self.hasChannelType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"channelType", [NSNumber numberWithInteger:self.channelType]];
  }
  if (self.hasEntResNo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"entResNo", self.entResNo];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasForceLogin) {
    [output appendFormat:@"%@%@: %@\n", indent, @"forceLogin", [NSNumber numberWithBool:self.forceLogin]];
  }
  if (self.hasDeviceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceType", [NSNumber numberWithInteger:self.deviceType]];
  }
  if (self.hasDeviceToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceToken", self.deviceToken];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCstId) {
    [dictionary setObject: self.cstId forKey: @"cstId"];
  }
  if (self.hasLoginToken) {
    [dictionary setObject: self.loginToken forKey: @"loginToken"];
  }
  if (self.hasChannelType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.channelType] forKey: @"channelType"];
  }
  if (self.hasEntResNo) {
    [dictionary setObject: self.entResNo forKey: @"entResNo"];
  }
  if (self.hasStatus) {
    [dictionary setObject: [NSNumber numberWithInteger:self.status] forKey: @"status"];
  }
  if (self.hasForceLogin) {
    [dictionary setObject: [NSNumber numberWithBool:self.forceLogin] forKey: @"forceLogin"];
  }
  if (self.hasDeviceType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.deviceType] forKey: @"deviceType"];
  }
  if (self.hasDeviceToken) {
    [dictionary setObject: self.deviceToken forKey: @"deviceToken"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LoginReq class]]) {
    return NO;
  }
  LoginReq *otherMessage = other;
  return
      self.hasCstId == otherMessage.hasCstId &&
      (!self.hasCstId || [self.cstId isEqual:otherMessage.cstId]) &&
      self.hasLoginToken == otherMessage.hasLoginToken &&
      (!self.hasLoginToken || [self.loginToken isEqual:otherMessage.loginToken]) &&
      self.hasChannelType == otherMessage.hasChannelType &&
      (!self.hasChannelType || self.channelType == otherMessage.channelType) &&
      self.hasEntResNo == otherMessage.hasEntResNo &&
      (!self.hasEntResNo || [self.entResNo isEqual:otherMessage.entResNo]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasForceLogin == otherMessage.hasForceLogin &&
      (!self.hasForceLogin || self.forceLogin == otherMessage.forceLogin) &&
      self.hasDeviceType == otherMessage.hasDeviceType &&
      (!self.hasDeviceType || self.deviceType == otherMessage.deviceType) &&
      self.hasDeviceToken == otherMessage.hasDeviceToken &&
      (!self.hasDeviceToken || [self.deviceToken isEqual:otherMessage.deviceToken]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCstId) {
    hashCode = hashCode * 31 + [self.cstId hash];
  }
  if (self.hasLoginToken) {
    hashCode = hashCode * 31 + [self.loginToken hash];
  }
  if (self.hasChannelType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.channelType] hash];
  }
  if (self.hasEntResNo) {
    hashCode = hashCode * 31 + [self.entResNo hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.status] hash];
  }
  if (self.hasForceLogin) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.forceLogin] hash];
  }
  if (self.hasDeviceType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.deviceType] hash];
  }
  if (self.hasDeviceToken) {
    hashCode = hashCode * 31 + [self.deviceToken hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface LoginReqBuilder()
@property (strong) LoginReq* resultLoginReq;
@end

@implementation LoginReqBuilder
@synthesize resultLoginReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultLoginReq = [[LoginReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultLoginReq;
}
- (LoginReqBuilder*) clear {
  self.resultLoginReq = [[LoginReq alloc] init];
  return self;
}
- (LoginReqBuilder*) clone {
  return [LoginReq builderWithPrototype:resultLoginReq];
}
- (LoginReq*) defaultInstance {
  return [LoginReq defaultInstance];
}
- (LoginReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoginReq*) buildPartial {
  LoginReq* returnMe = resultLoginReq;
  self.resultLoginReq = nil;
  return returnMe;
}
- (LoginReqBuilder*) mergeFrom:(LoginReq*) other {
  if (other == [LoginReq defaultInstance]) {
    return self;
  }
  if (other.hasCstId) {
    [self setCstId:other.cstId];
  }
  if (other.hasLoginToken) {
    [self setLoginToken:other.loginToken];
  }
  if (other.hasChannelType) {
    [self setChannelType:other.channelType];
  }
  if (other.hasEntResNo) {
    [self setEntResNo:other.entResNo];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasForceLogin) {
    [self setForceLogin:other.forceLogin];
  }
  if (other.hasDeviceType) {
    [self setDeviceType:other.deviceType];
  }
  if (other.hasDeviceToken) {
    [self setDeviceToken:other.deviceToken];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoginReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoginReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCstId:[input readString]];
        break;
      }
      case 18: {
        [self setLoginToken:[input readString]];
        break;
      }
      case 24: {
        [self setChannelType:[input readUInt32]];
        break;
      }
      case 34: {
        [self setEntResNo:[input readString]];
        break;
      }
      case 40: {
        [self setStatus:[input readUInt32]];
        break;
      }
      case 48: {
        [self setForceLogin:[input readBool]];
        break;
      }
      case 56: {
        [self setDeviceType:[input readUInt32]];
        break;
      }
      case 66: {
        [self setDeviceToken:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCstId {
  return resultLoginReq.hasCstId;
}
- (NSString*) cstId {
  return resultLoginReq.cstId;
}
- (LoginReqBuilder*) setCstId:(NSString*) value {
  resultLoginReq.hasCstId = YES;
  resultLoginReq.cstId = value;
  return self;
}
- (LoginReqBuilder*) clearCstId {
  resultLoginReq.hasCstId = NO;
  resultLoginReq.cstId = @"";
  return self;
}
- (BOOL) hasLoginToken {
  return resultLoginReq.hasLoginToken;
}
- (NSString*) loginToken {
  return resultLoginReq.loginToken;
}
- (LoginReqBuilder*) setLoginToken:(NSString*) value {
  resultLoginReq.hasLoginToken = YES;
  resultLoginReq.loginToken = value;
  return self;
}
- (LoginReqBuilder*) clearLoginToken {
  resultLoginReq.hasLoginToken = NO;
  resultLoginReq.loginToken = @"";
  return self;
}
- (BOOL) hasChannelType {
  return resultLoginReq.hasChannelType;
}
- (UInt32) channelType {
  return resultLoginReq.channelType;
}
- (LoginReqBuilder*) setChannelType:(UInt32) value {
  resultLoginReq.hasChannelType = YES;
  resultLoginReq.channelType = value;
  return self;
}
- (LoginReqBuilder*) clearChannelType {
  resultLoginReq.hasChannelType = NO;
  resultLoginReq.channelType = 0;
  return self;
}
- (BOOL) hasEntResNo {
  return resultLoginReq.hasEntResNo;
}
- (NSString*) entResNo {
  return resultLoginReq.entResNo;
}
- (LoginReqBuilder*) setEntResNo:(NSString*) value {
  resultLoginReq.hasEntResNo = YES;
  resultLoginReq.entResNo = value;
  return self;
}
- (LoginReqBuilder*) clearEntResNo {
  resultLoginReq.hasEntResNo = NO;
  resultLoginReq.entResNo = @"";
  return self;
}
- (BOOL) hasStatus {
  return resultLoginReq.hasStatus;
}
- (UInt32) status {
  return resultLoginReq.status;
}
- (LoginReqBuilder*) setStatus:(UInt32) value {
  resultLoginReq.hasStatus = YES;
  resultLoginReq.status = value;
  return self;
}
- (LoginReqBuilder*) clearStatus {
  resultLoginReq.hasStatus = NO;
  resultLoginReq.status = 0;
  return self;
}
- (BOOL) hasForceLogin {
  return resultLoginReq.hasForceLogin;
}
- (BOOL) forceLogin {
  return resultLoginReq.forceLogin;
}
- (LoginReqBuilder*) setForceLogin:(BOOL) value {
  resultLoginReq.hasForceLogin = YES;
  resultLoginReq.forceLogin = value;
  return self;
}
- (LoginReqBuilder*) clearForceLogin {
  resultLoginReq.hasForceLogin = NO;
  resultLoginReq.forceLogin = NO;
  return self;
}
- (BOOL) hasDeviceType {
  return resultLoginReq.hasDeviceType;
}
- (UInt32) deviceType {
  return resultLoginReq.deviceType;
}
- (LoginReqBuilder*) setDeviceType:(UInt32) value {
  resultLoginReq.hasDeviceType = YES;
  resultLoginReq.deviceType = value;
  return self;
}
- (LoginReqBuilder*) clearDeviceType {
  resultLoginReq.hasDeviceType = NO;
  resultLoginReq.deviceType = 0;
  return self;
}
- (BOOL) hasDeviceToken {
  return resultLoginReq.hasDeviceToken;
}
- (NSString*) deviceToken {
  return resultLoginReq.deviceToken;
}
- (LoginReqBuilder*) setDeviceToken:(NSString*) value {
  resultLoginReq.hasDeviceToken = YES;
  resultLoginReq.deviceToken = value;
  return self;
}
- (LoginReqBuilder*) clearDeviceToken {
  resultLoginReq.hasDeviceToken = NO;
  resultLoginReq.deviceToken = @"";
  return self;
}
@end

@interface LoginRes ()
@property UInt64 userId;
@property SInt32 ret;
@property (strong) NSString* errorInfo;
@end

@implementation LoginRes

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasRet {
  return !!hasRet_;
}
- (void) setHasRet:(BOOL) _value_ {
  hasRet_ = !!_value_;
}
@synthesize ret;
- (BOOL) hasErrorInfo {
  return !!hasErrorInfo_;
}
- (void) setHasErrorInfo:(BOOL) _value_ {
  hasErrorInfo_ = !!_value_;
}
@synthesize errorInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0L;
    self.ret = 0;
    self.errorInfo = @"";
  }
  return self;
}
static LoginRes* defaultLoginResInstance = nil;
+ (void) initialize {
  if (self == [LoginRes class]) {
    defaultLoginResInstance = [[LoginRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultLoginResInstance;
}
- (instancetype) defaultInstance {
  return defaultLoginResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasRet) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt64:1 value:self.userId];
  }
  if (self.hasRet) {
    [output writeInt32:2 value:self.ret];
  }
  if (self.hasErrorInfo) {
    [output writeString:3 value:self.errorInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt64Size(1, self.userId);
  }
  if (self.hasRet) {
    size_ += computeInt32Size(2, self.ret);
  }
  if (self.hasErrorInfo) {
    size_ += computeStringSize(3, self.errorInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LoginRes*) parseFromData:(NSData*) data {
  return (LoginRes*)[[[LoginRes builder] mergeFromData:data] build];
}
+ (LoginRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginRes*)[[[LoginRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoginRes*) parseFromInputStream:(NSInputStream*) input {
  return (LoginRes*)[[[LoginRes builder] mergeFromInputStream:input] build];
}
+ (LoginRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginRes*)[[[LoginRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoginRes*)[[[LoginRes builder] mergeFromCodedInputStream:input] build];
}
+ (LoginRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginRes*)[[[LoginRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginResBuilder*) builder {
  return [[LoginResBuilder alloc] init];
}
+ (LoginResBuilder*) builderWithPrototype:(LoginRes*) prototype {
  return [[LoginRes builder] mergeFrom:prototype];
}
- (LoginResBuilder*) builder {
  return [LoginRes builder];
}
- (LoginResBuilder*) toBuilder {
  return [LoginRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasRet) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ret", [NSNumber numberWithInteger:self.ret]];
  }
  if (self.hasErrorInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorInfo", self.errorInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasRet) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ret] forKey: @"ret"];
  }
  if (self.hasErrorInfo) {
    [dictionary setObject: self.errorInfo forKey: @"errorInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LoginRes class]]) {
    return NO;
  }
  LoginRes *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasRet == otherMessage.hasRet &&
      (!self.hasRet || self.ret == otherMessage.ret) &&
      self.hasErrorInfo == otherMessage.hasErrorInfo &&
      (!self.hasErrorInfo || [self.errorInfo isEqual:otherMessage.errorInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasRet) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ret] hash];
  }
  if (self.hasErrorInfo) {
    hashCode = hashCode * 31 + [self.errorInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface LoginResBuilder()
@property (strong) LoginRes* resultLoginRes;
@end

@implementation LoginResBuilder
@synthesize resultLoginRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultLoginRes = [[LoginRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultLoginRes;
}
- (LoginResBuilder*) clear {
  self.resultLoginRes = [[LoginRes alloc] init];
  return self;
}
- (LoginResBuilder*) clone {
  return [LoginRes builderWithPrototype:resultLoginRes];
}
- (LoginRes*) defaultInstance {
  return [LoginRes defaultInstance];
}
- (LoginRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoginRes*) buildPartial {
  LoginRes* returnMe = resultLoginRes;
  self.resultLoginRes = nil;
  return returnMe;
}
- (LoginResBuilder*) mergeFrom:(LoginRes*) other {
  if (other == [LoginRes defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasRet) {
    [self setRet:other.ret];
  }
  if (other.hasErrorInfo) {
    [self setErrorInfo:other.errorInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoginResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoginResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt64]];
        break;
      }
      case 16: {
        [self setRet:[input readInt32]];
        break;
      }
      case 26: {
        [self setErrorInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultLoginRes.hasUserId;
}
- (UInt64) userId {
  return resultLoginRes.userId;
}
- (LoginResBuilder*) setUserId:(UInt64) value {
  resultLoginRes.hasUserId = YES;
  resultLoginRes.userId = value;
  return self;
}
- (LoginResBuilder*) clearUserId {
  resultLoginRes.hasUserId = NO;
  resultLoginRes.userId = 0L;
  return self;
}
- (BOOL) hasRet {
  return resultLoginRes.hasRet;
}
- (SInt32) ret {
  return resultLoginRes.ret;
}
- (LoginResBuilder*) setRet:(SInt32) value {
  resultLoginRes.hasRet = YES;
  resultLoginRes.ret = value;
  return self;
}
- (LoginResBuilder*) clearRet {
  resultLoginRes.hasRet = NO;
  resultLoginRes.ret = 0;
  return self;
}
- (BOOL) hasErrorInfo {
  return resultLoginRes.hasErrorInfo;
}
- (NSString*) errorInfo {
  return resultLoginRes.errorInfo;
}
- (LoginResBuilder*) setErrorInfo:(NSString*) value {
  resultLoginRes.hasErrorInfo = YES;
  resultLoginRes.errorInfo = value;
  return self;
}
- (LoginResBuilder*) clearErrorInfo {
  resultLoginRes.hasErrorInfo = NO;
  resultLoginRes.errorInfo = @"";
  return self;
}
@end

@interface LoginOutReq ()
@property UInt64 userId;
@property UInt32 deviceType;
@end

@implementation LoginOutReq

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasDeviceType {
  return !!hasDeviceType_;
}
- (void) setHasDeviceType:(BOOL) _value_ {
  hasDeviceType_ = !!_value_;
}
@synthesize deviceType;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0L;
    self.deviceType = 0;
  }
  return self;
}
static LoginOutReq* defaultLoginOutReqInstance = nil;
+ (void) initialize {
  if (self == [LoginOutReq class]) {
    defaultLoginOutReqInstance = [[LoginOutReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultLoginOutReqInstance;
}
- (instancetype) defaultInstance {
  return defaultLoginOutReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasDeviceType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt64:1 value:self.userId];
  }
  if (self.hasDeviceType) {
    [output writeUInt32:2 value:self.deviceType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt64Size(1, self.userId);
  }
  if (self.hasDeviceType) {
    size_ += computeUInt32Size(2, self.deviceType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LoginOutReq*) parseFromData:(NSData*) data {
  return (LoginOutReq*)[[[LoginOutReq builder] mergeFromData:data] build];
}
+ (LoginOutReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginOutReq*)[[[LoginOutReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoginOutReq*) parseFromInputStream:(NSInputStream*) input {
  return (LoginOutReq*)[[[LoginOutReq builder] mergeFromInputStream:input] build];
}
+ (LoginOutReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginOutReq*)[[[LoginOutReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginOutReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoginOutReq*)[[[LoginOutReq builder] mergeFromCodedInputStream:input] build];
}
+ (LoginOutReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginOutReq*)[[[LoginOutReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginOutReqBuilder*) builder {
  return [[LoginOutReqBuilder alloc] init];
}
+ (LoginOutReqBuilder*) builderWithPrototype:(LoginOutReq*) prototype {
  return [[LoginOutReq builder] mergeFrom:prototype];
}
- (LoginOutReqBuilder*) builder {
  return [LoginOutReq builder];
}
- (LoginOutReqBuilder*) toBuilder {
  return [LoginOutReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasDeviceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceType", [NSNumber numberWithInteger:self.deviceType]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasDeviceType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.deviceType] forKey: @"deviceType"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LoginOutReq class]]) {
    return NO;
  }
  LoginOutReq *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasDeviceType == otherMessage.hasDeviceType &&
      (!self.hasDeviceType || self.deviceType == otherMessage.deviceType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasDeviceType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.deviceType] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface LoginOutReqBuilder()
@property (strong) LoginOutReq* resultLoginOutReq;
@end

@implementation LoginOutReqBuilder
@synthesize resultLoginOutReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultLoginOutReq = [[LoginOutReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultLoginOutReq;
}
- (LoginOutReqBuilder*) clear {
  self.resultLoginOutReq = [[LoginOutReq alloc] init];
  return self;
}
- (LoginOutReqBuilder*) clone {
  return [LoginOutReq builderWithPrototype:resultLoginOutReq];
}
- (LoginOutReq*) defaultInstance {
  return [LoginOutReq defaultInstance];
}
- (LoginOutReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoginOutReq*) buildPartial {
  LoginOutReq* returnMe = resultLoginOutReq;
  self.resultLoginOutReq = nil;
  return returnMe;
}
- (LoginOutReqBuilder*) mergeFrom:(LoginOutReq*) other {
  if (other == [LoginOutReq defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasDeviceType) {
    [self setDeviceType:other.deviceType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoginOutReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoginOutReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt64]];
        break;
      }
      case 16: {
        [self setDeviceType:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultLoginOutReq.hasUserId;
}
- (UInt64) userId {
  return resultLoginOutReq.userId;
}
- (LoginOutReqBuilder*) setUserId:(UInt64) value {
  resultLoginOutReq.hasUserId = YES;
  resultLoginOutReq.userId = value;
  return self;
}
- (LoginOutReqBuilder*) clearUserId {
  resultLoginOutReq.hasUserId = NO;
  resultLoginOutReq.userId = 0L;
  return self;
}
- (BOOL) hasDeviceType {
  return resultLoginOutReq.hasDeviceType;
}
- (UInt32) deviceType {
  return resultLoginOutReq.deviceType;
}
- (LoginOutReqBuilder*) setDeviceType:(UInt32) value {
  resultLoginOutReq.hasDeviceType = YES;
  resultLoginOutReq.deviceType = value;
  return self;
}
- (LoginOutReqBuilder*) clearDeviceType {
  resultLoginOutReq.hasDeviceType = NO;
  resultLoginOutReq.deviceType = 0;
  return self;
}
@end

@interface LoginOutRes ()
@property SInt32 ret;
@property (strong) NSString* errorInfo;
@end

@implementation LoginOutRes

- (BOOL) hasRet {
  return !!hasRet_;
}
- (void) setHasRet:(BOOL) _value_ {
  hasRet_ = !!_value_;
}
@synthesize ret;
- (BOOL) hasErrorInfo {
  return !!hasErrorInfo_;
}
- (void) setHasErrorInfo:(BOOL) _value_ {
  hasErrorInfo_ = !!_value_;
}
@synthesize errorInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.ret = 0;
    self.errorInfo = @"";
  }
  return self;
}
static LoginOutRes* defaultLoginOutResInstance = nil;
+ (void) initialize {
  if (self == [LoginOutRes class]) {
    defaultLoginOutResInstance = [[LoginOutRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultLoginOutResInstance;
}
- (instancetype) defaultInstance {
  return defaultLoginOutResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRet) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRet) {
    [output writeInt32:1 value:self.ret];
  }
  if (self.hasErrorInfo) {
    [output writeString:2 value:self.errorInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRet) {
    size_ += computeInt32Size(1, self.ret);
  }
  if (self.hasErrorInfo) {
    size_ += computeStringSize(2, self.errorInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (LoginOutRes*) parseFromData:(NSData*) data {
  return (LoginOutRes*)[[[LoginOutRes builder] mergeFromData:data] build];
}
+ (LoginOutRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginOutRes*)[[[LoginOutRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (LoginOutRes*) parseFromInputStream:(NSInputStream*) input {
  return (LoginOutRes*)[[[LoginOutRes builder] mergeFromInputStream:input] build];
}
+ (LoginOutRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginOutRes*)[[[LoginOutRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginOutRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (LoginOutRes*)[[[LoginOutRes builder] mergeFromCodedInputStream:input] build];
}
+ (LoginOutRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (LoginOutRes*)[[[LoginOutRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (LoginOutResBuilder*) builder {
  return [[LoginOutResBuilder alloc] init];
}
+ (LoginOutResBuilder*) builderWithPrototype:(LoginOutRes*) prototype {
  return [[LoginOutRes builder] mergeFrom:prototype];
}
- (LoginOutResBuilder*) builder {
  return [LoginOutRes builder];
}
- (LoginOutResBuilder*) toBuilder {
  return [LoginOutRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRet) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ret", [NSNumber numberWithInteger:self.ret]];
  }
  if (self.hasErrorInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorInfo", self.errorInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasRet) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ret] forKey: @"ret"];
  }
  if (self.hasErrorInfo) {
    [dictionary setObject: self.errorInfo forKey: @"errorInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[LoginOutRes class]]) {
    return NO;
  }
  LoginOutRes *otherMessage = other;
  return
      self.hasRet == otherMessage.hasRet &&
      (!self.hasRet || self.ret == otherMessage.ret) &&
      self.hasErrorInfo == otherMessage.hasErrorInfo &&
      (!self.hasErrorInfo || [self.errorInfo isEqual:otherMessage.errorInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasRet) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ret] hash];
  }
  if (self.hasErrorInfo) {
    hashCode = hashCode * 31 + [self.errorInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface LoginOutResBuilder()
@property (strong) LoginOutRes* resultLoginOutRes;
@end

@implementation LoginOutResBuilder
@synthesize resultLoginOutRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultLoginOutRes = [[LoginOutRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultLoginOutRes;
}
- (LoginOutResBuilder*) clear {
  self.resultLoginOutRes = [[LoginOutRes alloc] init];
  return self;
}
- (LoginOutResBuilder*) clone {
  return [LoginOutRes builderWithPrototype:resultLoginOutRes];
}
- (LoginOutRes*) defaultInstance {
  return [LoginOutRes defaultInstance];
}
- (LoginOutRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (LoginOutRes*) buildPartial {
  LoginOutRes* returnMe = resultLoginOutRes;
  self.resultLoginOutRes = nil;
  return returnMe;
}
- (LoginOutResBuilder*) mergeFrom:(LoginOutRes*) other {
  if (other == [LoginOutRes defaultInstance]) {
    return self;
  }
  if (other.hasRet) {
    [self setRet:other.ret];
  }
  if (other.hasErrorInfo) {
    [self setErrorInfo:other.errorInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (LoginOutResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (LoginOutResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRet:[input readInt32]];
        break;
      }
      case 18: {
        [self setErrorInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRet {
  return resultLoginOutRes.hasRet;
}
- (SInt32) ret {
  return resultLoginOutRes.ret;
}
- (LoginOutResBuilder*) setRet:(SInt32) value {
  resultLoginOutRes.hasRet = YES;
  resultLoginOutRes.ret = value;
  return self;
}
- (LoginOutResBuilder*) clearRet {
  resultLoginOutRes.hasRet = NO;
  resultLoginOutRes.ret = 0;
  return self;
}
- (BOOL) hasErrorInfo {
  return resultLoginOutRes.hasErrorInfo;
}
- (NSString*) errorInfo {
  return resultLoginOutRes.errorInfo;
}
- (LoginOutResBuilder*) setErrorInfo:(NSString*) value {
  resultLoginOutRes.hasErrorInfo = YES;
  resultLoginOutRes.errorInfo = value;
  return self;
}
- (LoginOutResBuilder*) clearErrorInfo {
  resultLoginOutRes.hasErrorInfo = NO;
  resultLoginOutRes.errorInfo = @"";
  return self;
}
@end

@interface ReloginReq ()
@property UInt64 userId;
@property UInt32 deviceType;
@end

@implementation ReloginReq

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasDeviceType {
  return !!hasDeviceType_;
}
- (void) setHasDeviceType:(BOOL) _value_ {
  hasDeviceType_ = !!_value_;
}
@synthesize deviceType;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0L;
    self.deviceType = 0;
  }
  return self;
}
static ReloginReq* defaultReloginReqInstance = nil;
+ (void) initialize {
  if (self == [ReloginReq class]) {
    defaultReloginReqInstance = [[ReloginReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultReloginReqInstance;
}
- (instancetype) defaultInstance {
  return defaultReloginReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasDeviceType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt64:1 value:self.userId];
  }
  if (self.hasDeviceType) {
    [output writeUInt32:2 value:self.deviceType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt64Size(1, self.userId);
  }
  if (self.hasDeviceType) {
    size_ += computeUInt32Size(2, self.deviceType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ReloginReq*) parseFromData:(NSData*) data {
  return (ReloginReq*)[[[ReloginReq builder] mergeFromData:data] build];
}
+ (ReloginReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReloginReq*)[[[ReloginReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ReloginReq*) parseFromInputStream:(NSInputStream*) input {
  return (ReloginReq*)[[[ReloginReq builder] mergeFromInputStream:input] build];
}
+ (ReloginReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReloginReq*)[[[ReloginReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReloginReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ReloginReq*)[[[ReloginReq builder] mergeFromCodedInputStream:input] build];
}
+ (ReloginReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReloginReq*)[[[ReloginReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReloginReqBuilder*) builder {
  return [[ReloginReqBuilder alloc] init];
}
+ (ReloginReqBuilder*) builderWithPrototype:(ReloginReq*) prototype {
  return [[ReloginReq builder] mergeFrom:prototype];
}
- (ReloginReqBuilder*) builder {
  return [ReloginReq builder];
}
- (ReloginReqBuilder*) toBuilder {
  return [ReloginReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasDeviceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceType", [NSNumber numberWithInteger:self.deviceType]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasDeviceType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.deviceType] forKey: @"deviceType"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ReloginReq class]]) {
    return NO;
  }
  ReloginReq *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasDeviceType == otherMessage.hasDeviceType &&
      (!self.hasDeviceType || self.deviceType == otherMessage.deviceType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasDeviceType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.deviceType] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ReloginReqBuilder()
@property (strong) ReloginReq* resultReloginReq;
@end

@implementation ReloginReqBuilder
@synthesize resultReloginReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReloginReq = [[ReloginReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReloginReq;
}
- (ReloginReqBuilder*) clear {
  self.resultReloginReq = [[ReloginReq alloc] init];
  return self;
}
- (ReloginReqBuilder*) clone {
  return [ReloginReq builderWithPrototype:resultReloginReq];
}
- (ReloginReq*) defaultInstance {
  return [ReloginReq defaultInstance];
}
- (ReloginReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ReloginReq*) buildPartial {
  ReloginReq* returnMe = resultReloginReq;
  self.resultReloginReq = nil;
  return returnMe;
}
- (ReloginReqBuilder*) mergeFrom:(ReloginReq*) other {
  if (other == [ReloginReq defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasDeviceType) {
    [self setDeviceType:other.deviceType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ReloginReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ReloginReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt64]];
        break;
      }
      case 16: {
        [self setDeviceType:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultReloginReq.hasUserId;
}
- (UInt64) userId {
  return resultReloginReq.userId;
}
- (ReloginReqBuilder*) setUserId:(UInt64) value {
  resultReloginReq.hasUserId = YES;
  resultReloginReq.userId = value;
  return self;
}
- (ReloginReqBuilder*) clearUserId {
  resultReloginReq.hasUserId = NO;
  resultReloginReq.userId = 0L;
  return self;
}
- (BOOL) hasDeviceType {
  return resultReloginReq.hasDeviceType;
}
- (UInt32) deviceType {
  return resultReloginReq.deviceType;
}
- (ReloginReqBuilder*) setDeviceType:(UInt32) value {
  resultReloginReq.hasDeviceType = YES;
  resultReloginReq.deviceType = value;
  return self;
}
- (ReloginReqBuilder*) clearDeviceType {
  resultReloginReq.hasDeviceType = NO;
  resultReloginReq.deviceType = 0;
  return self;
}
@end

@interface ReloginRes ()
@property SInt32 ret;
@property (strong) NSString* errorInfo;
@end

@implementation ReloginRes

- (BOOL) hasRet {
  return !!hasRet_;
}
- (void) setHasRet:(BOOL) _value_ {
  hasRet_ = !!_value_;
}
@synthesize ret;
- (BOOL) hasErrorInfo {
  return !!hasErrorInfo_;
}
- (void) setHasErrorInfo:(BOOL) _value_ {
  hasErrorInfo_ = !!_value_;
}
@synthesize errorInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.ret = 0;
    self.errorInfo = @"";
  }
  return self;
}
static ReloginRes* defaultReloginResInstance = nil;
+ (void) initialize {
  if (self == [ReloginRes class]) {
    defaultReloginResInstance = [[ReloginRes alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultReloginResInstance;
}
- (instancetype) defaultInstance {
  return defaultReloginResInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRet) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRet) {
    [output writeInt32:1 value:self.ret];
  }
  if (self.hasErrorInfo) {
    [output writeString:2 value:self.errorInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRet) {
    size_ += computeInt32Size(1, self.ret);
  }
  if (self.hasErrorInfo) {
    size_ += computeStringSize(2, self.errorInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ReloginRes*) parseFromData:(NSData*) data {
  return (ReloginRes*)[[[ReloginRes builder] mergeFromData:data] build];
}
+ (ReloginRes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReloginRes*)[[[ReloginRes builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ReloginRes*) parseFromInputStream:(NSInputStream*) input {
  return (ReloginRes*)[[[ReloginRes builder] mergeFromInputStream:input] build];
}
+ (ReloginRes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReloginRes*)[[[ReloginRes builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReloginRes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ReloginRes*)[[[ReloginRes builder] mergeFromCodedInputStream:input] build];
}
+ (ReloginRes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ReloginRes*)[[[ReloginRes builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ReloginResBuilder*) builder {
  return [[ReloginResBuilder alloc] init];
}
+ (ReloginResBuilder*) builderWithPrototype:(ReloginRes*) prototype {
  return [[ReloginRes builder] mergeFrom:prototype];
}
- (ReloginResBuilder*) builder {
  return [ReloginRes builder];
}
- (ReloginResBuilder*) toBuilder {
  return [ReloginRes builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRet) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ret", [NSNumber numberWithInteger:self.ret]];
  }
  if (self.hasErrorInfo) {
    [output appendFormat:@"%@%@: %@\n", indent, @"errorInfo", self.errorInfo];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasRet) {
    [dictionary setObject: [NSNumber numberWithInteger:self.ret] forKey: @"ret"];
  }
  if (self.hasErrorInfo) {
    [dictionary setObject: self.errorInfo forKey: @"errorInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ReloginRes class]]) {
    return NO;
  }
  ReloginRes *otherMessage = other;
  return
      self.hasRet == otherMessage.hasRet &&
      (!self.hasRet || self.ret == otherMessage.ret) &&
      self.hasErrorInfo == otherMessage.hasErrorInfo &&
      (!self.hasErrorInfo || [self.errorInfo isEqual:otherMessage.errorInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasRet) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.ret] hash];
  }
  if (self.hasErrorInfo) {
    hashCode = hashCode * 31 + [self.errorInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ReloginResBuilder()
@property (strong) ReloginRes* resultReloginRes;
@end

@implementation ReloginResBuilder
@synthesize resultReloginRes;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReloginRes = [[ReloginRes alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReloginRes;
}
- (ReloginResBuilder*) clear {
  self.resultReloginRes = [[ReloginRes alloc] init];
  return self;
}
- (ReloginResBuilder*) clone {
  return [ReloginRes builderWithPrototype:resultReloginRes];
}
- (ReloginRes*) defaultInstance {
  return [ReloginRes defaultInstance];
}
- (ReloginRes*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ReloginRes*) buildPartial {
  ReloginRes* returnMe = resultReloginRes;
  self.resultReloginRes = nil;
  return returnMe;
}
- (ReloginResBuilder*) mergeFrom:(ReloginRes*) other {
  if (other == [ReloginRes defaultInstance]) {
    return self;
  }
  if (other.hasRet) {
    [self setRet:other.ret];
  }
  if (other.hasErrorInfo) {
    [self setErrorInfo:other.errorInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ReloginResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ReloginResBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRet:[input readInt32]];
        break;
      }
      case 18: {
        [self setErrorInfo:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasRet {
  return resultReloginRes.hasRet;
}
- (SInt32) ret {
  return resultReloginRes.ret;
}
- (ReloginResBuilder*) setRet:(SInt32) value {
  resultReloginRes.hasRet = YES;
  resultReloginRes.ret = value;
  return self;
}
- (ReloginResBuilder*) clearRet {
  resultReloginRes.hasRet = NO;
  resultReloginRes.ret = 0;
  return self;
}
- (BOOL) hasErrorInfo {
  return resultReloginRes.hasErrorInfo;
}
- (NSString*) errorInfo {
  return resultReloginRes.errorInfo;
}
- (ReloginResBuilder*) setErrorInfo:(NSString*) value {
  resultReloginRes.hasErrorInfo = YES;
  resultReloginRes.errorInfo = value;
  return self;
}
- (ReloginResBuilder*) clearErrorInfo {
  resultReloginRes.hasErrorInfo = NO;
  resultReloginRes.errorInfo = @"";
  return self;
}
@end

@interface PushMsgNotify ()
@property UInt64 fromuid;
@property UInt32 serverid;
@property UInt32 msgtype;
@property UInt64 toid;
@property (strong) NSData* content;
@property UInt64 msgid;
@property UInt32 devicetype;
@property UInt64 msgtime;
@end

@implementation PushMsgNotify

- (BOOL) hasFromuid {
  return !!hasFromuid_;
}
- (void) setHasFromuid:(BOOL) _value_ {
  hasFromuid_ = !!_value_;
}
@synthesize fromuid;
- (BOOL) hasServerid {
  return !!hasServerid_;
}
- (void) setHasServerid:(BOOL) _value_ {
  hasServerid_ = !!_value_;
}
@synthesize serverid;
- (BOOL) hasMsgtype {
  return !!hasMsgtype_;
}
- (void) setHasMsgtype:(BOOL) _value_ {
  hasMsgtype_ = !!_value_;
}
@synthesize msgtype;
- (BOOL) hasToid {
  return !!hasToid_;
}
- (void) setHasToid:(BOOL) _value_ {
  hasToid_ = !!_value_;
}
@synthesize toid;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasMsgid {
  return !!hasMsgid_;
}
- (void) setHasMsgid:(BOOL) _value_ {
  hasMsgid_ = !!_value_;
}
@synthesize msgid;
- (BOOL) hasDevicetype {
  return !!hasDevicetype_;
}
- (void) setHasDevicetype:(BOOL) _value_ {
  hasDevicetype_ = !!_value_;
}
@synthesize devicetype;
- (BOOL) hasMsgtime {
  return !!hasMsgtime_;
}
- (void) setHasMsgtime:(BOOL) _value_ {
  hasMsgtime_ = !!_value_;
}
@synthesize msgtime;
- (instancetype) init {
  if ((self = [super init])) {
    self.fromuid = 0L;
    self.serverid = 0;
    self.msgtype = 0;
    self.toid = 0L;
    self.content = [NSData data];
    self.msgid = 0L;
    self.devicetype = 0;
    self.msgtime = 0L;
  }
  return self;
}
static PushMsgNotify* defaultPushMsgNotifyInstance = nil;
+ (void) initialize {
  if (self == [PushMsgNotify class]) {
    defaultPushMsgNotifyInstance = [[PushMsgNotify alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPushMsgNotifyInstance;
}
- (instancetype) defaultInstance {
  return defaultPushMsgNotifyInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFromuid) {
    return NO;
  }
  if (!self.hasServerid) {
    return NO;
  }
  if (!self.hasMsgtype) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasMsgid) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFromuid) {
    [output writeUInt64:1 value:self.fromuid];
  }
  if (self.hasServerid) {
    [output writeUInt32:2 value:self.serverid];
  }
  if (self.hasMsgtype) {
    [output writeUInt32:3 value:self.msgtype];
  }
  if (self.hasToid) {
    [output writeUInt64:4 value:self.toid];
  }
  if (self.hasContent) {
    [output writeData:5 value:self.content];
  }
  if (self.hasMsgid) {
    [output writeUInt64:6 value:self.msgid];
  }
  if (self.hasDevicetype) {
    [output writeUInt32:7 value:self.devicetype];
  }
  if (self.hasMsgtime) {
    [output writeUInt64:8 value:self.msgtime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFromuid) {
    size_ += computeUInt64Size(1, self.fromuid);
  }
  if (self.hasServerid) {
    size_ += computeUInt32Size(2, self.serverid);
  }
  if (self.hasMsgtype) {
    size_ += computeUInt32Size(3, self.msgtype);
  }
  if (self.hasToid) {
    size_ += computeUInt64Size(4, self.toid);
  }
  if (self.hasContent) {
    size_ += computeDataSize(5, self.content);
  }
  if (self.hasMsgid) {
    size_ += computeUInt64Size(6, self.msgid);
  }
  if (self.hasDevicetype) {
    size_ += computeUInt32Size(7, self.devicetype);
  }
  if (self.hasMsgtime) {
    size_ += computeUInt64Size(8, self.msgtime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PushMsgNotify*) parseFromData:(NSData*) data {
  return (PushMsgNotify*)[[[PushMsgNotify builder] mergeFromData:data] build];
}
+ (PushMsgNotify*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushMsgNotify*)[[[PushMsgNotify builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PushMsgNotify*) parseFromInputStream:(NSInputStream*) input {
  return (PushMsgNotify*)[[[PushMsgNotify builder] mergeFromInputStream:input] build];
}
+ (PushMsgNotify*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushMsgNotify*)[[[PushMsgNotify builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PushMsgNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PushMsgNotify*)[[[PushMsgNotify builder] mergeFromCodedInputStream:input] build];
}
+ (PushMsgNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushMsgNotify*)[[[PushMsgNotify builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PushMsgNotifyBuilder*) builder {
  return [[PushMsgNotifyBuilder alloc] init];
}
+ (PushMsgNotifyBuilder*) builderWithPrototype:(PushMsgNotify*) prototype {
  return [[PushMsgNotify builder] mergeFrom:prototype];
}
- (PushMsgNotifyBuilder*) builder {
  return [PushMsgNotify builder];
}
- (PushMsgNotifyBuilder*) toBuilder {
  return [PushMsgNotify builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFromuid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromuid", [NSNumber numberWithLongLong:self.fromuid]];
  }
  if (self.hasServerid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"serverid", [NSNumber numberWithInteger:self.serverid]];
  }
  if (self.hasMsgtype) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgtype", [NSNumber numberWithInteger:self.msgtype]];
  }
  if (self.hasToid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toid", [NSNumber numberWithLongLong:self.toid]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasMsgid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgid", [NSNumber numberWithLongLong:self.msgid]];
  }
  if (self.hasDevicetype) {
    [output appendFormat:@"%@%@: %@\n", indent, @"devicetype", [NSNumber numberWithInteger:self.devicetype]];
  }
  if (self.hasMsgtime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgtime", [NSNumber numberWithLongLong:self.msgtime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasFromuid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.fromuid] forKey: @"fromuid"];
  }
  if (self.hasServerid) {
    [dictionary setObject: [NSNumber numberWithInteger:self.serverid] forKey: @"serverid"];
  }
  if (self.hasMsgtype) {
    [dictionary setObject: [NSNumber numberWithInteger:self.msgtype] forKey: @"msgtype"];
  }
  if (self.hasToid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.toid] forKey: @"toid"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasMsgid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgid] forKey: @"msgid"];
  }
  if (self.hasDevicetype) {
    [dictionary setObject: [NSNumber numberWithInteger:self.devicetype] forKey: @"devicetype"];
  }
  if (self.hasMsgtime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgtime] forKey: @"msgtime"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PushMsgNotify class]]) {
    return NO;
  }
  PushMsgNotify *otherMessage = other;
  return
      self.hasFromuid == otherMessage.hasFromuid &&
      (!self.hasFromuid || self.fromuid == otherMessage.fromuid) &&
      self.hasServerid == otherMessage.hasServerid &&
      (!self.hasServerid || self.serverid == otherMessage.serverid) &&
      self.hasMsgtype == otherMessage.hasMsgtype &&
      (!self.hasMsgtype || self.msgtype == otherMessage.msgtype) &&
      self.hasToid == otherMessage.hasToid &&
      (!self.hasToid || self.toid == otherMessage.toid) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasMsgid == otherMessage.hasMsgid &&
      (!self.hasMsgid || self.msgid == otherMessage.msgid) &&
      self.hasDevicetype == otherMessage.hasDevicetype &&
      (!self.hasDevicetype || self.devicetype == otherMessage.devicetype) &&
      self.hasMsgtime == otherMessage.hasMsgtime &&
      (!self.hasMsgtime || self.msgtime == otherMessage.msgtime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFromuid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.fromuid] hash];
  }
  if (self.hasServerid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.serverid] hash];
  }
  if (self.hasMsgtype) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.msgtype] hash];
  }
  if (self.hasToid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.toid] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasMsgid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgid] hash];
  }
  if (self.hasDevicetype) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.devicetype] hash];
  }
  if (self.hasMsgtime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgtime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PushMsgNotifyBuilder()
@property (strong) PushMsgNotify* resultPushMsgNotify;
@end

@implementation PushMsgNotifyBuilder
@synthesize resultPushMsgNotify;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPushMsgNotify = [[PushMsgNotify alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPushMsgNotify;
}
- (PushMsgNotifyBuilder*) clear {
  self.resultPushMsgNotify = [[PushMsgNotify alloc] init];
  return self;
}
- (PushMsgNotifyBuilder*) clone {
  return [PushMsgNotify builderWithPrototype:resultPushMsgNotify];
}
- (PushMsgNotify*) defaultInstance {
  return [PushMsgNotify defaultInstance];
}
- (PushMsgNotify*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PushMsgNotify*) buildPartial {
  PushMsgNotify* returnMe = resultPushMsgNotify;
  self.resultPushMsgNotify = nil;
  return returnMe;
}
- (PushMsgNotifyBuilder*) mergeFrom:(PushMsgNotify*) other {
  if (other == [PushMsgNotify defaultInstance]) {
    return self;
  }
  if (other.hasFromuid) {
    [self setFromuid:other.fromuid];
  }
  if (other.hasServerid) {
    [self setServerid:other.serverid];
  }
  if (other.hasMsgtype) {
    [self setMsgtype:other.msgtype];
  }
  if (other.hasToid) {
    [self setToid:other.toid];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasMsgid) {
    [self setMsgid:other.msgid];
  }
  if (other.hasDevicetype) {
    [self setDevicetype:other.devicetype];
  }
  if (other.hasMsgtime) {
    [self setMsgtime:other.msgtime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PushMsgNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PushMsgNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFromuid:[input readUInt64]];
        break;
      }
      case 16: {
        [self setServerid:[input readUInt32]];
        break;
      }
      case 24: {
        [self setMsgtype:[input readUInt32]];
        break;
      }
      case 32: {
        [self setToid:[input readUInt64]];
        break;
      }
      case 42: {
        [self setContent:[input readData]];
        break;
      }
      case 48: {
        [self setMsgid:[input readUInt64]];
        break;
      }
      case 56: {
        [self setDevicetype:[input readUInt32]];
        break;
      }
      case 64: {
        [self setMsgtime:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasFromuid {
  return resultPushMsgNotify.hasFromuid;
}
- (UInt64) fromuid {
  return resultPushMsgNotify.fromuid;
}
- (PushMsgNotifyBuilder*) setFromuid:(UInt64) value {
  resultPushMsgNotify.hasFromuid = YES;
  resultPushMsgNotify.fromuid = value;
  return self;
}
- (PushMsgNotifyBuilder*) clearFromuid {
  resultPushMsgNotify.hasFromuid = NO;
  resultPushMsgNotify.fromuid = 0L;
  return self;
}
- (BOOL) hasServerid {
  return resultPushMsgNotify.hasServerid;
}
- (UInt32) serverid {
  return resultPushMsgNotify.serverid;
}
- (PushMsgNotifyBuilder*) setServerid:(UInt32) value {
  resultPushMsgNotify.hasServerid = YES;
  resultPushMsgNotify.serverid = value;
  return self;
}
- (PushMsgNotifyBuilder*) clearServerid {
  resultPushMsgNotify.hasServerid = NO;
  resultPushMsgNotify.serverid = 0;
  return self;
}
- (BOOL) hasMsgtype {
  return resultPushMsgNotify.hasMsgtype;
}
- (UInt32) msgtype {
  return resultPushMsgNotify.msgtype;
}
- (PushMsgNotifyBuilder*) setMsgtype:(UInt32) value {
  resultPushMsgNotify.hasMsgtype = YES;
  resultPushMsgNotify.msgtype = value;
  return self;
}
- (PushMsgNotifyBuilder*) clearMsgtype {
  resultPushMsgNotify.hasMsgtype = NO;
  resultPushMsgNotify.msgtype = 0;
  return self;
}
- (BOOL) hasToid {
  return resultPushMsgNotify.hasToid;
}
- (UInt64) toid {
  return resultPushMsgNotify.toid;
}
- (PushMsgNotifyBuilder*) setToid:(UInt64) value {
  resultPushMsgNotify.hasToid = YES;
  resultPushMsgNotify.toid = value;
  return self;
}
- (PushMsgNotifyBuilder*) clearToid {
  resultPushMsgNotify.hasToid = NO;
  resultPushMsgNotify.toid = 0L;
  return self;
}
- (BOOL) hasContent {
  return resultPushMsgNotify.hasContent;
}
- (NSData*) content {
  return resultPushMsgNotify.content;
}
- (PushMsgNotifyBuilder*) setContent:(NSData*) value {
  resultPushMsgNotify.hasContent = YES;
  resultPushMsgNotify.content = value;
  return self;
}
- (PushMsgNotifyBuilder*) clearContent {
  resultPushMsgNotify.hasContent = NO;
  resultPushMsgNotify.content = [NSData data];
  return self;
}
- (BOOL) hasMsgid {
  return resultPushMsgNotify.hasMsgid;
}
- (UInt64) msgid {
  return resultPushMsgNotify.msgid;
}
- (PushMsgNotifyBuilder*) setMsgid:(UInt64) value {
  resultPushMsgNotify.hasMsgid = YES;
  resultPushMsgNotify.msgid = value;
  return self;
}
- (PushMsgNotifyBuilder*) clearMsgid {
  resultPushMsgNotify.hasMsgid = NO;
  resultPushMsgNotify.msgid = 0L;
  return self;
}
- (BOOL) hasDevicetype {
  return resultPushMsgNotify.hasDevicetype;
}
- (UInt32) devicetype {
  return resultPushMsgNotify.devicetype;
}
- (PushMsgNotifyBuilder*) setDevicetype:(UInt32) value {
  resultPushMsgNotify.hasDevicetype = YES;
  resultPushMsgNotify.devicetype = value;
  return self;
}
- (PushMsgNotifyBuilder*) clearDevicetype {
  resultPushMsgNotify.hasDevicetype = NO;
  resultPushMsgNotify.devicetype = 0;
  return self;
}
- (BOOL) hasMsgtime {
  return resultPushMsgNotify.hasMsgtime;
}
- (UInt64) msgtime {
  return resultPushMsgNotify.msgtime;
}
- (PushMsgNotifyBuilder*) setMsgtime:(UInt64) value {
  resultPushMsgNotify.hasMsgtime = YES;
  resultPushMsgNotify.msgtime = value;
  return self;
}
- (PushMsgNotifyBuilder*) clearMsgtime {
  resultPushMsgNotify.hasMsgtime = NO;
  resultPushMsgNotify.msgtime = 0L;
  return self;
}
@end

@interface PushMsgRecvedNotify ()
@property UInt64 userId;
@property UInt64 plantformId;
@property UInt64 msgId;
@end

@implementation PushMsgRecvedNotify

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasPlantformId {
  return !!hasPlantformId_;
}
- (void) setHasPlantformId:(BOOL) _value_ {
  hasPlantformId_ = !!_value_;
}
@synthesize plantformId;
- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) _value_ {
  hasMsgId_ = !!_value_;
}
@synthesize msgId;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0L;
    self.plantformId = 0L;
    self.msgId = 0L;
  }
  return self;
}
static PushMsgRecvedNotify* defaultPushMsgRecvedNotifyInstance = nil;
+ (void) initialize {
  if (self == [PushMsgRecvedNotify class]) {
    defaultPushMsgRecvedNotifyInstance = [[PushMsgRecvedNotify alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultPushMsgRecvedNotifyInstance;
}
- (instancetype) defaultInstance {
  return defaultPushMsgRecvedNotifyInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasPlantformId) {
    return NO;
  }
  if (!self.hasMsgId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt64:1 value:self.userId];
  }
  if (self.hasPlantformId) {
    [output writeUInt64:2 value:self.plantformId];
  }
  if (self.hasMsgId) {
    [output writeUInt64:3 value:self.msgId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt64Size(1, self.userId);
  }
  if (self.hasPlantformId) {
    size_ += computeUInt64Size(2, self.plantformId);
  }
  if (self.hasMsgId) {
    size_ += computeUInt64Size(3, self.msgId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (PushMsgRecvedNotify*) parseFromData:(NSData*) data {
  return (PushMsgRecvedNotify*)[[[PushMsgRecvedNotify builder] mergeFromData:data] build];
}
+ (PushMsgRecvedNotify*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushMsgRecvedNotify*)[[[PushMsgRecvedNotify builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PushMsgRecvedNotify*) parseFromInputStream:(NSInputStream*) input {
  return (PushMsgRecvedNotify*)[[[PushMsgRecvedNotify builder] mergeFromInputStream:input] build];
}
+ (PushMsgRecvedNotify*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushMsgRecvedNotify*)[[[PushMsgRecvedNotify builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PushMsgRecvedNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PushMsgRecvedNotify*)[[[PushMsgRecvedNotify builder] mergeFromCodedInputStream:input] build];
}
+ (PushMsgRecvedNotify*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PushMsgRecvedNotify*)[[[PushMsgRecvedNotify builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PushMsgRecvedNotifyBuilder*) builder {
  return [[PushMsgRecvedNotifyBuilder alloc] init];
}
+ (PushMsgRecvedNotifyBuilder*) builderWithPrototype:(PushMsgRecvedNotify*) prototype {
  return [[PushMsgRecvedNotify builder] mergeFrom:prototype];
}
- (PushMsgRecvedNotifyBuilder*) builder {
  return [PushMsgRecvedNotify builder];
}
- (PushMsgRecvedNotifyBuilder*) toBuilder {
  return [PushMsgRecvedNotify builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasPlantformId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"plantformId", [NSNumber numberWithLongLong:self.plantformId]];
  }
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", [NSNumber numberWithLongLong:self.msgId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasPlantformId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.plantformId] forKey: @"plantformId"];
  }
  if (self.hasMsgId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgId] forKey: @"msgId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[PushMsgRecvedNotify class]]) {
    return NO;
  }
  PushMsgRecvedNotify *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasPlantformId == otherMessage.hasPlantformId &&
      (!self.hasPlantformId || self.plantformId == otherMessage.plantformId) &&
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || self.msgId == otherMessage.msgId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasPlantformId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.plantformId] hash];
  }
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface PushMsgRecvedNotifyBuilder()
@property (strong) PushMsgRecvedNotify* resultPushMsgRecvedNotify;
@end

@implementation PushMsgRecvedNotifyBuilder
@synthesize resultPushMsgRecvedNotify;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPushMsgRecvedNotify = [[PushMsgRecvedNotify alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPushMsgRecvedNotify;
}
- (PushMsgRecvedNotifyBuilder*) clear {
  self.resultPushMsgRecvedNotify = [[PushMsgRecvedNotify alloc] init];
  return self;
}
- (PushMsgRecvedNotifyBuilder*) clone {
  return [PushMsgRecvedNotify builderWithPrototype:resultPushMsgRecvedNotify];
}
- (PushMsgRecvedNotify*) defaultInstance {
  return [PushMsgRecvedNotify defaultInstance];
}
- (PushMsgRecvedNotify*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PushMsgRecvedNotify*) buildPartial {
  PushMsgRecvedNotify* returnMe = resultPushMsgRecvedNotify;
  self.resultPushMsgRecvedNotify = nil;
  return returnMe;
}
- (PushMsgRecvedNotifyBuilder*) mergeFrom:(PushMsgRecvedNotify*) other {
  if (other == [PushMsgRecvedNotify defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasPlantformId) {
    [self setPlantformId:other.plantformId];
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PushMsgRecvedNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PushMsgRecvedNotifyBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt64]];
        break;
      }
      case 16: {
        [self setPlantformId:[input readUInt64]];
        break;
      }
      case 24: {
        [self setMsgId:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultPushMsgRecvedNotify.hasUserId;
}
- (UInt64) userId {
  return resultPushMsgRecvedNotify.userId;
}
- (PushMsgRecvedNotifyBuilder*) setUserId:(UInt64) value {
  resultPushMsgRecvedNotify.hasUserId = YES;
  resultPushMsgRecvedNotify.userId = value;
  return self;
}
- (PushMsgRecvedNotifyBuilder*) clearUserId {
  resultPushMsgRecvedNotify.hasUserId = NO;
  resultPushMsgRecvedNotify.userId = 0L;
  return self;
}
- (BOOL) hasPlantformId {
  return resultPushMsgRecvedNotify.hasPlantformId;
}
- (UInt64) plantformId {
  return resultPushMsgRecvedNotify.plantformId;
}
- (PushMsgRecvedNotifyBuilder*) setPlantformId:(UInt64) value {
  resultPushMsgRecvedNotify.hasPlantformId = YES;
  resultPushMsgRecvedNotify.plantformId = value;
  return self;
}
- (PushMsgRecvedNotifyBuilder*) clearPlantformId {
  resultPushMsgRecvedNotify.hasPlantformId = NO;
  resultPushMsgRecvedNotify.plantformId = 0L;
  return self;
}
- (BOOL) hasMsgId {
  return resultPushMsgRecvedNotify.hasMsgId;
}
- (UInt64) msgId {
  return resultPushMsgRecvedNotify.msgId;
}
- (PushMsgRecvedNotifyBuilder*) setMsgId:(UInt64) value {
  resultPushMsgRecvedNotify.hasMsgId = YES;
  resultPushMsgRecvedNotify.msgId = value;
  return self;
}
- (PushMsgRecvedNotifyBuilder*) clearMsgId {
  resultPushMsgRecvedNotify.hasMsgId = NO;
  resultPushMsgRecvedNotify.msgId = 0L;
  return self;
}
@end

@interface RecentPushMessage ()
@property UInt32 unreads;
@property UInt64 plantformId;
@property UInt64 msgId;
@property (strong) NSString* content;
@end

@implementation RecentPushMessage

- (BOOL) hasUnreads {
  return !!hasUnreads_;
}
- (void) setHasUnreads:(BOOL) _value_ {
  hasUnreads_ = !!_value_;
}
@synthesize unreads;
- (BOOL) hasPlantformId {
  return !!hasPlantformId_;
}
- (void) setHasPlantformId:(BOOL) _value_ {
  hasPlantformId_ = !!_value_;
}
@synthesize plantformId;
- (BOOL) hasMsgId {
  return !!hasMsgId_;
}
- (void) setHasMsgId:(BOOL) _value_ {
  hasMsgId_ = !!_value_;
}
@synthesize msgId;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (instancetype) init {
  if ((self = [super init])) {
    self.unreads = 0;
    self.plantformId = 0L;
    self.msgId = 0L;
    self.content = @"";
  }
  return self;
}
static RecentPushMessage* defaultRecentPushMessageInstance = nil;
+ (void) initialize {
  if (self == [RecentPushMessage class]) {
    defaultRecentPushMessageInstance = [[RecentPushMessage alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultRecentPushMessageInstance;
}
- (instancetype) defaultInstance {
  return defaultRecentPushMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUnreads) {
    return NO;
  }
  if (!self.hasPlantformId) {
    return NO;
  }
  if (!self.hasMsgId) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUnreads) {
    [output writeUInt32:1 value:self.unreads];
  }
  if (self.hasPlantformId) {
    [output writeUInt64:2 value:self.plantformId];
  }
  if (self.hasMsgId) {
    [output writeUInt64:3 value:self.msgId];
  }
  if (self.hasContent) {
    [output writeString:4 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUnreads) {
    size_ += computeUInt32Size(1, self.unreads);
  }
  if (self.hasPlantformId) {
    size_ += computeUInt64Size(2, self.plantformId);
  }
  if (self.hasMsgId) {
    size_ += computeUInt64Size(3, self.msgId);
  }
  if (self.hasContent) {
    size_ += computeStringSize(4, self.content);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RecentPushMessage*) parseFromData:(NSData*) data {
  return (RecentPushMessage*)[[[RecentPushMessage builder] mergeFromData:data] build];
}
+ (RecentPushMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecentPushMessage*)[[[RecentPushMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecentPushMessage*) parseFromInputStream:(NSInputStream*) input {
  return (RecentPushMessage*)[[[RecentPushMessage builder] mergeFromInputStream:input] build];
}
+ (RecentPushMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecentPushMessage*)[[[RecentPushMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecentPushMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecentPushMessage*)[[[RecentPushMessage builder] mergeFromCodedInputStream:input] build];
}
+ (RecentPushMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecentPushMessage*)[[[RecentPushMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecentPushMessageBuilder*) builder {
  return [[RecentPushMessageBuilder alloc] init];
}
+ (RecentPushMessageBuilder*) builderWithPrototype:(RecentPushMessage*) prototype {
  return [[RecentPushMessage builder] mergeFrom:prototype];
}
- (RecentPushMessageBuilder*) builder {
  return [RecentPushMessage builder];
}
- (RecentPushMessageBuilder*) toBuilder {
  return [RecentPushMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUnreads) {
    [output appendFormat:@"%@%@: %@\n", indent, @"unreads", [NSNumber numberWithInteger:self.unreads]];
  }
  if (self.hasPlantformId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"plantformId", [NSNumber numberWithLongLong:self.plantformId]];
  }
  if (self.hasMsgId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgId", [NSNumber numberWithLongLong:self.msgId]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUnreads) {
    [dictionary setObject: [NSNumber numberWithInteger:self.unreads] forKey: @"unreads"];
  }
  if (self.hasPlantformId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.plantformId] forKey: @"plantformId"];
  }
  if (self.hasMsgId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.msgId] forKey: @"msgId"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RecentPushMessage class]]) {
    return NO;
  }
  RecentPushMessage *otherMessage = other;
  return
      self.hasUnreads == otherMessage.hasUnreads &&
      (!self.hasUnreads || self.unreads == otherMessage.unreads) &&
      self.hasPlantformId == otherMessage.hasPlantformId &&
      (!self.hasPlantformId || self.plantformId == otherMessage.plantformId) &&
      self.hasMsgId == otherMessage.hasMsgId &&
      (!self.hasMsgId || self.msgId == otherMessage.msgId) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUnreads) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.unreads] hash];
  }
  if (self.hasPlantformId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.plantformId] hash];
  }
  if (self.hasMsgId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.msgId] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RecentPushMessageBuilder()
@property (strong) RecentPushMessage* resultRecentPushMessage;
@end

@implementation RecentPushMessageBuilder
@synthesize resultRecentPushMessage;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRecentPushMessage = [[RecentPushMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRecentPushMessage;
}
- (RecentPushMessageBuilder*) clear {
  self.resultRecentPushMessage = [[RecentPushMessage alloc] init];
  return self;
}
- (RecentPushMessageBuilder*) clone {
  return [RecentPushMessage builderWithPrototype:resultRecentPushMessage];
}
- (RecentPushMessage*) defaultInstance {
  return [RecentPushMessage defaultInstance];
}
- (RecentPushMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecentPushMessage*) buildPartial {
  RecentPushMessage* returnMe = resultRecentPushMessage;
  self.resultRecentPushMessage = nil;
  return returnMe;
}
- (RecentPushMessageBuilder*) mergeFrom:(RecentPushMessage*) other {
  if (other == [RecentPushMessage defaultInstance]) {
    return self;
  }
  if (other.hasUnreads) {
    [self setUnreads:other.unreads];
  }
  if (other.hasPlantformId) {
    [self setPlantformId:other.plantformId];
  }
  if (other.hasMsgId) {
    [self setMsgId:other.msgId];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecentPushMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecentPushMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUnreads:[input readUInt32]];
        break;
      }
      case 16: {
        [self setPlantformId:[input readUInt64]];
        break;
      }
      case 24: {
        [self setMsgId:[input readUInt64]];
        break;
      }
      case 34: {
        [self setContent:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUnreads {
  return resultRecentPushMessage.hasUnreads;
}
- (UInt32) unreads {
  return resultRecentPushMessage.unreads;
}
- (RecentPushMessageBuilder*) setUnreads:(UInt32) value {
  resultRecentPushMessage.hasUnreads = YES;
  resultRecentPushMessage.unreads = value;
  return self;
}
- (RecentPushMessageBuilder*) clearUnreads {
  resultRecentPushMessage.hasUnreads = NO;
  resultRecentPushMessage.unreads = 0;
  return self;
}
- (BOOL) hasPlantformId {
  return resultRecentPushMessage.hasPlantformId;
}
- (UInt64) plantformId {
  return resultRecentPushMessage.plantformId;
}
- (RecentPushMessageBuilder*) setPlantformId:(UInt64) value {
  resultRecentPushMessage.hasPlantformId = YES;
  resultRecentPushMessage.plantformId = value;
  return self;
}
- (RecentPushMessageBuilder*) clearPlantformId {
  resultRecentPushMessage.hasPlantformId = NO;
  resultRecentPushMessage.plantformId = 0L;
  return self;
}
- (BOOL) hasMsgId {
  return resultRecentPushMessage.hasMsgId;
}
- (UInt64) msgId {
  return resultRecentPushMessage.msgId;
}
- (RecentPushMessageBuilder*) setMsgId:(UInt64) value {
  resultRecentPushMessage.hasMsgId = YES;
  resultRecentPushMessage.msgId = value;
  return self;
}
- (RecentPushMessageBuilder*) clearMsgId {
  resultRecentPushMessage.hasMsgId = NO;
  resultRecentPushMessage.msgId = 0L;
  return self;
}
- (BOOL) hasContent {
  return resultRecentPushMessage.hasContent;
}
- (NSString*) content {
  return resultRecentPushMessage.content;
}
- (RecentPushMessageBuilder*) setContent:(NSString*) value {
  resultRecentPushMessage.hasContent = YES;
  resultRecentPushMessage.content = value;
  return self;
}
- (RecentPushMessageBuilder*) clearContent {
  resultRecentPushMessage.hasContent = NO;
  resultRecentPushMessage.content = @"";
  return self;
}
@end

@interface RecentPushMsgsRsp ()
@property (strong) NSMutableArray * msgListArray;
@property (strong) ErrorInfo* errorInfo;
@end

@implementation RecentPushMsgsRsp

@synthesize msgListArray;
@dynamic msgList;
- (BOOL) hasErrorInfo {
  return !!hasErrorInfo_;
}
- (void) setHasErrorInfo:(BOOL) _value_ {
  hasErrorInfo_ = !!_value_;
}
@synthesize errorInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.errorInfo = [ErrorInfo defaultInstance];
  }
  return self;
}
static RecentPushMsgsRsp* defaultRecentPushMsgsRspInstance = nil;
+ (void) initialize {
  if (self == [RecentPushMsgsRsp class]) {
    defaultRecentPushMsgsRspInstance = [[RecentPushMsgsRsp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultRecentPushMsgsRspInstance;
}
- (instancetype) defaultInstance {
  return defaultRecentPushMsgsRspInstance;
}
- (NSArray *)msgList {
  return msgListArray;
}
- (RecentPushMessage*)msgListAtIndex:(NSUInteger)index {
  return [msgListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitmsgList = YES;
   [self.msgList enumerateObjectsUsingBlock:^(RecentPushMessage *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitmsgList = NO;
      *stop = YES;
    }
  }];
  if (!isInitmsgList) return isInitmsgList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.msgListArray enumerateObjectsUsingBlock:^(RecentPushMessage *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasErrorInfo) {
    [output writeMessage:2 value:self.errorInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.msgListArray enumerateObjectsUsingBlock:^(RecentPushMessage *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasErrorInfo) {
    size_ += computeMessageSize(2, self.errorInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (RecentPushMsgsRsp*) parseFromData:(NSData*) data {
  return (RecentPushMsgsRsp*)[[[RecentPushMsgsRsp builder] mergeFromData:data] build];
}
+ (RecentPushMsgsRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecentPushMsgsRsp*)[[[RecentPushMsgsRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (RecentPushMsgsRsp*) parseFromInputStream:(NSInputStream*) input {
  return (RecentPushMsgsRsp*)[[[RecentPushMsgsRsp builder] mergeFromInputStream:input] build];
}
+ (RecentPushMsgsRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecentPushMsgsRsp*)[[[RecentPushMsgsRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecentPushMsgsRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RecentPushMsgsRsp*)[[[RecentPushMsgsRsp builder] mergeFromCodedInputStream:input] build];
}
+ (RecentPushMsgsRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RecentPushMsgsRsp*)[[[RecentPushMsgsRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (RecentPushMsgsRspBuilder*) builder {
  return [[RecentPushMsgsRspBuilder alloc] init];
}
+ (RecentPushMsgsRspBuilder*) builderWithPrototype:(RecentPushMsgsRsp*) prototype {
  return [[RecentPushMsgsRsp builder] mergeFrom:prototype];
}
- (RecentPushMsgsRspBuilder*) builder {
  return [RecentPushMsgsRsp builder];
}
- (RecentPushMsgsRspBuilder*) toBuilder {
  return [RecentPushMsgsRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.msgListArray enumerateObjectsUsingBlock:^(RecentPushMessage *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasErrorInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"errorInfo"];
    [self.errorInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (RecentPushMessage* element in self.msgListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"msgList"];
  }
  if (self.hasErrorInfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.errorInfo storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"errorInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[RecentPushMsgsRsp class]]) {
    return NO;
  }
  RecentPushMsgsRsp *otherMessage = other;
  return
      [self.msgListArray isEqualToArray:otherMessage.msgListArray] &&
      self.hasErrorInfo == otherMessage.hasErrorInfo &&
      (!self.hasErrorInfo || [self.errorInfo isEqual:otherMessage.errorInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.msgListArray enumerateObjectsUsingBlock:^(RecentPushMessage *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasErrorInfo) {
    hashCode = hashCode * 31 + [self.errorInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface RecentPushMsgsRspBuilder()
@property (strong) RecentPushMsgsRsp* resultRecentPushMsgsRsp;
@end

@implementation RecentPushMsgsRspBuilder
@synthesize resultRecentPushMsgsRsp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRecentPushMsgsRsp = [[RecentPushMsgsRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRecentPushMsgsRsp;
}
- (RecentPushMsgsRspBuilder*) clear {
  self.resultRecentPushMsgsRsp = [[RecentPushMsgsRsp alloc] init];
  return self;
}
- (RecentPushMsgsRspBuilder*) clone {
  return [RecentPushMsgsRsp builderWithPrototype:resultRecentPushMsgsRsp];
}
- (RecentPushMsgsRsp*) defaultInstance {
  return [RecentPushMsgsRsp defaultInstance];
}
- (RecentPushMsgsRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (RecentPushMsgsRsp*) buildPartial {
  RecentPushMsgsRsp* returnMe = resultRecentPushMsgsRsp;
  self.resultRecentPushMsgsRsp = nil;
  return returnMe;
}
- (RecentPushMsgsRspBuilder*) mergeFrom:(RecentPushMsgsRsp*) other {
  if (other == [RecentPushMsgsRsp defaultInstance]) {
    return self;
  }
  if (other.msgListArray.count > 0) {
    if (resultRecentPushMsgsRsp.msgListArray == nil) {
      resultRecentPushMsgsRsp.msgListArray = [[NSMutableArray alloc] initWithArray:other.msgListArray];
    } else {
      [resultRecentPushMsgsRsp.msgListArray addObjectsFromArray:other.msgListArray];
    }
  }
  if (other.hasErrorInfo) {
    [self mergeErrorInfo:other.errorInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (RecentPushMsgsRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (RecentPushMsgsRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        RecentPushMessageBuilder* subBuilder = [RecentPushMessage builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMsgList:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        ErrorInfoBuilder* subBuilder = [ErrorInfo builder];
        if (self.hasErrorInfo) {
          [subBuilder mergeFrom:self.errorInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setErrorInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)msgList {
  return resultRecentPushMsgsRsp.msgListArray;
}
- (RecentPushMessage*)msgListAtIndex:(NSUInteger)index {
  return [resultRecentPushMsgsRsp msgListAtIndex:index];
}
- (RecentPushMsgsRspBuilder *)addMsgList:(RecentPushMessage*)value {
  if (resultRecentPushMsgsRsp.msgListArray == nil) {
    resultRecentPushMsgsRsp.msgListArray = [[NSMutableArray alloc]init];
  }
  [resultRecentPushMsgsRsp.msgListArray addObject:value];
  return self;
}
- (RecentPushMsgsRspBuilder *)setMsgListArray:(NSArray *)array {
  resultRecentPushMsgsRsp.msgListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (RecentPushMsgsRspBuilder *)clearMsgList {
  resultRecentPushMsgsRsp.msgListArray = nil;
  return self;
}
- (BOOL) hasErrorInfo {
  return resultRecentPushMsgsRsp.hasErrorInfo;
}
- (ErrorInfo*) errorInfo {
  return resultRecentPushMsgsRsp.errorInfo;
}
- (RecentPushMsgsRspBuilder*) setErrorInfo:(ErrorInfo*) value {
  resultRecentPushMsgsRsp.hasErrorInfo = YES;
  resultRecentPushMsgsRsp.errorInfo = value;
  return self;
}
- (RecentPushMsgsRspBuilder*) setErrorInfoBuilder:(ErrorInfoBuilder*) builderForValue {
  return [self setErrorInfo:[builderForValue build]];
}
- (RecentPushMsgsRspBuilder*) mergeErrorInfo:(ErrorInfo*) value {
  if (resultRecentPushMsgsRsp.hasErrorInfo &&
      resultRecentPushMsgsRsp.errorInfo != [ErrorInfo defaultInstance]) {
    resultRecentPushMsgsRsp.errorInfo =
      [[[ErrorInfo builderWithPrototype:resultRecentPushMsgsRsp.errorInfo] mergeFrom:value] buildPartial];
  } else {
    resultRecentPushMsgsRsp.errorInfo = value;
  }
  resultRecentPushMsgsRsp.hasErrorInfo = YES;
  return self;
}
- (RecentPushMsgsRspBuilder*) clearErrorInfo {
  resultRecentPushMsgsRsp.hasErrorInfo = NO;
  resultRecentPushMsgsRsp.errorInfo = [ErrorInfo defaultInstance];
  return self;
}
@end

@interface GetOfflinePushMsgReq ()
@property UInt64 userId;
@property UInt64 plantformId;
@property UInt64 pullStart;
@property UInt32 pullCount;
@end

@implementation GetOfflinePushMsgReq

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasPlantformId {
  return !!hasPlantformId_;
}
- (void) setHasPlantformId:(BOOL) _value_ {
  hasPlantformId_ = !!_value_;
}
@synthesize plantformId;
- (BOOL) hasPullStart {
  return !!hasPullStart_;
}
- (void) setHasPullStart:(BOOL) _value_ {
  hasPullStart_ = !!_value_;
}
@synthesize pullStart;
- (BOOL) hasPullCount {
  return !!hasPullCount_;
}
- (void) setHasPullCount:(BOOL) _value_ {
  hasPullCount_ = !!_value_;
}
@synthesize pullCount;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0L;
    self.plantformId = 0L;
    self.pullStart = 0L;
    self.pullCount = 0;
  }
  return self;
}
static GetOfflinePushMsgReq* defaultGetOfflinePushMsgReqInstance = nil;
+ (void) initialize {
  if (self == [GetOfflinePushMsgReq class]) {
    defaultGetOfflinePushMsgReqInstance = [[GetOfflinePushMsgReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultGetOfflinePushMsgReqInstance;
}
- (instancetype) defaultInstance {
  return defaultGetOfflinePushMsgReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasPlantformId) {
    return NO;
  }
  if (!self.hasPullStart) {
    return NO;
  }
  if (!self.hasPullCount) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt64:1 value:self.userId];
  }
  if (self.hasPlantformId) {
    [output writeUInt64:2 value:self.plantformId];
  }
  if (self.hasPullStart) {
    [output writeUInt64:3 value:self.pullStart];
  }
  if (self.hasPullCount) {
    [output writeUInt32:4 value:self.pullCount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt64Size(1, self.userId);
  }
  if (self.hasPlantformId) {
    size_ += computeUInt64Size(2, self.plantformId);
  }
  if (self.hasPullStart) {
    size_ += computeUInt64Size(3, self.pullStart);
  }
  if (self.hasPullCount) {
    size_ += computeUInt32Size(4, self.pullCount);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetOfflinePushMsgReq*) parseFromData:(NSData*) data {
  return (GetOfflinePushMsgReq*)[[[GetOfflinePushMsgReq builder] mergeFromData:data] build];
}
+ (GetOfflinePushMsgReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetOfflinePushMsgReq*)[[[GetOfflinePushMsgReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetOfflinePushMsgReq*) parseFromInputStream:(NSInputStream*) input {
  return (GetOfflinePushMsgReq*)[[[GetOfflinePushMsgReq builder] mergeFromInputStream:input] build];
}
+ (GetOfflinePushMsgReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetOfflinePushMsgReq*)[[[GetOfflinePushMsgReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetOfflinePushMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetOfflinePushMsgReq*)[[[GetOfflinePushMsgReq builder] mergeFromCodedInputStream:input] build];
}
+ (GetOfflinePushMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetOfflinePushMsgReq*)[[[GetOfflinePushMsgReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetOfflinePushMsgReqBuilder*) builder {
  return [[GetOfflinePushMsgReqBuilder alloc] init];
}
+ (GetOfflinePushMsgReqBuilder*) builderWithPrototype:(GetOfflinePushMsgReq*) prototype {
  return [[GetOfflinePushMsgReq builder] mergeFrom:prototype];
}
- (GetOfflinePushMsgReqBuilder*) builder {
  return [GetOfflinePushMsgReq builder];
}
- (GetOfflinePushMsgReqBuilder*) toBuilder {
  return [GetOfflinePushMsgReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasPlantformId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"plantformId", [NSNumber numberWithLongLong:self.plantformId]];
  }
  if (self.hasPullStart) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pullStart", [NSNumber numberWithLongLong:self.pullStart]];
  }
  if (self.hasPullCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pullCount", [NSNumber numberWithInteger:self.pullCount]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasPlantformId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.plantformId] forKey: @"plantformId"];
  }
  if (self.hasPullStart) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.pullStart] forKey: @"pullStart"];
  }
  if (self.hasPullCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.pullCount] forKey: @"pullCount"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GetOfflinePushMsgReq class]]) {
    return NO;
  }
  GetOfflinePushMsgReq *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasPlantformId == otherMessage.hasPlantformId &&
      (!self.hasPlantformId || self.plantformId == otherMessage.plantformId) &&
      self.hasPullStart == otherMessage.hasPullStart &&
      (!self.hasPullStart || self.pullStart == otherMessage.pullStart) &&
      self.hasPullCount == otherMessage.hasPullCount &&
      (!self.hasPullCount || self.pullCount == otherMessage.pullCount) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasPlantformId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.plantformId] hash];
  }
  if (self.hasPullStart) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.pullStart] hash];
  }
  if (self.hasPullCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pullCount] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GetOfflinePushMsgReqBuilder()
@property (strong) GetOfflinePushMsgReq* resultGetOfflinePushMsgReq;
@end

@implementation GetOfflinePushMsgReqBuilder
@synthesize resultGetOfflinePushMsgReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetOfflinePushMsgReq = [[GetOfflinePushMsgReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetOfflinePushMsgReq;
}
- (GetOfflinePushMsgReqBuilder*) clear {
  self.resultGetOfflinePushMsgReq = [[GetOfflinePushMsgReq alloc] init];
  return self;
}
- (GetOfflinePushMsgReqBuilder*) clone {
  return [GetOfflinePushMsgReq builderWithPrototype:resultGetOfflinePushMsgReq];
}
- (GetOfflinePushMsgReq*) defaultInstance {
  return [GetOfflinePushMsgReq defaultInstance];
}
- (GetOfflinePushMsgReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetOfflinePushMsgReq*) buildPartial {
  GetOfflinePushMsgReq* returnMe = resultGetOfflinePushMsgReq;
  self.resultGetOfflinePushMsgReq = nil;
  return returnMe;
}
- (GetOfflinePushMsgReqBuilder*) mergeFrom:(GetOfflinePushMsgReq*) other {
  if (other == [GetOfflinePushMsgReq defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasPlantformId) {
    [self setPlantformId:other.plantformId];
  }
  if (other.hasPullStart) {
    [self setPullStart:other.pullStart];
  }
  if (other.hasPullCount) {
    [self setPullCount:other.pullCount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetOfflinePushMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetOfflinePushMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt64]];
        break;
      }
      case 16: {
        [self setPlantformId:[input readUInt64]];
        break;
      }
      case 24: {
        [self setPullStart:[input readUInt64]];
        break;
      }
      case 32: {
        [self setPullCount:[input readUInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultGetOfflinePushMsgReq.hasUserId;
}
- (UInt64) userId {
  return resultGetOfflinePushMsgReq.userId;
}
- (GetOfflinePushMsgReqBuilder*) setUserId:(UInt64) value {
  resultGetOfflinePushMsgReq.hasUserId = YES;
  resultGetOfflinePushMsgReq.userId = value;
  return self;
}
- (GetOfflinePushMsgReqBuilder*) clearUserId {
  resultGetOfflinePushMsgReq.hasUserId = NO;
  resultGetOfflinePushMsgReq.userId = 0L;
  return self;
}
- (BOOL) hasPlantformId {
  return resultGetOfflinePushMsgReq.hasPlantformId;
}
- (UInt64) plantformId {
  return resultGetOfflinePushMsgReq.plantformId;
}
- (GetOfflinePushMsgReqBuilder*) setPlantformId:(UInt64) value {
  resultGetOfflinePushMsgReq.hasPlantformId = YES;
  resultGetOfflinePushMsgReq.plantformId = value;
  return self;
}
- (GetOfflinePushMsgReqBuilder*) clearPlantformId {
  resultGetOfflinePushMsgReq.hasPlantformId = NO;
  resultGetOfflinePushMsgReq.plantformId = 0L;
  return self;
}
- (BOOL) hasPullStart {
  return resultGetOfflinePushMsgReq.hasPullStart;
}
- (UInt64) pullStart {
  return resultGetOfflinePushMsgReq.pullStart;
}
- (GetOfflinePushMsgReqBuilder*) setPullStart:(UInt64) value {
  resultGetOfflinePushMsgReq.hasPullStart = YES;
  resultGetOfflinePushMsgReq.pullStart = value;
  return self;
}
- (GetOfflinePushMsgReqBuilder*) clearPullStart {
  resultGetOfflinePushMsgReq.hasPullStart = NO;
  resultGetOfflinePushMsgReq.pullStart = 0L;
  return self;
}
- (BOOL) hasPullCount {
  return resultGetOfflinePushMsgReq.hasPullCount;
}
- (UInt32) pullCount {
  return resultGetOfflinePushMsgReq.pullCount;
}
- (GetOfflinePushMsgReqBuilder*) setPullCount:(UInt32) value {
  resultGetOfflinePushMsgReq.hasPullCount = YES;
  resultGetOfflinePushMsgReq.pullCount = value;
  return self;
}
- (GetOfflinePushMsgReqBuilder*) clearPullCount {
  resultGetOfflinePushMsgReq.hasPullCount = NO;
  resultGetOfflinePushMsgReq.pullCount = 0;
  return self;
}
@end

@interface GetOfflinePushMsgRsp ()
@property (strong) NSMutableArray * msgListArray;
@property (strong) ErrorInfo* errorInfo;
@end

@implementation GetOfflinePushMsgRsp

@synthesize msgListArray;
@dynamic msgList;
- (BOOL) hasErrorInfo {
  return !!hasErrorInfo_;
}
- (void) setHasErrorInfo:(BOOL) _value_ {
  hasErrorInfo_ = !!_value_;
}
@synthesize errorInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.errorInfo = [ErrorInfo defaultInstance];
  }
  return self;
}
static GetOfflinePushMsgRsp* defaultGetOfflinePushMsgRspInstance = nil;
+ (void) initialize {
  if (self == [GetOfflinePushMsgRsp class]) {
    defaultGetOfflinePushMsgRspInstance = [[GetOfflinePushMsgRsp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultGetOfflinePushMsgRspInstance;
}
- (instancetype) defaultInstance {
  return defaultGetOfflinePushMsgRspInstance;
}
- (NSArray *)msgList {
  return msgListArray;
}
- (PushMsgNotify*)msgListAtIndex:(NSUInteger)index {
  return [msgListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitmsgList = YES;
   [self.msgList enumerateObjectsUsingBlock:^(PushMsgNotify *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitmsgList = NO;
      *stop = YES;
    }
  }];
  if (!isInitmsgList) return isInitmsgList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.msgListArray enumerateObjectsUsingBlock:^(PushMsgNotify *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasErrorInfo) {
    [output writeMessage:2 value:self.errorInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.msgListArray enumerateObjectsUsingBlock:^(PushMsgNotify *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasErrorInfo) {
    size_ += computeMessageSize(2, self.errorInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (GetOfflinePushMsgRsp*) parseFromData:(NSData*) data {
  return (GetOfflinePushMsgRsp*)[[[GetOfflinePushMsgRsp builder] mergeFromData:data] build];
}
+ (GetOfflinePushMsgRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetOfflinePushMsgRsp*)[[[GetOfflinePushMsgRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetOfflinePushMsgRsp*) parseFromInputStream:(NSInputStream*) input {
  return (GetOfflinePushMsgRsp*)[[[GetOfflinePushMsgRsp builder] mergeFromInputStream:input] build];
}
+ (GetOfflinePushMsgRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetOfflinePushMsgRsp*)[[[GetOfflinePushMsgRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetOfflinePushMsgRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetOfflinePushMsgRsp*)[[[GetOfflinePushMsgRsp builder] mergeFromCodedInputStream:input] build];
}
+ (GetOfflinePushMsgRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetOfflinePushMsgRsp*)[[[GetOfflinePushMsgRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetOfflinePushMsgRspBuilder*) builder {
  return [[GetOfflinePushMsgRspBuilder alloc] init];
}
+ (GetOfflinePushMsgRspBuilder*) builderWithPrototype:(GetOfflinePushMsgRsp*) prototype {
  return [[GetOfflinePushMsgRsp builder] mergeFrom:prototype];
}
- (GetOfflinePushMsgRspBuilder*) builder {
  return [GetOfflinePushMsgRsp builder];
}
- (GetOfflinePushMsgRspBuilder*) toBuilder {
  return [GetOfflinePushMsgRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.msgListArray enumerateObjectsUsingBlock:^(PushMsgNotify *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasErrorInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"errorInfo"];
    [self.errorInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (PushMsgNotify* element in self.msgListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"msgList"];
  }
  if (self.hasErrorInfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.errorInfo storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"errorInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[GetOfflinePushMsgRsp class]]) {
    return NO;
  }
  GetOfflinePushMsgRsp *otherMessage = other;
  return
      [self.msgListArray isEqualToArray:otherMessage.msgListArray] &&
      self.hasErrorInfo == otherMessage.hasErrorInfo &&
      (!self.hasErrorInfo || [self.errorInfo isEqual:otherMessage.errorInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.msgListArray enumerateObjectsUsingBlock:^(PushMsgNotify *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasErrorInfo) {
    hashCode = hashCode * 31 + [self.errorInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface GetOfflinePushMsgRspBuilder()
@property (strong) GetOfflinePushMsgRsp* resultGetOfflinePushMsgRsp;
@end

@implementation GetOfflinePushMsgRspBuilder
@synthesize resultGetOfflinePushMsgRsp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetOfflinePushMsgRsp = [[GetOfflinePushMsgRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetOfflinePushMsgRsp;
}
- (GetOfflinePushMsgRspBuilder*) clear {
  self.resultGetOfflinePushMsgRsp = [[GetOfflinePushMsgRsp alloc] init];
  return self;
}
- (GetOfflinePushMsgRspBuilder*) clone {
  return [GetOfflinePushMsgRsp builderWithPrototype:resultGetOfflinePushMsgRsp];
}
- (GetOfflinePushMsgRsp*) defaultInstance {
  return [GetOfflinePushMsgRsp defaultInstance];
}
- (GetOfflinePushMsgRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetOfflinePushMsgRsp*) buildPartial {
  GetOfflinePushMsgRsp* returnMe = resultGetOfflinePushMsgRsp;
  self.resultGetOfflinePushMsgRsp = nil;
  return returnMe;
}
- (GetOfflinePushMsgRspBuilder*) mergeFrom:(GetOfflinePushMsgRsp*) other {
  if (other == [GetOfflinePushMsgRsp defaultInstance]) {
    return self;
  }
  if (other.msgListArray.count > 0) {
    if (resultGetOfflinePushMsgRsp.msgListArray == nil) {
      resultGetOfflinePushMsgRsp.msgListArray = [[NSMutableArray alloc] initWithArray:other.msgListArray];
    } else {
      [resultGetOfflinePushMsgRsp.msgListArray addObjectsFromArray:other.msgListArray];
    }
  }
  if (other.hasErrorInfo) {
    [self mergeErrorInfo:other.errorInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetOfflinePushMsgRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetOfflinePushMsgRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PushMsgNotifyBuilder* subBuilder = [PushMsgNotify builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMsgList:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        ErrorInfoBuilder* subBuilder = [ErrorInfo builder];
        if (self.hasErrorInfo) {
          [subBuilder mergeFrom:self.errorInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setErrorInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)msgList {
  return resultGetOfflinePushMsgRsp.msgListArray;
}
- (PushMsgNotify*)msgListAtIndex:(NSUInteger)index {
  return [resultGetOfflinePushMsgRsp msgListAtIndex:index];
}
- (GetOfflinePushMsgRspBuilder *)addMsgList:(PushMsgNotify*)value {
  if (resultGetOfflinePushMsgRsp.msgListArray == nil) {
    resultGetOfflinePushMsgRsp.msgListArray = [[NSMutableArray alloc]init];
  }
  [resultGetOfflinePushMsgRsp.msgListArray addObject:value];
  return self;
}
- (GetOfflinePushMsgRspBuilder *)setMsgListArray:(NSArray *)array {
  resultGetOfflinePushMsgRsp.msgListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (GetOfflinePushMsgRspBuilder *)clearMsgList {
  resultGetOfflinePushMsgRsp.msgListArray = nil;
  return self;
}
- (BOOL) hasErrorInfo {
  return resultGetOfflinePushMsgRsp.hasErrorInfo;
}
- (ErrorInfo*) errorInfo {
  return resultGetOfflinePushMsgRsp.errorInfo;
}
- (GetOfflinePushMsgRspBuilder*) setErrorInfo:(ErrorInfo*) value {
  resultGetOfflinePushMsgRsp.hasErrorInfo = YES;
  resultGetOfflinePushMsgRsp.errorInfo = value;
  return self;
}
- (GetOfflinePushMsgRspBuilder*) setErrorInfoBuilder:(ErrorInfoBuilder*) builderForValue {
  return [self setErrorInfo:[builderForValue build]];
}
- (GetOfflinePushMsgRspBuilder*) mergeErrorInfo:(ErrorInfo*) value {
  if (resultGetOfflinePushMsgRsp.hasErrorInfo &&
      resultGetOfflinePushMsgRsp.errorInfo != [ErrorInfo defaultInstance]) {
    resultGetOfflinePushMsgRsp.errorInfo =
      [[[ErrorInfo builderWithPrototype:resultGetOfflinePushMsgRsp.errorInfo] mergeFrom:value] buildPartial];
  } else {
    resultGetOfflinePushMsgRsp.errorInfo = value;
  }
  resultGetOfflinePushMsgRsp.hasErrorInfo = YES;
  return self;
}
- (GetOfflinePushMsgRspBuilder*) clearErrorInfo {
  resultGetOfflinePushMsgRsp.hasErrorInfo = NO;
  resultGetOfflinePushMsgRsp.errorInfo = [ErrorInfo defaultInstance];
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
