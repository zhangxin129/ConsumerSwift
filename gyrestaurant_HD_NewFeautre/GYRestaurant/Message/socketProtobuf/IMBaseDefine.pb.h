// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

// @@protoc_insertion_point(imports)

@class ClientRegReq;
@class ClientRegReqBuilder;
@class ClientRegRsp;
@class ClientRegRspBuilder;
@class ContactSessionInfo;
@class ContactSessionInfoBuilder;
@class DepartInfo;
@class DepartInfoBuilder;
@class ErrorInfo;
@class ErrorInfoBuilder;
@class GroupInfo;
@class GroupInfoBuilder;
@class GroupVersionInfo;
@class GroupVersionInfoBuilder;
@class IpAddr;
@class IpAddrBuilder;
@class MsgInfo;
@class MsgInfoBuilder;
@class OfflineFileInfo;
@class OfflineFileInfoBuilder;
@class PushResult;
@class PushResultBuilder;
@class PushShieldStatus;
@class PushShieldStatusBuilder;
@class ServerUserStat;
@class ServerUserStatBuilder;
@class ShieldStatus;
@class ShieldStatusBuilder;
@class UnreadInfo;
@class UnreadInfoBuilder;
@class UserInfo;
@class UserInfoBuilder;
@class UserStat;
@class UserStatBuilder;
@class UserTokenInfo;
@class UserTokenInfoBuilder;


typedef NS_ENUM(SInt32, ServiceID_) {
  ServiceID_SidLogin = 1,
  ServiceID_SidBuddyList = 2,
  ServiceID_SidMsg = 3,
  ServiceID_SidGroup = 4,
  ServiceID_SidFile = 5,
  ServiceID_SidSwitchService = 6,
  ServiceID_SidOther = 7,
  ServiceID_SidInternal = 8,
};

BOOL ServiceID_IsValidValue(ServiceID_ value);
NSString *NSStringFromServiceID_(ServiceID_ value);

typedef NS_ENUM(SInt32, ServerID) {
  ServerIDServerStatus = 110,
  ServerIDServerGroupQuery = 120,
  ServerIDServerMonitor = 200,
  ServerIDServerMessage = 300,
  ServerIDServerRouter = 400,
  ServerIDServerGroup = 500,
  ServerIDServerDba = 600,
  ServerIDServerApns = 700,
};

BOOL ServerIDIsValidValue(ServerID value);
NSString *NSStringFromServerID(ServerID value);

typedef NS_ENUM(SInt32, ClientServerCmdID) {
  ClientServerCmdIDCidRegReq = 26,
  ClientServerCmdIDCidRegRsp = 27,
};

BOOL ClientServerCmdIDIsValidValue(ClientServerCmdID value);
NSString *NSStringFromClientServerCmdID(ClientServerCmdID value);

typedef NS_ENUM(SInt32, MonitorCmdID) {
  MonitorCmdIDCidMonitorServerRegReq = 8193,
  MonitorCmdIDCidMonitorServerRegRsp = 8194,
  MonitorCmdIDCidMonitorServerListGetReq = 8195,
  MonitorCmdIDCidMonitorServerListGetRsp = 8196,
  MonitorCmdIDCidMonitorServerUpdateNotice = 8197,
  MonitorCmdIDCidMonitorServerUpdateNoticeRsp = 8198,
};

BOOL MonitorCmdIDIsValidValue(MonitorCmdID value);
NSString *NSStringFromMonitorCmdID(MonitorCmdID value);

typedef NS_ENUM(SInt32, MsgCmdID) {
  MsgCmdIDCidMessageRecentMsg = 12291,
  MsgCmdIDCidMessageRecentMsgAck = 12292,
  MsgCmdIDCidMessageOfflineMsg = 12293,
  MsgCmdIDCidMessageOfflineMsgAck = 12294,
  MsgCmdIDCidMessageBuddyGroupList = 12295,
  MsgCmdIDCidMessageBuddyGroupListAck = 12296,
  MsgCmdIDCidMessageBuddyList = 12297,
  MsgCmdIDCidMessageBuddyListAck = 12298,
  MsgCmdIDCidMessageChatMsg = 12299,
  MsgCmdIDCidMessageChatMsgAck = 12300,
  MsgCmdIDCidMessageMsgAck = 12301,
  MsgCmdIDCidMessageModifySubgroup = 12303,
  MsgCmdIDCidMessageModifySubgroupAck = 12304,
  MsgCmdIDCidMessageAddBuddy = 12305,
  MsgCmdIDCidMessageAddBuddyAck = 12306,
  MsgCmdIDCidMessageBuddyVerify = 12307,
  MsgCmdIDCidMessageBuddyVerifyAck = 12308,
  MsgCmdIDCidMessageDeleteBuddy = 12309,
  MsgCmdIDCidMessageDeleteBuddyAck = 12310,
  MsgCmdIDCidMessageSystemMsgList = 12311,
  MsgCmdIDCidMessageSystemMsgListAck = 12312,
  MsgCmdIDCidMessageLoginReq = 12313,
  MsgCmdIDCidMessageLoginRes = 12314,
  MsgCmdIDCidMessageLoginOutReq = 12315,
  MsgCmdIDCidMessageLoginOutRes = 12316,
  MsgCmdIDCidMessageReloginReq = 12317,
  MsgCmdIDCidMessageReloginRes = 12318,
  MsgCmdIDCidMessagePushNotify = 12321,
  MsgCmdIDCidMessagePushAck = 12323,
  MsgCmdIDCidMessagePushMsgsRsp = 12325,
};

BOOL MsgCmdIDIsValidValue(MsgCmdID value);
NSString *NSStringFromMsgCmdID(MsgCmdID value);

typedef NS_ENUM(SInt32, RouterCmdID) {
  RouterCmdIDCidRouterUserModStateReq = 16385,
  RouterCmdIDCidRouterUserModStateRsp = 16386,
  RouterCmdIDCidRouterUserStateReq = 16387,
  RouterCmdIDCidRouterUserStateRsp = 16388,
  RouterCmdIDCidRouterUserStateNotify = 16389,
  RouterCmdIDCidRouterKickoutNotify = 16391,
};

BOOL RouterCmdIDIsValidValue(RouterCmdID value);
NSString *NSStringFromRouterCmdID(RouterCmdID value);

typedef NS_ENUM(SInt32, StatusCmdID) {
  StatusCmdIDCidStatusModUserStateReq = 40961,
  StatusCmdIDCidStatusModUserStateRsp = 40962,
  StatusCmdIDCidStatusGetUserStateReq = 40963,
  StatusCmdIDCidStatusGetUserStateRsp = 40964,
  StatusCmdIDCidGetUserLoginInfoReq = 40965,
  StatusCmdIDCidGetUserLoginInfoRsp = 40966,
};

BOOL StatusCmdIDIsValidValue(StatusCmdID value);
NSString *NSStringFromStatusCmdID(StatusCmdID value);

typedef NS_ENUM(SInt32, GroupCmdID) {
  GroupCmdIDCidGroupUserOnlineNotify = 20481,
  GroupCmdIDCidGroupUserGroupInfoNotify = 20483,
  GroupCmdIDCidGroupUserMemberReq = 20485,
  GroupCmdIDCidGroupUserMemberRsp = 20486,
  GroupCmdIDCidGroupCreateNewReq = 20487,
  GroupCmdIDCidGroupCreateNewRsp = 20488,
  GroupCmdIDCidGroupInviteUserReq = 20489,
  GroupCmdIDCidGroupInviteUserRsp = 20496,
  GroupCmdIDCidGroupUserJoininNotify = 20497,
  GroupCmdIDCidGroupKickoutReq = 20499,
  GroupCmdIDCidGroupKickoutRsp = 20500,
  GroupCmdIDCidGroupUserLeaveNotify = 20501,
  GroupCmdIDCidGroupQueryReq = 20503,
  GroupCmdIDCidGroupQueryRsp = 20504,
  GroupCmdIDCidGroupUserApplyReq = 20505,
  GroupCmdIDCidGroupUserApplyRsp = 20512,
  GroupCmdIDCidGroupApplyInNotify = 20513,
  GroupCmdIDCidGroupValidateReq = 20515,
  GroupCmdIDCidGroupValidateRsp = 20516,
  GroupCmdIDCidGroupModReq = 20517,
  GroupCmdIDCidGroupModRsp = 20518,
  GroupCmdIDCidGroupUpdateNotify = 20519,
  GroupCmdIDCidGroupQuitReq = 20521,
  GroupCmdIDCidGroupQuitRsp = 20528,
  GroupCmdIDCidGroupDismissReq = 20529,
  GroupCmdIDCidGroupDismissRsp = 20530,
};

BOOL GroupCmdIDIsValidValue(GroupCmdID value);
NSString *NSStringFromGroupCmdID(GroupCmdID value);

typedef NS_ENUM(SInt32, GroupQueryCmdID) {
  GroupQueryCmdIDCidGqIsGroupNameExistReq = 45057,
  GroupQueryCmdIDCidGqIsGroupNameExistRsp = 45058,
  GroupQueryCmdIDCidGqGetUserCreateGroupMaxNumReq = 45059,
  GroupQueryCmdIDCidGqGetUserCreateGroupMaxNumRsp = 45060,
  GroupQueryCmdIDCidGqGetUserCreateGroupNumReq = 45061,
  GroupQueryCmdIDCidGqGetUserCreateGroupNumRsp = 45062,
  GroupQueryCmdIDCidGqGetGroupListReq = 45063,
  GroupQueryCmdIDCidGqGetGroupListRsp = 45064,
  GroupQueryCmdIDCidGqGetGroupByIdReq = 45065,
  GroupQueryCmdIDCidGqGetGroupByIdRsp = 45066,
  GroupQueryCmdIDCidGqGetGroupByKeyReq = 45067,
  GroupQueryCmdIDCidGqGetGroupByKeyRsp = 45068,
  GroupQueryCmdIDCidGqCreateGroupReq = 45069,
  GroupQueryCmdIDCidGqCreateGroupRsp = 45070,
  GroupQueryCmdIDCidGqRemoveGroupReq = 45071,
  GroupQueryCmdIDCidGqRemoveGroupRsp = 45072,
  GroupQueryCmdIDCidGqModifyGroupReq = 45073,
  GroupQueryCmdIDCidGqModifyGroupRsp = 45074,
  GroupQueryCmdIDCidGqGetGroupMemberListReq = 45075,
  GroupQueryCmdIDCidGqGetGroupMemberListRsp = 45076,
  GroupQueryCmdIDCidGqGetGroupMemberInfoReq = 45077,
  GroupQueryCmdIDCidGqGetGroupMemberInfoRsp = 45078,
  GroupQueryCmdIDCidGqAddMemberToGroupReq = 45079,
  GroupQueryCmdIDCidGqAddMemberToGroupRsp = 45080,
  GroupQueryCmdIDCidGqRemoveMemberReq = 45081,
  GroupQueryCmdIDCidGqRemoveMemberRsp = 45082,
  GroupQueryCmdIDCidGqModifyMemberInfoReq = 45083,
  GroupQueryCmdIDCidGqModifyMemberInfoRsp = 45084,
  GroupQueryCmdIDCidGqGetUserPriorityReq = 45085,
  GroupQueryCmdIDCidGqGetUserPriorityRsp = 45086,
};

BOOL GroupQueryCmdIDIsValidValue(GroupQueryCmdID value);
NSString *NSStringFromGroupQueryCmdID(GroupQueryCmdID value);

typedef NS_ENUM(SInt32, DBACmdID) {
  DBACmdIDCidDbaAddBuddy = 24597,
  DBACmdIDCidDbaAddBuddyAck = 24598,
  DBACmdIDCidDbaBuddyVerify = 24599,
  DBACmdIDCidDbaBuddyVerifyAck = 24600,
  DBACmdIDCidDbaGetGroupList = 24617,
  DBACmdIDCidDbaGetGroupListAck = 24624,
  DBACmdIDCidDbaLogin = 24641,
  DBACmdIDCidDbaLoginAck = 24642,
  DBACmdIDCidDbaGetGroupserverIp = 24645,
  DBACmdIDCidDbaGetGroupserverIpAck = 24646,
  DBACmdIDCidDbaGetUserStatus = 24647,
  DBACmdIDCidDbaGetUserStatusAck = 24648,
  DBACmdIDCidDbaModUserStatus = 24649,
  DBACmdIDCidDbaModUserStatusAck = 24656,
  DBACmdIDCidDbaSetMsgReadPos = 24657,
  DBACmdIDCidDbaSetMsgReadPosAck = 24658,
  DBACmdIDCidDbaSetSysmsgRead = 24661,
  DBACmdIDCidDbaSetSysmsgReadAck = 24662,
  DBACmdIDCidDbaSaveServerList = 24663,
  DBACmdIDCidDbaSaveServerListAck = 24664,
  DBACmdIDCidDbaGetServerList = 24665,
  DBACmdIDCidDbaGetServerListAck = 24672,
  DBACmdIDCidDbaIsGroupNameExistReq = 24833,
  DBACmdIDCidDbaIsGroupNameExistRsp = 24834,
  DBACmdIDCidDbaGetUserCreateGroupMaxNumReq = 24835,
  DBACmdIDCidDbaGetUserCreateGroupMaxNumRsp = 24836,
  DBACmdIDCidDbaGetUserCreateGroupNumReq = 24837,
  DBACmdIDCidDbaGetUserCreateGroupNumRsp = 24838,
  DBACmdIDCidDbaGetGroupListReq = 24839,
  DBACmdIDCidDbaGetGroupListRsp = 24840,
  DBACmdIDCidDbaGetGroupByIdReq = 24841,
  DBACmdIDCidDbaGetGroupByIdRsp = 24842,
  DBACmdIDCidDbaGetGroupByKeyReq = 24843,
  DBACmdIDCidDbaGetGroupByKeyRsp = 24844,
  DBACmdIDCidDbaCreateGroupReq = 24845,
  DBACmdIDCidDbaCreateGroupRsp = 24846,
  DBACmdIDCidDbaRemoveGroupReq = 24847,
  DBACmdIDCidDbaRemoveGroupRsp = 24848,
  DBACmdIDCidDbaModifyGroupReq = 24849,
  DBACmdIDCidDbaModifyGroupRsp = 24850,
  DBACmdIDCidDbaGetGroupMemberListReq = 24851,
  DBACmdIDCidDbaGetGroupMemberListRsp = 24852,
  DBACmdIDCidDbaGetGroupMemberInfoReq = 24853,
  DBACmdIDCidDbaGetGroupMemberInfoRsp = 24854,
  DBACmdIDCidDbaAddMemberToGroupReq = 24855,
  DBACmdIDCidDbaAddMemberToGroupRsp = 24856,
  DBACmdIDCidDbaRemoveMemberReq = 24857,
  DBACmdIDCidDbaRemoveMemberRsp = 24858,
  DBACmdIDCidDbaModifyMemberInfoReq = 24859,
  DBACmdIDCidDbaModifyMemberInfoRsp = 24860,
  DBACmdIDCidDbaGetUserPriorityReq = 24861,
  DBACmdIDCidDbaGetUserPriorityRsp = 24862,
  DBACmdIDCidDbaSavePushMsg = 25089,
  DBACmdIDCidDbaSavePushMsgAck = 25090,
  DBACmdIDCidDbaSavePushMsgRela = 25091,
  DBACmdIDCidDbaSavePushMsgRelaAck = 25092,
  DBACmdIDCidDbaRecvPushMsg = 25093,
  DBACmdIDCidDbaRecvPushMsgAck = 25094,
};

BOOL DBACmdIDIsValidValue(DBACmdID value);
NSString *NSStringFromDBACmdID(DBACmdID value);

typedef NS_ENUM(SInt32, OtherCmdID) {
  OtherCmdIDCidOtherHeartbeat = 1793,
  OtherCmdIDCidOtherStopRecvPacket = 1794,
  OtherCmdIDCidOtherValidateReq = 1795,
  OtherCmdIDCidOtherValidateRsp = 1796,
  OtherCmdIDCidOtherGetDeviceTokenReq = 1797,
  OtherCmdIDCidOtherGetDeviceTokenRsp = 1798,
  OtherCmdIDCidOtherRoleSet = 1799,
  OtherCmdIDCidOtherOnlineUserInfo = 1800,
  OtherCmdIDCidOtherMsgServInfo = 1801,
  OtherCmdIDCidOtherUserStatusUpdate = 1802,
  OtherCmdIDCidOtherUserCntUpdate = 1803,
  OtherCmdIDCidOtherServerKickUser = 1805,
  OtherCmdIDCidOtherLoginStatusNotify = 1806,
  OtherCmdIDCidOtherPushToUserReq = 1807,
  OtherCmdIDCidOtherPushToUserRsp = 1808,
  OtherCmdIDCidOtherGetShieldReq = 1809,
  OtherCmdIDCidOtherGetShieldRsp = 1810,
  OtherCmdIDCidOtherFileTransferReq = 1841,
  OtherCmdIDCidOtherFileTransferRsp = 1842,
  OtherCmdIDCidOtherFileServerIpReq = 1843,
  OtherCmdIDCidOtherFileServerIpRsp = 1844,
};

BOOL OtherCmdIDIsValidValue(OtherCmdID value);
NSString *NSStringFromOtherCmdID(OtherCmdID value);

typedef NS_ENUM(SInt32, FileCmdID) {
  FileCmdIDCidFileLoginReq = 1281,
  FileCmdIDCidFileLoginRes = 1282,
  FileCmdIDCidFileState = 1283,
  FileCmdIDCidFilePullDataReq = 1284,
  FileCmdIDCidFilePullDataRsp = 1285,
  FileCmdIDCidFileRequest = 1286,
  FileCmdIDCidFileResponse = 1287,
  FileCmdIDCidFileNotify = 1288,
  FileCmdIDCidFileHasOfflineReq = 1289,
  FileCmdIDCidFileHasOfflineRes = 1290,
  FileCmdIDCidFileAddOfflineReq = 1291,
  FileCmdIDCidFileDelOfflineReq = 1292,
};

BOOL FileCmdIDIsValidValue(FileCmdID value);
NSString *NSStringFromFileCmdID(FileCmdID value);

typedef NS_ENUM(SInt32, SwitchServiceCmdID) {
  SwitchServiceCmdIDCidSwitchP2PCmd = 1537,
};

BOOL SwitchServiceCmdIDIsValidValue(SwitchServiceCmdID value);
NSString *NSStringFromSwitchServiceCmdID(SwitchServiceCmdID value);

typedef NS_ENUM(SInt32, ApnsServiceCmdID) {
  ApnsServiceCmdIDCidApnsPushReq = 49153,
  ApnsServiceCmdIDCidApnsPushRsp = 49154,
};

BOOL ApnsServiceCmdIDIsValidValue(ApnsServiceCmdID value);
NSString *NSStringFromApnsServiceCmdID(ApnsServiceCmdID value);

typedef NS_ENUM(SInt32, ResultType) {
  ResultTypeRefuseReasonNone = 0,
  ResultTypeRefuseReasonNoMsgServer = 1,
  ResultTypeRefuseReasonMsgServerFull = 2,
  ResultTypeRefuseReasonNoDbServer = 3,
  ResultTypeRefuseReasonNoLoginServer = 4,
  ResultTypeRefuseReasonNoRouteServer = 5,
  ResultTypeRefuseReasonDbValidateFailed = 6,
  ResultTypeRefuseReasonVersionTooOld = 7,
};

BOOL ResultTypeIsValidValue(ResultType value);
NSString *NSStringFromResultType(ResultType value);

typedef NS_ENUM(SInt32, KickReasonType) {
  KickReasonTypeKickReasonDuplicateUser = 1,
  KickReasonTypeKickReasonMobileKick = 2,
};

BOOL KickReasonTypeIsValidValue(KickReasonType value);
NSString *NSStringFromKickReasonType(KickReasonType value);

typedef NS_ENUM(SInt32, OnlineListType) {
  OnlineListTypeOnlineListTypeFriendList = 1,
};

BOOL OnlineListTypeIsValidValue(OnlineListType value);
NSString *NSStringFromOnlineListType(OnlineListType value);

typedef NS_ENUM(SInt32, UserStatType) {
  UserStatTypeUserStatusOnline = 1,
  UserStatTypeUserStatusOffline = 2,
  UserStatTypeUserStatusLeave = 3,
};

BOOL UserStatTypeIsValidValue(UserStatType value);
NSString *NSStringFromUserStatType(UserStatType value);

typedef NS_ENUM(SInt32, SessionType) {
  SessionTypeSessionTypeSingle = 1,
  SessionTypeSessionTypeGroup = 2,
};

BOOL SessionTypeIsValidValue(SessionType value);
NSString *NSStringFromSessionType(SessionType value);

typedef NS_ENUM(SInt32, MsgType) {
  MsgTypeMsgTypeSingleText = 1,
  MsgTypeMsgTypeSingleAudio = 2,
  MsgTypeMsgTypeGroupText = 17,
  MsgTypeMsgTypeGroupAudio = 18,
};

BOOL MsgTypeIsValidValue(MsgType value);
NSString *NSStringFromMsgType(MsgType value);

typedef NS_ENUM(SInt32, ClientType) {
  ClientTypeClientTypeWindows = 1,
  ClientTypeClientTypeMac = 2,
  ClientTypeClientTypeIos = 17,
  ClientTypeClientTypeAndroid = 18,
};

BOOL ClientTypeIsValidValue(ClientType value);
NSString *NSStringFromClientType(ClientType value);

typedef NS_ENUM(SInt32, GroupType) {
  GroupTypeGroupTypeNormal = 1,
  GroupTypeGroupTypeTmp = 2,
};

BOOL GroupTypeIsValidValue(GroupType value);
NSString *NSStringFromGroupType(GroupType value);

typedef NS_ENUM(SInt32, GroupModifyType) {
  GroupModifyTypeGroupModifyTypeAdd = 1,
  GroupModifyTypeGroupModifyTypeDel = 2,
};

BOOL GroupModifyTypeIsValidValue(GroupModifyType value);
NSString *NSStringFromGroupModifyType(GroupModifyType value);

typedef NS_ENUM(SInt32, TransferFileType) {
  TransferFileTypeFileTypeOnline = 1,
  TransferFileTypeFileTypeOffline = 2,
};

BOOL TransferFileTypeIsValidValue(TransferFileType value);
NSString *NSStringFromTransferFileType(TransferFileType value);

typedef NS_ENUM(SInt32, ClientFileState) {
  ClientFileStateClientFilePeerReady = 0,
  ClientFileStateClientFileCancel = 1,
  ClientFileStateClientFileRefuse = 2,
  ClientFileStateClientFileDone = 3,
};

BOOL ClientFileStateIsValidValue(ClientFileState value);
NSString *NSStringFromClientFileState(ClientFileState value);

typedef NS_ENUM(SInt32, ClientFileRole) {
  ClientFileRoleClientRealtimeSender = 1,
  ClientFileRoleClientRealtimeRecver = 2,
  ClientFileRoleClientOfflineUpload = 3,
  ClientFileRoleClientOfflineDownload = 4,
};

BOOL ClientFileRoleIsValidValue(ClientFileRole value);
NSString *NSStringFromClientFileRole(ClientFileRole value);

typedef NS_ENUM(SInt32, FileServerError) {
  FileServerErrorFileServerErrnoOk = 0,
  FileServerErrorFileServerErrnoCreateTaskIdError = 1,
  FileServerErrorFileServerErrnoCreateTaskError = 2,
  FileServerErrorFileServerErrnoLoginInvalidToken = 3,
  FileServerErrorFileServerErrnoInvalidUserForTask = 4,
  FileServerErrorFileServerErrnoPullDataWithInvalidTaskId = 5,
  FileServerErrorFileServerErrnoPullDataIllieageUser = 6,
  FileServerErrorFileServerErrnoPullDataMkdirError = 7,
  FileServerErrorFileServerErrnoPullDataOpenFileError = 8,
  FileServerErrorFileServerErrnoPullDataReadFileHeaderError = 9,
  FileServerErrorFileServerErrnoPullDataAllocMemError = 10,
  FileServerErrorFileServerErrnoPullDataSeekOffsetError = 11,
  FileServerErrorFileServerErrnoPullDataFinished = 12,
};

BOOL FileServerErrorIsValidValue(FileServerError value);
NSString *NSStringFromFileServerError(FileServerError value);

typedef NS_ENUM(SInt32, SessionStatusType) {
  SessionStatusTypeSessionStatusOk = 0,
  SessionStatusTypeSessionStatusDelete = 1,
};

BOOL SessionStatusTypeIsValidValue(SessionStatusType value);
NSString *NSStringFromSessionStatusType(SessionStatusType value);

typedef NS_ENUM(SInt32, DepartmentStatusType) {
  DepartmentStatusTypeDeptStatusOk = 0,
  DepartmentStatusTypeDeptStatusDelete = 1,
};

BOOL DepartmentStatusTypeIsValidValue(DepartmentStatusType value);
NSString *NSStringFromDepartmentStatusType(DepartmentStatusType value);


@interface ImbaseDefineRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

#define IpAddr_ip @"ip"
#define IpAddr_port @"port"
@interface IpAddr : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasIp_:1;
  BOOL hasPort_:1;
  NSString* ip;
  UInt32 port;
}
- (BOOL) hasIp;
- (BOOL) hasPort;
@property (readonly, strong) NSString* ip;
@property (readonly) UInt32 port;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (IpAddrBuilder*) builder;
+ (IpAddrBuilder*) builder;
+ (IpAddrBuilder*) builderWithPrototype:(IpAddr*) prototype;
- (IpAddrBuilder*) toBuilder;

+ (IpAddr*) parseFromData:(NSData*) data;
+ (IpAddr*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IpAddr*) parseFromInputStream:(NSInputStream*) input;
+ (IpAddr*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (IpAddr*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (IpAddr*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface IpAddrBuilder : PBGeneratedMessageBuilder {
@private
  IpAddr* resultIpAddr;
}

- (IpAddr*) defaultInstance;

- (IpAddrBuilder*) clear;
- (IpAddrBuilder*) clone;

- (IpAddr*) build;
- (IpAddr*) buildPartial;

- (IpAddrBuilder*) mergeFrom:(IpAddr*) other;
- (IpAddrBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (IpAddrBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasIp;
- (NSString*) ip;
- (IpAddrBuilder*) setIp:(NSString*) value;
- (IpAddrBuilder*) clearIp;

- (BOOL) hasPort;
- (UInt32) port;
- (IpAddrBuilder*) setPort:(UInt32) value;
- (IpAddrBuilder*) clearPort;
@end

#define ErrorInfo_ret @"ret"
#define ErrorInfo_strinfo @"strinfo"
@interface ErrorInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasStrinfo_:1;
  BOOL hasRet_:1;
  NSData* strinfo;
  UInt32 ret;
}
- (BOOL) hasRet;
- (BOOL) hasStrinfo;
@property (readonly) UInt32 ret;
@property (readonly, strong) NSData* strinfo;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ErrorInfoBuilder*) builder;
+ (ErrorInfoBuilder*) builder;
+ (ErrorInfoBuilder*) builderWithPrototype:(ErrorInfo*) prototype;
- (ErrorInfoBuilder*) toBuilder;

+ (ErrorInfo*) parseFromData:(NSData*) data;
+ (ErrorInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ErrorInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ErrorInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ErrorInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ErrorInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ErrorInfoBuilder : PBGeneratedMessageBuilder {
@private
  ErrorInfo* resultErrorInfo;
}

- (ErrorInfo*) defaultInstance;

- (ErrorInfoBuilder*) clear;
- (ErrorInfoBuilder*) clone;

- (ErrorInfo*) build;
- (ErrorInfo*) buildPartial;

- (ErrorInfoBuilder*) mergeFrom:(ErrorInfo*) other;
- (ErrorInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ErrorInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRet;
- (UInt32) ret;
- (ErrorInfoBuilder*) setRet:(UInt32) value;
- (ErrorInfoBuilder*) clearRet;

- (BOOL) hasStrinfo;
- (NSData*) strinfo;
- (ErrorInfoBuilder*) setStrinfo:(NSData*) value;
- (ErrorInfoBuilder*) clearStrinfo;
@end

#define UserInfo_user_id @"userId"
#define UserInfo_user_gender @"userGender"
#define UserInfo_user_nick_name @"userNickName"
#define UserInfo_avatar_url @"avatarUrl"
#define UserInfo_department_id @"departmentId"
#define UserInfo_email @"email"
#define UserInfo_user_real_name @"userRealName"
#define UserInfo_user_tel @"userTel"
#define UserInfo_user_domain @"userDomain"
#define UserInfo_status @"status"
#define UserInfo_sign_info @"signInfo"
@interface UserInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasUserNickName_:1;
  BOOL hasAvatarUrl_:1;
  BOOL hasEmail_:1;
  BOOL hasUserRealName_:1;
  BOOL hasUserTel_:1;
  BOOL hasUserDomain_:1;
  BOOL hasSignInfo_:1;
  BOOL hasUserId_:1;
  BOOL hasUserGender_:1;
  BOOL hasDepartmentId_:1;
  BOOL hasStatus_:1;
  NSString* userNickName;
  NSString* avatarUrl;
  NSString* email;
  NSString* userRealName;
  NSString* userTel;
  NSString* userDomain;
  NSString* signInfo;
  UInt32 userId;
  UInt32 userGender;
  UInt32 departmentId;
  UInt32 status;
}
- (BOOL) hasUserId;
- (BOOL) hasUserGender;
- (BOOL) hasUserNickName;
- (BOOL) hasAvatarUrl;
- (BOOL) hasDepartmentId;
- (BOOL) hasEmail;
- (BOOL) hasUserRealName;
- (BOOL) hasUserTel;
- (BOOL) hasUserDomain;
- (BOOL) hasStatus;
- (BOOL) hasSignInfo;
@property (readonly) UInt32 userId;
@property (readonly) UInt32 userGender;
@property (readonly, strong) NSString* userNickName;
@property (readonly, strong) NSString* avatarUrl;
@property (readonly) UInt32 departmentId;
@property (readonly, strong) NSString* email;
@property (readonly, strong) NSString* userRealName;
@property (readonly, strong) NSString* userTel;
@property (readonly, strong) NSString* userDomain;
@property (readonly) UInt32 status;
@property (readonly, strong) NSString* signInfo;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserInfoBuilder*) builder;
+ (UserInfoBuilder*) builder;
+ (UserInfoBuilder*) builderWithPrototype:(UserInfo*) prototype;
- (UserInfoBuilder*) toBuilder;

+ (UserInfo*) parseFromData:(NSData*) data;
+ (UserInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserInfo*) parseFromInputStream:(NSInputStream*) input;
+ (UserInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserInfoBuilder : PBGeneratedMessageBuilder {
@private
  UserInfo* resultUserInfo;
}

- (UserInfo*) defaultInstance;

- (UserInfoBuilder*) clear;
- (UserInfoBuilder*) clone;

- (UserInfo*) build;
- (UserInfo*) buildPartial;

- (UserInfoBuilder*) mergeFrom:(UserInfo*) other;
- (UserInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (UInt32) userId;
- (UserInfoBuilder*) setUserId:(UInt32) value;
- (UserInfoBuilder*) clearUserId;

- (BOOL) hasUserGender;
- (UInt32) userGender;
- (UserInfoBuilder*) setUserGender:(UInt32) value;
- (UserInfoBuilder*) clearUserGender;

- (BOOL) hasUserNickName;
- (NSString*) userNickName;
- (UserInfoBuilder*) setUserNickName:(NSString*) value;
- (UserInfoBuilder*) clearUserNickName;

- (BOOL) hasAvatarUrl;
- (NSString*) avatarUrl;
- (UserInfoBuilder*) setAvatarUrl:(NSString*) value;
- (UserInfoBuilder*) clearAvatarUrl;

- (BOOL) hasDepartmentId;
- (UInt32) departmentId;
- (UserInfoBuilder*) setDepartmentId:(UInt32) value;
- (UserInfoBuilder*) clearDepartmentId;

- (BOOL) hasEmail;
- (NSString*) email;
- (UserInfoBuilder*) setEmail:(NSString*) value;
- (UserInfoBuilder*) clearEmail;

- (BOOL) hasUserRealName;
- (NSString*) userRealName;
- (UserInfoBuilder*) setUserRealName:(NSString*) value;
- (UserInfoBuilder*) clearUserRealName;

- (BOOL) hasUserTel;
- (NSString*) userTel;
- (UserInfoBuilder*) setUserTel:(NSString*) value;
- (UserInfoBuilder*) clearUserTel;

- (BOOL) hasUserDomain;
- (NSString*) userDomain;
- (UserInfoBuilder*) setUserDomain:(NSString*) value;
- (UserInfoBuilder*) clearUserDomain;

- (BOOL) hasStatus;
- (UInt32) status;
- (UserInfoBuilder*) setStatus:(UInt32) value;
- (UserInfoBuilder*) clearStatus;

- (BOOL) hasSignInfo;
- (NSString*) signInfo;
- (UserInfoBuilder*) setSignInfo:(NSString*) value;
- (UserInfoBuilder*) clearSignInfo;
@end

#define ContactSessionInfo_session_id @"sessionId"
#define ContactSessionInfo_session_type @"sessionType"
#define ContactSessionInfo_session_status @"sessionStatus"
#define ContactSessionInfo_updated_time @"updatedTime"
#define ContactSessionInfo_latest_msg_id @"latestMsgId"
#define ContactSessionInfo_latest_msg_data @"latestMsgData"
#define ContactSessionInfo_latest_msg_type @"latestMsgType"
#define ContactSessionInfo_latest_msg_from_user_id @"latestMsgFromUserId"
@interface ContactSessionInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasLatestMsgData_:1;
  BOOL hasSessionId_:1;
  BOOL hasUpdatedTime_:1;
  BOOL hasLatestMsgId_:1;
  BOOL hasLatestMsgFromUserId_:1;
  BOOL hasSessionType_:1;
  BOOL hasSessionStatus_:1;
  BOOL hasLatestMsgType_:1;
  NSData* latestMsgData;
  UInt32 sessionId;
  UInt32 updatedTime;
  UInt32 latestMsgId;
  UInt32 latestMsgFromUserId;
  SessionType sessionType;
  SessionStatusType sessionStatus;
  MsgType latestMsgType;
}
- (BOOL) hasSessionId;
- (BOOL) hasSessionType;
- (BOOL) hasSessionStatus;
- (BOOL) hasUpdatedTime;
- (BOOL) hasLatestMsgId;
- (BOOL) hasLatestMsgData;
- (BOOL) hasLatestMsgType;
- (BOOL) hasLatestMsgFromUserId;
@property (readonly) UInt32 sessionId;
@property (readonly) SessionType sessionType;
@property (readonly) SessionStatusType sessionStatus;
@property (readonly) UInt32 updatedTime;
@property (readonly) UInt32 latestMsgId;
@property (readonly, strong) NSData* latestMsgData;
@property (readonly) MsgType latestMsgType;
@property (readonly) UInt32 latestMsgFromUserId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ContactSessionInfoBuilder*) builder;
+ (ContactSessionInfoBuilder*) builder;
+ (ContactSessionInfoBuilder*) builderWithPrototype:(ContactSessionInfo*) prototype;
- (ContactSessionInfoBuilder*) toBuilder;

+ (ContactSessionInfo*) parseFromData:(NSData*) data;
+ (ContactSessionInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContactSessionInfo*) parseFromInputStream:(NSInputStream*) input;
+ (ContactSessionInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ContactSessionInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ContactSessionInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ContactSessionInfoBuilder : PBGeneratedMessageBuilder {
@private
  ContactSessionInfo* resultContactSessionInfo;
}

- (ContactSessionInfo*) defaultInstance;

- (ContactSessionInfoBuilder*) clear;
- (ContactSessionInfoBuilder*) clone;

- (ContactSessionInfo*) build;
- (ContactSessionInfo*) buildPartial;

- (ContactSessionInfoBuilder*) mergeFrom:(ContactSessionInfo*) other;
- (ContactSessionInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ContactSessionInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSessionId;
- (UInt32) sessionId;
- (ContactSessionInfoBuilder*) setSessionId:(UInt32) value;
- (ContactSessionInfoBuilder*) clearSessionId;

- (BOOL) hasSessionType;
- (SessionType) sessionType;
- (ContactSessionInfoBuilder*) setSessionType:(SessionType) value;
- (ContactSessionInfoBuilder*) clearSessionType;

- (BOOL) hasSessionStatus;
- (SessionStatusType) sessionStatus;
- (ContactSessionInfoBuilder*) setSessionStatus:(SessionStatusType) value;
- (ContactSessionInfoBuilder*) clearSessionStatus;

- (BOOL) hasUpdatedTime;
- (UInt32) updatedTime;
- (ContactSessionInfoBuilder*) setUpdatedTime:(UInt32) value;
- (ContactSessionInfoBuilder*) clearUpdatedTime;

- (BOOL) hasLatestMsgId;
- (UInt32) latestMsgId;
- (ContactSessionInfoBuilder*) setLatestMsgId:(UInt32) value;
- (ContactSessionInfoBuilder*) clearLatestMsgId;

- (BOOL) hasLatestMsgData;
- (NSData*) latestMsgData;
- (ContactSessionInfoBuilder*) setLatestMsgData:(NSData*) value;
- (ContactSessionInfoBuilder*) clearLatestMsgData;

- (BOOL) hasLatestMsgType;
- (MsgType) latestMsgType;
- (ContactSessionInfoBuilder*) setLatestMsgType:(MsgType) value;
- (ContactSessionInfoBuilder*) clearLatestMsgType;

- (BOOL) hasLatestMsgFromUserId;
- (UInt32) latestMsgFromUserId;
- (ContactSessionInfoBuilder*) setLatestMsgFromUserId:(UInt32) value;
- (ContactSessionInfoBuilder*) clearLatestMsgFromUserId;
@end

#define UserStat_user_id @"userId"
#define UserStat_status @"status"
@interface UserStat : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasUserId_:1;
  BOOL hasStatus_:1;
  UInt32 userId;
  UserStatType status;
}
- (BOOL) hasUserId;
- (BOOL) hasStatus;
@property (readonly) UInt32 userId;
@property (readonly) UserStatType status;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserStatBuilder*) builder;
+ (UserStatBuilder*) builder;
+ (UserStatBuilder*) builderWithPrototype:(UserStat*) prototype;
- (UserStatBuilder*) toBuilder;

+ (UserStat*) parseFromData:(NSData*) data;
+ (UserStat*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserStat*) parseFromInputStream:(NSInputStream*) input;
+ (UserStat*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserStat*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserStat*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserStatBuilder : PBGeneratedMessageBuilder {
@private
  UserStat* resultUserStat;
}

- (UserStat*) defaultInstance;

- (UserStatBuilder*) clear;
- (UserStatBuilder*) clone;

- (UserStat*) build;
- (UserStat*) buildPartial;

- (UserStatBuilder*) mergeFrom:(UserStat*) other;
- (UserStatBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserStatBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (UInt32) userId;
- (UserStatBuilder*) setUserId:(UInt32) value;
- (UserStatBuilder*) clearUserId;

- (BOOL) hasStatus;
- (UserStatType) status;
- (UserStatBuilder*) setStatus:(UserStatType) value;
- (UserStatBuilder*) clearStatus;
@end

#define ServerUserStat_user_id @"userId"
#define ServerUserStat_status @"status"
#define ServerUserStat_client_type @"clientType"
@interface ServerUserStat : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasUserId_:1;
  BOOL hasStatus_:1;
  BOOL hasClientType_:1;
  UInt32 userId;
  UserStatType status;
  ClientType clientType;
}
- (BOOL) hasUserId;
- (BOOL) hasStatus;
- (BOOL) hasClientType;
@property (readonly) UInt32 userId;
@property (readonly) UserStatType status;
@property (readonly) ClientType clientType;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ServerUserStatBuilder*) builder;
+ (ServerUserStatBuilder*) builder;
+ (ServerUserStatBuilder*) builderWithPrototype:(ServerUserStat*) prototype;
- (ServerUserStatBuilder*) toBuilder;

+ (ServerUserStat*) parseFromData:(NSData*) data;
+ (ServerUserStat*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ServerUserStat*) parseFromInputStream:(NSInputStream*) input;
+ (ServerUserStat*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ServerUserStat*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ServerUserStat*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ServerUserStatBuilder : PBGeneratedMessageBuilder {
@private
  ServerUserStat* resultServerUserStat;
}

- (ServerUserStat*) defaultInstance;

- (ServerUserStatBuilder*) clear;
- (ServerUserStatBuilder*) clone;

- (ServerUserStat*) build;
- (ServerUserStat*) buildPartial;

- (ServerUserStatBuilder*) mergeFrom:(ServerUserStat*) other;
- (ServerUserStatBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ServerUserStatBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (UInt32) userId;
- (ServerUserStatBuilder*) setUserId:(UInt32) value;
- (ServerUserStatBuilder*) clearUserId;

- (BOOL) hasStatus;
- (UserStatType) status;
- (ServerUserStatBuilder*) setStatus:(UserStatType) value;
- (ServerUserStatBuilder*) clearStatus;

- (BOOL) hasClientType;
- (ClientType) clientType;
- (ServerUserStatBuilder*) setClientType:(ClientType) value;
- (ServerUserStatBuilder*) clearClientType;
@end

#define UnreadInfo_session_id @"sessionId"
#define UnreadInfo_session_type @"sessionType"
#define UnreadInfo_unread_cnt @"unreadCnt"
#define UnreadInfo_latest_msg_id @"latestMsgId"
#define UnreadInfo_latest_msg_data @"latestMsgData"
#define UnreadInfo_latest_msg_type @"latestMsgType"
#define UnreadInfo_latest_msg_from_user_id @"latestMsgFromUserId"
@interface UnreadInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasLatestMsgData_:1;
  BOOL hasSessionId_:1;
  BOOL hasUnreadCnt_:1;
  BOOL hasLatestMsgId_:1;
  BOOL hasLatestMsgFromUserId_:1;
  BOOL hasSessionType_:1;
  BOOL hasLatestMsgType_:1;
  NSData* latestMsgData;
  UInt32 sessionId;
  UInt32 unreadCnt;
  UInt32 latestMsgId;
  UInt32 latestMsgFromUserId;
  SessionType sessionType;
  MsgType latestMsgType;
}
- (BOOL) hasSessionId;
- (BOOL) hasSessionType;
- (BOOL) hasUnreadCnt;
- (BOOL) hasLatestMsgId;
- (BOOL) hasLatestMsgData;
- (BOOL) hasLatestMsgType;
- (BOOL) hasLatestMsgFromUserId;
@property (readonly) UInt32 sessionId;
@property (readonly) SessionType sessionType;
@property (readonly) UInt32 unreadCnt;
@property (readonly) UInt32 latestMsgId;
@property (readonly, strong) NSData* latestMsgData;
@property (readonly) MsgType latestMsgType;
@property (readonly) UInt32 latestMsgFromUserId;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UnreadInfoBuilder*) builder;
+ (UnreadInfoBuilder*) builder;
+ (UnreadInfoBuilder*) builderWithPrototype:(UnreadInfo*) prototype;
- (UnreadInfoBuilder*) toBuilder;

+ (UnreadInfo*) parseFromData:(NSData*) data;
+ (UnreadInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UnreadInfo*) parseFromInputStream:(NSInputStream*) input;
+ (UnreadInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UnreadInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UnreadInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UnreadInfoBuilder : PBGeneratedMessageBuilder {
@private
  UnreadInfo* resultUnreadInfo;
}

- (UnreadInfo*) defaultInstance;

- (UnreadInfoBuilder*) clear;
- (UnreadInfoBuilder*) clone;

- (UnreadInfo*) build;
- (UnreadInfo*) buildPartial;

- (UnreadInfoBuilder*) mergeFrom:(UnreadInfo*) other;
- (UnreadInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UnreadInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSessionId;
- (UInt32) sessionId;
- (UnreadInfoBuilder*) setSessionId:(UInt32) value;
- (UnreadInfoBuilder*) clearSessionId;

- (BOOL) hasSessionType;
- (SessionType) sessionType;
- (UnreadInfoBuilder*) setSessionType:(SessionType) value;
- (UnreadInfoBuilder*) clearSessionType;

- (BOOL) hasUnreadCnt;
- (UInt32) unreadCnt;
- (UnreadInfoBuilder*) setUnreadCnt:(UInt32) value;
- (UnreadInfoBuilder*) clearUnreadCnt;

- (BOOL) hasLatestMsgId;
- (UInt32) latestMsgId;
- (UnreadInfoBuilder*) setLatestMsgId:(UInt32) value;
- (UnreadInfoBuilder*) clearLatestMsgId;

- (BOOL) hasLatestMsgData;
- (NSData*) latestMsgData;
- (UnreadInfoBuilder*) setLatestMsgData:(NSData*) value;
- (UnreadInfoBuilder*) clearLatestMsgData;

- (BOOL) hasLatestMsgType;
- (MsgType) latestMsgType;
- (UnreadInfoBuilder*) setLatestMsgType:(MsgType) value;
- (UnreadInfoBuilder*) clearLatestMsgType;

- (BOOL) hasLatestMsgFromUserId;
- (UInt32) latestMsgFromUserId;
- (UnreadInfoBuilder*) setLatestMsgFromUserId:(UInt32) value;
- (UnreadInfoBuilder*) clearLatestMsgFromUserId;
@end

#define MsgInfo_msg_id @"msgId"
#define MsgInfo_from_session_id @"fromSessionId"
#define MsgInfo_create_time @"createTime"
#define MsgInfo_msg_type @"msgType"
#define MsgInfo_msg_data @"msgData"
@interface MsgInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasMsgData_:1;
  BOOL hasMsgId_:1;
  BOOL hasFromSessionId_:1;
  BOOL hasCreateTime_:1;
  BOOL hasMsgType_:1;
  NSData* msgData;
  UInt32 msgId;
  UInt32 fromSessionId;
  UInt32 createTime;
  MsgType msgType;
}
- (BOOL) hasMsgId;
- (BOOL) hasFromSessionId;
- (BOOL) hasCreateTime;
- (BOOL) hasMsgType;
- (BOOL) hasMsgData;
@property (readonly) UInt32 msgId;
@property (readonly) UInt32 fromSessionId;
@property (readonly) UInt32 createTime;
@property (readonly) MsgType msgType;
@property (readonly, strong) NSData* msgData;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (MsgInfoBuilder*) builder;
+ (MsgInfoBuilder*) builder;
+ (MsgInfoBuilder*) builderWithPrototype:(MsgInfo*) prototype;
- (MsgInfoBuilder*) toBuilder;

+ (MsgInfo*) parseFromData:(NSData*) data;
+ (MsgInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MsgInfo*) parseFromInputStream:(NSInputStream*) input;
+ (MsgInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (MsgInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (MsgInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface MsgInfoBuilder : PBGeneratedMessageBuilder {
@private
  MsgInfo* resultMsgInfo;
}

- (MsgInfo*) defaultInstance;

- (MsgInfoBuilder*) clear;
- (MsgInfoBuilder*) clone;

- (MsgInfo*) build;
- (MsgInfo*) buildPartial;

- (MsgInfoBuilder*) mergeFrom:(MsgInfo*) other;
- (MsgInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (MsgInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMsgId;
- (UInt32) msgId;
- (MsgInfoBuilder*) setMsgId:(UInt32) value;
- (MsgInfoBuilder*) clearMsgId;

- (BOOL) hasFromSessionId;
- (UInt32) fromSessionId;
- (MsgInfoBuilder*) setFromSessionId:(UInt32) value;
- (MsgInfoBuilder*) clearFromSessionId;

- (BOOL) hasCreateTime;
- (UInt32) createTime;
- (MsgInfoBuilder*) setCreateTime:(UInt32) value;
- (MsgInfoBuilder*) clearCreateTime;

- (BOOL) hasMsgType;
- (MsgType) msgType;
- (MsgInfoBuilder*) setMsgType:(MsgType) value;
- (MsgInfoBuilder*) clearMsgType;

- (BOOL) hasMsgData;
- (NSData*) msgData;
- (MsgInfoBuilder*) setMsgData:(NSData*) value;
- (MsgInfoBuilder*) clearMsgData;
@end

#define GroupVersionInfo_group_id @"groupId"
#define GroupVersionInfo_version @"version"
@interface GroupVersionInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasGroupId_:1;
  BOOL hasVersion_:1;
  UInt32 groupId;
  UInt32 version;
}
- (BOOL) hasGroupId;
- (BOOL) hasVersion;
@property (readonly) UInt32 groupId;
@property (readonly) UInt32 version;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GroupVersionInfoBuilder*) builder;
+ (GroupVersionInfoBuilder*) builder;
+ (GroupVersionInfoBuilder*) builderWithPrototype:(GroupVersionInfo*) prototype;
- (GroupVersionInfoBuilder*) toBuilder;

+ (GroupVersionInfo*) parseFromData:(NSData*) data;
+ (GroupVersionInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GroupVersionInfo*) parseFromInputStream:(NSInputStream*) input;
+ (GroupVersionInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GroupVersionInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GroupVersionInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GroupVersionInfoBuilder : PBGeneratedMessageBuilder {
@private
  GroupVersionInfo* resultGroupVersionInfo;
}

- (GroupVersionInfo*) defaultInstance;

- (GroupVersionInfoBuilder*) clear;
- (GroupVersionInfoBuilder*) clone;

- (GroupVersionInfo*) build;
- (GroupVersionInfo*) buildPartial;

- (GroupVersionInfoBuilder*) mergeFrom:(GroupVersionInfo*) other;
- (GroupVersionInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GroupVersionInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGroupId;
- (UInt32) groupId;
- (GroupVersionInfoBuilder*) setGroupId:(UInt32) value;
- (GroupVersionInfoBuilder*) clearGroupId;

- (BOOL) hasVersion;
- (UInt32) version;
- (GroupVersionInfoBuilder*) setVersion:(UInt32) value;
- (GroupVersionInfoBuilder*) clearVersion;
@end

#define GroupInfo_group_id @"groupId"
#define GroupInfo_version @"version"
#define GroupInfo_group_name @"groupName"
#define GroupInfo_group_avatar @"groupAvatar"
#define GroupInfo_group_creator_id @"groupCreatorId"
#define GroupInfo_group_type @"groupType"
#define GroupInfo_shield_status @"shieldStatus"
#define GroupInfo_group_member_list @"groupMemberList"
@interface GroupInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasGroupName_:1;
  BOOL hasGroupAvatar_:1;
  BOOL hasGroupId_:1;
  BOOL hasVersion_:1;
  BOOL hasGroupCreatorId_:1;
  BOOL hasShieldStatus_:1;
  BOOL hasGroupType_:1;
  NSString* groupName;
  NSString* groupAvatar;
  UInt32 groupId;
  UInt32 version;
  UInt32 groupCreatorId;
  UInt32 shieldStatus;
  GroupType groupType;
  PBAppendableArray * groupMemberListArray;
}
- (BOOL) hasGroupId;
- (BOOL) hasVersion;
- (BOOL) hasGroupName;
- (BOOL) hasGroupAvatar;
- (BOOL) hasGroupCreatorId;
- (BOOL) hasGroupType;
- (BOOL) hasShieldStatus;
@property (readonly) UInt32 groupId;
@property (readonly) UInt32 version;
@property (readonly, strong) NSString* groupName;
@property (readonly, strong) NSString* groupAvatar;
@property (readonly) UInt32 groupCreatorId;
@property (readonly) GroupType groupType;
@property (readonly) UInt32 shieldStatus;
@property (readonly, strong) PBArray * groupMemberList;
- (UInt32)groupMemberListAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (GroupInfoBuilder*) builder;
+ (GroupInfoBuilder*) builder;
+ (GroupInfoBuilder*) builderWithPrototype:(GroupInfo*) prototype;
- (GroupInfoBuilder*) toBuilder;

+ (GroupInfo*) parseFromData:(NSData*) data;
+ (GroupInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GroupInfo*) parseFromInputStream:(NSInputStream*) input;
+ (GroupInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (GroupInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (GroupInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface GroupInfoBuilder : PBGeneratedMessageBuilder {
@private
  GroupInfo* resultGroupInfo;
}

- (GroupInfo*) defaultInstance;

- (GroupInfoBuilder*) clear;
- (GroupInfoBuilder*) clone;

- (GroupInfo*) build;
- (GroupInfo*) buildPartial;

- (GroupInfoBuilder*) mergeFrom:(GroupInfo*) other;
- (GroupInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (GroupInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasGroupId;
- (UInt32) groupId;
- (GroupInfoBuilder*) setGroupId:(UInt32) value;
- (GroupInfoBuilder*) clearGroupId;

- (BOOL) hasVersion;
- (UInt32) version;
- (GroupInfoBuilder*) setVersion:(UInt32) value;
- (GroupInfoBuilder*) clearVersion;

- (BOOL) hasGroupName;
- (NSString*) groupName;
- (GroupInfoBuilder*) setGroupName:(NSString*) value;
- (GroupInfoBuilder*) clearGroupName;

- (BOOL) hasGroupAvatar;
- (NSString*) groupAvatar;
- (GroupInfoBuilder*) setGroupAvatar:(NSString*) value;
- (GroupInfoBuilder*) clearGroupAvatar;

- (BOOL) hasGroupCreatorId;
- (UInt32) groupCreatorId;
- (GroupInfoBuilder*) setGroupCreatorId:(UInt32) value;
- (GroupInfoBuilder*) clearGroupCreatorId;

- (BOOL) hasGroupType;
- (GroupType) groupType;
- (GroupInfoBuilder*) setGroupType:(GroupType) value;
- (GroupInfoBuilder*) clearGroupType;

- (BOOL) hasShieldStatus;
- (UInt32) shieldStatus;
- (GroupInfoBuilder*) setShieldStatus:(UInt32) value;
- (GroupInfoBuilder*) clearShieldStatus;

- (PBAppendableArray *)groupMemberList;
- (UInt32)groupMemberListAtIndex:(NSUInteger)index;
- (GroupInfoBuilder *)addGroupMemberList:(UInt32)value;
- (GroupInfoBuilder *)setGroupMemberListArray:(NSArray *)array;
- (GroupInfoBuilder *)setGroupMemberListValues:(const UInt32 *)values count:(NSUInteger)count;
- (GroupInfoBuilder *)clearGroupMemberList;
@end

#define UserTokenInfo_user_id @"userId"
#define UserTokenInfo_user_type @"userType"
#define UserTokenInfo_token @"token"
#define UserTokenInfo_push_count @"pushCount"
#define UserTokenInfo_push_type @"pushType"
@interface UserTokenInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasToken_:1;
  BOOL hasUserId_:1;
  BOOL hasPushCount_:1;
  BOOL hasPushType_:1;
  BOOL hasUserType_:1;
  NSString* token;
  UInt32 userId;
  UInt32 pushCount;
  UInt32 pushType;
  ClientType userType;
}
- (BOOL) hasUserId;
- (BOOL) hasUserType;
- (BOOL) hasToken;
- (BOOL) hasPushCount;
- (BOOL) hasPushType;
@property (readonly) UInt32 userId;
@property (readonly) ClientType userType;
@property (readonly, strong) NSString* token;
@property (readonly) UInt32 pushCount;
@property (readonly) UInt32 pushType;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (UserTokenInfoBuilder*) builder;
+ (UserTokenInfoBuilder*) builder;
+ (UserTokenInfoBuilder*) builderWithPrototype:(UserTokenInfo*) prototype;
- (UserTokenInfoBuilder*) toBuilder;

+ (UserTokenInfo*) parseFromData:(NSData*) data;
+ (UserTokenInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserTokenInfo*) parseFromInputStream:(NSInputStream*) input;
+ (UserTokenInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (UserTokenInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (UserTokenInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface UserTokenInfoBuilder : PBGeneratedMessageBuilder {
@private
  UserTokenInfo* resultUserTokenInfo;
}

- (UserTokenInfo*) defaultInstance;

- (UserTokenInfoBuilder*) clear;
- (UserTokenInfoBuilder*) clone;

- (UserTokenInfo*) build;
- (UserTokenInfo*) buildPartial;

- (UserTokenInfoBuilder*) mergeFrom:(UserTokenInfo*) other;
- (UserTokenInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (UserTokenInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (UInt32) userId;
- (UserTokenInfoBuilder*) setUserId:(UInt32) value;
- (UserTokenInfoBuilder*) clearUserId;

- (BOOL) hasUserType;
- (ClientType) userType;
- (UserTokenInfoBuilder*) setUserType:(ClientType) value;
- (UserTokenInfoBuilder*) clearUserType;

- (BOOL) hasToken;
- (NSString*) token;
- (UserTokenInfoBuilder*) setToken:(NSString*) value;
- (UserTokenInfoBuilder*) clearToken;

- (BOOL) hasPushCount;
- (UInt32) pushCount;
- (UserTokenInfoBuilder*) setPushCount:(UInt32) value;
- (UserTokenInfoBuilder*) clearPushCount;

- (BOOL) hasPushType;
- (UInt32) pushType;
- (UserTokenInfoBuilder*) setPushType:(UInt32) value;
- (UserTokenInfoBuilder*) clearPushType;
@end

#define PushResult_user_token @"userToken"
#define PushResult_result_code @"resultCode"
@interface PushResult : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasUserToken_:1;
  BOOL hasResultCode_:1;
  NSString* userToken;
  UInt32 resultCode;
}
- (BOOL) hasUserToken;
- (BOOL) hasResultCode;
@property (readonly, strong) NSString* userToken;
@property (readonly) UInt32 resultCode;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PushResultBuilder*) builder;
+ (PushResultBuilder*) builder;
+ (PushResultBuilder*) builderWithPrototype:(PushResult*) prototype;
- (PushResultBuilder*) toBuilder;

+ (PushResult*) parseFromData:(NSData*) data;
+ (PushResult*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PushResult*) parseFromInputStream:(NSInputStream*) input;
+ (PushResult*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PushResult*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PushResult*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PushResultBuilder : PBGeneratedMessageBuilder {
@private
  PushResult* resultPushResult;
}

- (PushResult*) defaultInstance;

- (PushResultBuilder*) clear;
- (PushResultBuilder*) clone;

- (PushResult*) build;
- (PushResult*) buildPartial;

- (PushResultBuilder*) mergeFrom:(PushResult*) other;
- (PushResultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PushResultBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserToken;
- (NSString*) userToken;
- (PushResultBuilder*) setUserToken:(NSString*) value;
- (PushResultBuilder*) clearUserToken;

- (BOOL) hasResultCode;
- (UInt32) resultCode;
- (PushResultBuilder*) setResultCode:(UInt32) value;
- (PushResultBuilder*) clearResultCode;
@end

#define ShieldStatus_user_id @"userId"
#define ShieldStatus_group_id @"groupId"
#define ShieldStatus_shield_status @"shieldStatus"
@interface ShieldStatus : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasUserId_:1;
  BOOL hasGroupId_:1;
  BOOL hasShieldStatus_:1;
  UInt32 userId;
  UInt32 groupId;
  UInt32 shieldStatus;
}
- (BOOL) hasUserId;
- (BOOL) hasGroupId;
- (BOOL) hasShieldStatus;
@property (readonly) UInt32 userId;
@property (readonly) UInt32 groupId;
@property (readonly) UInt32 shieldStatus;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ShieldStatusBuilder*) builder;
+ (ShieldStatusBuilder*) builder;
+ (ShieldStatusBuilder*) builderWithPrototype:(ShieldStatus*) prototype;
- (ShieldStatusBuilder*) toBuilder;

+ (ShieldStatus*) parseFromData:(NSData*) data;
+ (ShieldStatus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ShieldStatus*) parseFromInputStream:(NSInputStream*) input;
+ (ShieldStatus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ShieldStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ShieldStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ShieldStatusBuilder : PBGeneratedMessageBuilder {
@private
  ShieldStatus* resultShieldStatus;
}

- (ShieldStatus*) defaultInstance;

- (ShieldStatusBuilder*) clear;
- (ShieldStatusBuilder*) clone;

- (ShieldStatus*) build;
- (ShieldStatus*) buildPartial;

- (ShieldStatusBuilder*) mergeFrom:(ShieldStatus*) other;
- (ShieldStatusBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ShieldStatusBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (UInt32) userId;
- (ShieldStatusBuilder*) setUserId:(UInt32) value;
- (ShieldStatusBuilder*) clearUserId;

- (BOOL) hasGroupId;
- (UInt32) groupId;
- (ShieldStatusBuilder*) setGroupId:(UInt32) value;
- (ShieldStatusBuilder*) clearGroupId;

- (BOOL) hasShieldStatus;
- (UInt32) shieldStatus;
- (ShieldStatusBuilder*) setShieldStatus:(UInt32) value;
- (ShieldStatusBuilder*) clearShieldStatus;
@end

#define OfflineFileInfo_from_user_id @"fromUserId"
#define OfflineFileInfo_task_id @"taskId"
#define OfflineFileInfo_file_name @"fileName"
#define OfflineFileInfo_file_size @"fileSize"
@interface OfflineFileInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasTaskId_:1;
  BOOL hasFileName_:1;
  BOOL hasFromUserId_:1;
  BOOL hasFileSize_:1;
  NSString* taskId;
  NSString* fileName;
  UInt32 fromUserId;
  UInt32 fileSize;
}
- (BOOL) hasFromUserId;
- (BOOL) hasTaskId;
- (BOOL) hasFileName;
- (BOOL) hasFileSize;
@property (readonly) UInt32 fromUserId;
@property (readonly, strong) NSString* taskId;
@property (readonly, strong) NSString* fileName;
@property (readonly) UInt32 fileSize;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (OfflineFileInfoBuilder*) builder;
+ (OfflineFileInfoBuilder*) builder;
+ (OfflineFileInfoBuilder*) builderWithPrototype:(OfflineFileInfo*) prototype;
- (OfflineFileInfoBuilder*) toBuilder;

+ (OfflineFileInfo*) parseFromData:(NSData*) data;
+ (OfflineFileInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OfflineFileInfo*) parseFromInputStream:(NSInputStream*) input;
+ (OfflineFileInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (OfflineFileInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (OfflineFileInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface OfflineFileInfoBuilder : PBGeneratedMessageBuilder {
@private
  OfflineFileInfo* resultOfflineFileInfo;
}

- (OfflineFileInfo*) defaultInstance;

- (OfflineFileInfoBuilder*) clear;
- (OfflineFileInfoBuilder*) clone;

- (OfflineFileInfo*) build;
- (OfflineFileInfo*) buildPartial;

- (OfflineFileInfoBuilder*) mergeFrom:(OfflineFileInfo*) other;
- (OfflineFileInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (OfflineFileInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFromUserId;
- (UInt32) fromUserId;
- (OfflineFileInfoBuilder*) setFromUserId:(UInt32) value;
- (OfflineFileInfoBuilder*) clearFromUserId;

- (BOOL) hasTaskId;
- (NSString*) taskId;
- (OfflineFileInfoBuilder*) setTaskId:(NSString*) value;
- (OfflineFileInfoBuilder*) clearTaskId;

- (BOOL) hasFileName;
- (NSString*) fileName;
- (OfflineFileInfoBuilder*) setFileName:(NSString*) value;
- (OfflineFileInfoBuilder*) clearFileName;

- (BOOL) hasFileSize;
- (UInt32) fileSize;
- (OfflineFileInfoBuilder*) setFileSize:(UInt32) value;
- (OfflineFileInfoBuilder*) clearFileSize;
@end

#define DepartInfo_dept_id @"deptId"
#define DepartInfo_priority @"priority"
#define DepartInfo_dept_name @"deptName"
#define DepartInfo_parent_dept_id @"parentDeptId"
#define DepartInfo_dept_status @"deptStatus"
@interface DepartInfo : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasDeptName_:1;
  BOOL hasDeptId_:1;
  BOOL hasPriority_:1;
  BOOL hasParentDeptId_:1;
  BOOL hasDeptStatus_:1;
  NSString* deptName;
  UInt32 deptId;
  UInt32 priority;
  UInt32 parentDeptId;
  DepartmentStatusType deptStatus;
}
- (BOOL) hasDeptId;
- (BOOL) hasPriority;
- (BOOL) hasDeptName;
- (BOOL) hasParentDeptId;
- (BOOL) hasDeptStatus;
@property (readonly) UInt32 deptId;
@property (readonly) UInt32 priority;
@property (readonly, strong) NSString* deptName;
@property (readonly) UInt32 parentDeptId;
@property (readonly) DepartmentStatusType deptStatus;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (DepartInfoBuilder*) builder;
+ (DepartInfoBuilder*) builder;
+ (DepartInfoBuilder*) builderWithPrototype:(DepartInfo*) prototype;
- (DepartInfoBuilder*) toBuilder;

+ (DepartInfo*) parseFromData:(NSData*) data;
+ (DepartInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DepartInfo*) parseFromInputStream:(NSInputStream*) input;
+ (DepartInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (DepartInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (DepartInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface DepartInfoBuilder : PBGeneratedMessageBuilder {
@private
  DepartInfo* resultDepartInfo;
}

- (DepartInfo*) defaultInstance;

- (DepartInfoBuilder*) clear;
- (DepartInfoBuilder*) clone;

- (DepartInfo*) build;
- (DepartInfo*) buildPartial;

- (DepartInfoBuilder*) mergeFrom:(DepartInfo*) other;
- (DepartInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (DepartInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasDeptId;
- (UInt32) deptId;
- (DepartInfoBuilder*) setDeptId:(UInt32) value;
- (DepartInfoBuilder*) clearDeptId;

- (BOOL) hasPriority;
- (UInt32) priority;
- (DepartInfoBuilder*) setPriority:(UInt32) value;
- (DepartInfoBuilder*) clearPriority;

- (BOOL) hasDeptName;
- (NSString*) deptName;
- (DepartInfoBuilder*) setDeptName:(NSString*) value;
- (DepartInfoBuilder*) clearDeptName;

- (BOOL) hasParentDeptId;
- (UInt32) parentDeptId;
- (DepartInfoBuilder*) setParentDeptId:(UInt32) value;
- (DepartInfoBuilder*) clearParentDeptId;

- (BOOL) hasDeptStatus;
- (DepartmentStatusType) deptStatus;
- (DepartInfoBuilder*) setDeptStatus:(DepartmentStatusType) value;
- (DepartInfoBuilder*) clearDeptStatus;
@end

#define PushShieldStatus_user_id @"userId"
#define PushShieldStatus_shield_status @"shieldStatus"
@interface PushShieldStatus : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasUserId_:1;
  BOOL hasShieldStatus_:1;
  UInt32 userId;
  UInt32 shieldStatus;
}
- (BOOL) hasUserId;
- (BOOL) hasShieldStatus;
@property (readonly) UInt32 userId;
@property (readonly) UInt32 shieldStatus;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (PushShieldStatusBuilder*) builder;
+ (PushShieldStatusBuilder*) builder;
+ (PushShieldStatusBuilder*) builderWithPrototype:(PushShieldStatus*) prototype;
- (PushShieldStatusBuilder*) toBuilder;

+ (PushShieldStatus*) parseFromData:(NSData*) data;
+ (PushShieldStatus*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PushShieldStatus*) parseFromInputStream:(NSInputStream*) input;
+ (PushShieldStatus*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (PushShieldStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (PushShieldStatus*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface PushShieldStatusBuilder : PBGeneratedMessageBuilder {
@private
  PushShieldStatus* resultPushShieldStatus;
}

- (PushShieldStatus*) defaultInstance;

- (PushShieldStatusBuilder*) clear;
- (PushShieldStatusBuilder*) clone;

- (PushShieldStatus*) build;
- (PushShieldStatus*) buildPartial;

- (PushShieldStatusBuilder*) mergeFrom:(PushShieldStatus*) other;
- (PushShieldStatusBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (PushShieldStatusBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserId;
- (UInt32) userId;
- (PushShieldStatusBuilder*) setUserId:(UInt32) value;
- (PushShieldStatusBuilder*) clearUserId;

- (BOOL) hasShieldStatus;
- (UInt32) shieldStatus;
- (PushShieldStatusBuilder*) setShieldStatus:(UInt32) value;
- (PushShieldStatusBuilder*) clearShieldStatus;
@end

#define ClientRegReq_serverid @"serverid"
#define ClientRegReq_serverip @"serverip"
#define ClientRegReq_serverport @"serverport"
@interface ClientRegReq : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasServerip_:1;
  BOOL hasServerport_:1;
  BOOL hasServerid_:1;
  NSString* serverip;
  UInt32 serverport;
  ServerID serverid;
}
- (BOOL) hasServerid;
- (BOOL) hasServerip;
- (BOOL) hasServerport;
@property (readonly) ServerID serverid;
@property (readonly, strong) NSString* serverip;
@property (readonly) UInt32 serverport;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ClientRegReqBuilder*) builder;
+ (ClientRegReqBuilder*) builder;
+ (ClientRegReqBuilder*) builderWithPrototype:(ClientRegReq*) prototype;
- (ClientRegReqBuilder*) toBuilder;

+ (ClientRegReq*) parseFromData:(NSData*) data;
+ (ClientRegReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ClientRegReq*) parseFromInputStream:(NSInputStream*) input;
+ (ClientRegReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ClientRegReq*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ClientRegReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ClientRegReqBuilder : PBGeneratedMessageBuilder {
@private
  ClientRegReq* resultClientRegReq;
}

- (ClientRegReq*) defaultInstance;

- (ClientRegReqBuilder*) clear;
- (ClientRegReqBuilder*) clone;

- (ClientRegReq*) build;
- (ClientRegReq*) buildPartial;

- (ClientRegReqBuilder*) mergeFrom:(ClientRegReq*) other;
- (ClientRegReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ClientRegReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasServerid;
- (ServerID) serverid;
- (ClientRegReqBuilder*) setServerid:(ServerID) value;
- (ClientRegReqBuilder*) clearServerid;

- (BOOL) hasServerip;
- (NSString*) serverip;
- (ClientRegReqBuilder*) setServerip:(NSString*) value;
- (ClientRegReqBuilder*) clearServerip;

- (BOOL) hasServerport;
- (UInt32) serverport;
- (ClientRegReqBuilder*) setServerport:(UInt32) value;
- (ClientRegReqBuilder*) clearServerport;
@end

#define ClientRegRsp_errinfo @"errinfo"
@interface ClientRegRsp : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasErrinfo_:1;
  ErrorInfo* errinfo;
}
- (BOOL) hasErrinfo;
@property (readonly, strong) ErrorInfo* errinfo;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (ClientRegRspBuilder*) builder;
+ (ClientRegRspBuilder*) builder;
+ (ClientRegRspBuilder*) builderWithPrototype:(ClientRegRsp*) prototype;
- (ClientRegRspBuilder*) toBuilder;

+ (ClientRegRsp*) parseFromData:(NSData*) data;
+ (ClientRegRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ClientRegRsp*) parseFromInputStream:(NSInputStream*) input;
+ (ClientRegRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (ClientRegRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (ClientRegRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface ClientRegRspBuilder : PBGeneratedMessageBuilder {
@private
  ClientRegRsp* resultClientRegRsp;
}

- (ClientRegRsp*) defaultInstance;

- (ClientRegRspBuilder*) clear;
- (ClientRegRspBuilder*) clone;

- (ClientRegRsp*) build;
- (ClientRegRsp*) buildPartial;

- (ClientRegRspBuilder*) mergeFrom:(ClientRegRsp*) other;
- (ClientRegRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (ClientRegRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasErrinfo;
- (ErrorInfo*) errinfo;
- (ClientRegRspBuilder*) setErrinfo:(ErrorInfo*) value;
- (ClientRegRspBuilder*) setErrinfoBuilder:(ErrorInfoBuilder*) builderForValue;
- (ClientRegRspBuilder*) mergeErrinfo:(ErrorInfo*) value;
- (ClientRegRspBuilder*) clearErrinfo;
@end


// @@protoc_insertion_point(global_scope)
