package im;

//数据包头
//PH {
//	"tag" : 18520 ,
//	"version" : 3 ,
//	"transact_id" : { 4112, 1467709307, 5507 }
//	"ec_type" : 1 ,
//  "cmd" : 4092
//	"size" : 100
//}

//const unsigned char HX_TAG_0 = 'H';				// 包头标识0默认值
//const unsigned char HX_TAG_1 = 'X';				// 包头标识1默认值
//const unsigned char CUR_PROTO_VER = 4;			// 当前协议版本号
//
//const unsigned char HEADER_VERSION_OFFSET		= 2;	// 协议版本偏移
//const unsigned char HEADER_TRANSACT_OFFSET	= 3;	// 事务ID偏移
//const unsigned char HEADER_CRETIME_OFFSET		= 3;	// 事务ID：创建时间偏移
//const unsigned char HEADER_SRCIP_OFFSET		= 7;	// 事务ID：来源IP偏移
//const unsigned char HEADER_SRCPORT_OFFSET		= 11;	// 事务ID：来源端口偏移
//const unsigned char HEADER_SEQ_OFFSET			= 13;	// 事务ID：自增序偏移
//const unsigned char HEADER_ECTYPE_OFFSET		= 17;	// 加密与压缩类型偏移
//const unsigned char HEADER_CMD_OFFSET			= 21;	// 事务命令字偏移
//const unsigned char HEADER_SIZE_OFFSET		= 25;	// 包长度偏移
//
//const unsigned char HEADER_LEN				= 27;	// 协议包头长度


enum ResultCode
{
	NO_ERROR                         = 0;    // 成功
	
	ERROR_CONNECT_DATABASE           = 1;    // 连接数据库错误
	ERROR_QUERY_DATABASE             = 2;    // 查询数据库错误
	ERROR_INSERT_DATABASE            = 3;    // 保存数据错误
	ERROR_UPDATE_DATABASE            = 4;    // 更新数据错误
	ERROR_DELETE_DATABASE            = 5;    // 删除数据错误 
	
	ERROR_INVALID_DATA            	 = 6;    // 数据异常,一般指PB解包失败了 

	ERROR_LOGIN_FORBIDDEN						 = 101; // 用户登录参数错误，禁止登录	
	ERROR_LOGIN_AUTH								 = 102;  // 用户鉴权错误（失败）
	ERROR_RELOGIN										 = 103;	 // 重登录错误
	ERROR_LOGOUT										 = 110;  // 用户登出错误码
	
	ERROR_ILLEGAL_CONTENT            = 201;  //非法内容，存在敏感词
	ERROR_COUNT_TOO_MUCH             = 202;  //客户端请求的离线条数太大

	
	ERROR_FRIEND_ALREADY_EXIST       = 301;  // 好友已经存在
	ERROR_FRIEND_CANNOT_ADD_YOURSELF = 302;  // 不可以自己加自己为好友
	ERROR_FRIEND_RQU_TOOMUCH         = 303;  // 超过请求添加好友次数
	ERROR_FRIEND_STRANGER            = 304;  // 陌生人,非好友关系
	ERROR_FRIEND_I_TOOMUCH_FRIENDS   = 305;  // 您的好友数量已达上限
	ERROR_FRIEND_U_TOOMUCH_FRIENDS 	 = 306;  // 对方好友数量已达上限
	ERROR_FRIEND_TEAM_TOOMUCH 		 = 307;  // 好友分组已达上限
	ERROR_FRIEND_TEAM_ALREADY_EXSIT  = 308;  // 好友分组已存在
	ERROR_FRIEND_I_NULL 		 	 = 309;  // 协议结构体错误，己方(userid)为空
	ERROR_FRIEND_U_NULL              = 310;  // 协议结构体错误，好友(friendid)为空
	ERROR_FRIEND_YOURSELF 		 	 = 311;  // 协议结构体错误，己方不是持卡人或非持卡人
	ERROR_FRIEND_FRIEND              = 312;  // 协议结构体错误，好友不是持卡人或非持卡人
	ERROR_MSG_FROMID                 = 313;  // 发送方ID错误或为空
  ERROR_MSG_TOID                   = 314;  // 接收方ID错误或为空
  ERROR_MSG_USERID                 = 315;  // 回复消息ID错误或为空

	ERROR_P2C_KEFU_OFFLINE           = 401;  // 创建会话错误，企业客服都不在线，可以留言(包括sessionid)
	ERROR_P2C_UNCLOSED               = 402;  // 创建会话错误，还有未结束的会话 
	ERROR_P2C_SESSION_NOT_EXIST      = 403;  // 关闭会话错误，没有未结束的会话 
	ERROR_P2C_SWITCH_NOT_NEWKEFU     = 404;  // 转移会话错误，新客服不在线 
  ERROR_P2C_INVALID_ENTID          = 405;  // 无效的企业ID
  ERROR_P2C_WITHOUT_KEFU_PERMISSION = 406; // 无客服权限
  ERROR_P2C_INVALID_SESSION        = 407;  // 无效的客服会话，老客服在转移会话时没有建立会话 or 会话已经结束

	
	ERROR_BPN_DEVICEVERSION_ERROR    = 601 ;// bpn推送给apns的消息内容中deviceVersion取值错误(值为空或者长度不对)
	ERROR_BPN_TOKEN_ERROR            = 602 ;// bpn推送给apns的消息内容中token取值错误(值为空或者长度不对)
	ERROR_BPN_MSGID_ERROR            = 603 ;// bpn推送给apns的消息内容中msgid错误(值为空或者长度不对)
	ERROR_BPN_TOID_ERROR             = 604 ;// bpn推送给apns的消息内容中toid错误(值为空或者长度不对)
	ERROR_MSG_DEVICEVERSION_ERROR    = 605 ;// msg推送给apns的消息内容中deviceVersion取值错误(值为空或者长度不对)
	ERROR_MSG_TOKEN_ERROR            = 606 ;// msg推送给apns的消息内容中token错误(值为空或者长度不对)
	ERROR_MSG_MSGID_ERROR            = 607 ;// msg推送给apns的消息内容中msgid错误(值为空或者长度不对)
	ERROR_MSG_TOID_ERROT             = 608 ;// msg推送给apns的消息内容中toid错误(值为空或者长度不对)
}

//command id for message
enum CommandID
{
	// 服务器内部命令
	SRV_AUTH							= 0x0001;			// 服务器内部认证

	// 系统维护
	SYS_HEARTBEAT						= 0x1001;			// 心跳
	SYS_HEARTBEAT_ACK					= 0x1002;			// 心跳回执
	SYS_CLIENT_TIMEOUT					= 0x1003;			// 客户端超时

	//用户登录
	CM_CUST_LOGIN							  = 0x2001;		 //客户端登入鉴权
	CM_CUST_LOGIN_ACK						= 0x2002;    //服务端回应客户端登入鉴权
	CM_CUST_LOGOUT							= 0x2003;    //客户端登出
	CM_CUST_LOGOUT_ACK					= 0x2004;    //服务端回应客户端登出 
	CM_CUST_KICKOUT						  = 0x2006;    //服务端向客户端发出强制踢出通知，
																					 //用于控制多端登录。此为单向协议，
																					 //为保持协议匹配一致性，0x2005码弃用。
																					 
	
  //IM实时消息
	MSG_SESSION_MESSAGE				     = 0x3001;	    // 客户端发送消息或者服务器转发消息
	MSG_SESSION_MESSAGE_RSP		     = 0x3002;			// 响应客户端发送消息的结果 
	MSG_SESSION_MESSAGE_ACK		     = 0x3003;		  // 客户端告知服务器消息已收到
	MSG_SESSION_MESSAGE_ACK_RSP	   = 0x3004;		  // 服务器响应客户端消息已收到
	MSG_SESSION_MESSAGE_READED	   = 0x3005;			// 客户端告知服务器消息已读
	MSG_SESSION_MESSAGE_READED_RSP = 0x3006;			// 服务器响应客户端消息已读
	MSG_SESSION_MESSAGE_FORWARD    = 0x3008;	    // 服务器转发消息给客户端
	
			
	//离线消息汇总
	HISTORY_MESSAGE_SUMMARY  = 0x3009;	      // 客户端获取离线消息汇总 
	HISTORY_MESSAGE_SUMMARY_RSP = 0x3010;	    // 响应获取离线消息总体概要 
	
	//IM离线消息
	MSG_HISTORY_MESSAGE_LIST		 = 0x3011;	  // 客户端获取IM离线消息实体数据列表 		
  MSG_HISTORY_MESSAGE_LIST_RSP = 0x3012;	  // 响应IM离线消息列表  		
	MSG_HISTORY_MESSAGE_LIST_ACK = 0x3013;	  // 范围批量告知服务器已全部收到
	MSG_HISTORY_MESSAGE_LIST_ACK_RSP = 0x3014;	  // 服务器响应批量ACK
	MSG_HISTORY_MESSAGE_LIST_READED	= 0x3015;     // 某类型终端批量告知服务器已全部已读	
	MSG_HISTORY_MESSAGE_LIST_READED_RSP	= 0x3016; // 服务器响应批量已读
	
	
	//互生系统平台离线消息
	HS_PLATFORM_HISTORY_MESSAGE_LIST		 = 0x3017;	    // 客户端获取互生系统平台离线消息实体数据列表 		
	HS_PLATFORM_HISTORY_MESSAGE_LIST_RSP = 0x3018;	    // 服务端返回互生系统平台离线消息实体数据列表 
	HS_PLATFORM_HISTORY_MESSAGE_LIST_ACK = 0x3019;	    // 范围批量告知服务器已全部收到
	HS_PLATFORM_HISTORY_MESSAGE_LIST_ACK_RSP = 0x3020;	    // 服务器响应批量ACK
	HS_PLATFORM_HISTORY_MESSAGE_LIST_READED	= 0x3021;		    // 范围批量告知服务器已全部已读
	HS_PLATFORM_HISTORY_MESSAGE_LIST_READED_RSP	= 0x3022;		// 服务器响应批量已读

	//好友操作相关的离线消息
	FRIEND_HISTORY_MESSAGE_LIST		 = 0x3023;	        // 客户端获取好友操作相关离线消息实体数据列表 		
	FRIEND_HISTORY_MESSAGE_LIST_RSP = 0x3024;	        // 服务端返回好友操作相关离线消息实体数据列表
	FRIEND_HISTORY_MESSAGE_LIST_ACK = 0x3025;	        // 范围批量告知服务器已全部收到
	FRIEND_HISTORY_MESSAGE_LIST_ACK_RSP = 0x3026;	    // 服务器响应批量ACK
	FRIEND_HISTORY_MESSAGE_LIST_READED = 0x3027;      // 范围批量告知服务器已全部已读
  FRIEND_HISTORY_MESSAGE_LIST_READED_RSP = 0x3028;  //  服务器响应批量已读
  
  //客服离线消息
  P2C_HISTORY_MESSAGE_LIST		 = 0x3029;	      // 客户端获取客服离线消息实体数据列表 		
	P2C_HISTORY_MESSAGE_LIST_RSP = 0x3030;	      // 服务端返回客服离线消息
	P2C_HISTORY_MESSAGE_LIST_ACK = 0x3031;	      // 范围批量告知服务器已全部收到
	P2C_HISTORY_MESSAGE_LIST_ACK_RSP = 0x3032;	  // 服务器响应批量ACK
	P2C_HISTORY_MESSAGE_LIST_READED	= 0x3033;     // 某类型终端批量告知服务器已全部已读	
	P2C_HISTORY_MESSAGE_LIST_READED_RSP	= 0x3034; // 服务器响应批量已读
	P2C_ASSIGN_LEAVE_MESSAGE		   = 0x3035;	    // 客服请求分配所有企业留言,即:先变更企业留言为私人离线消息，后汇总离线拉取言	
	P2C_ASSIGN_LEAVE_MESSAGE_RSP   = 0x3036;	    // 服务器响应客服请求分配所有企业留言
	

	
	//好友
	MSG_ADD_FRIEND_REQ			    = 0x4001;	// 申请添加好友
	MSG_ADD_FRIEND_RSP				= 0x4002;	  // 服务器返回申请添加好友是否成功 				
		
	MSG_VERIFY_FRIEND_REQ			= 0x4003;	// 好友申请验证
	MSG_VERIFY_FRIEND_RSP		    = 0x4004;	// 服务器返回好友申请验证是否成功		
		
	MSG_DEL_FRIEND_REQ			    = 0x4005;	// 删除好友
	MSG_DEL_FRIEND_RSP			    = 0x4006;	// 服务器返回删除好友是否成功
		
	MSG_MODIFY_FRIEND_REQ			= 0x4007;	// 修改好友备注信息
	MSG_MODIFY_FRIEND_RSP			= 0x4008;	// 服务器返回修改好友备注信息是否成功    

	MSG_SHIELD_FRIEND_REQ			= 0x4009;	// 屏蔽好友信息
	MSG_SHIELD_FRIEND_RSP			= 0x4010;	// 服务器返回屏蔽好友信息是否成功     

	//bpn推送消息
  BPN_MESSAGE_PUSH          = 0x5001;	// 服务器推送消息给客户端
  BPN_MESSAGE_PUSH_RSP      = 0x5002; // 客户端响应服务器推送消息  
  BPN_MESSAGE_AUTH_CM       = 0x5003;	// cm服务器主动连接bpn，签权IP
  BPN_MESSAGE_AUTH_CM_RSP   = 0x5004;	// 响应服务器签权IP
  BPN_MESSAGE_AUTH          = 0x5005;	// web服务器主动连接bpn，签权IP
  BPN_MESSAGE_AUTH_RSP      = 0x5006;	// 响应服务器签权IP
	
	//客服消息
	P2C_CREATE_REQ              = 0x6001;	// 消费者请求建立会话
	P2C_CREATE_RSP              = 0x6002;	// 服务器响应消费者请求建立会话结果     

	P2C_CLOSE_REQ               = 0x6003;	// 请求结束会话
	P2C_CLOSE_RSP               = 0x6004;	// 服务器响应请求结束会话结果     
	P2C_CLOSE_FORWARD           = 0x6006;	// 服务器将结束会话结果转发被结束方 

	P2C_MESSAGE                 = 0x6007;	// 客户端发送在线咨询消息
	P2C_MESSAGE_RSP             = 0x6008;	// 服务器响应客户端发送在线咨询消息    
	P2C_MESSAGE_FORWARD         = 0x6010;	// 服务器将在线咨询消息转发接收方    
  P2C_MESSAGE_ACK_REQ         = 0x6011;	// 客户端发送在线咨询消息ack    
  P2C_MESSAGE_ACK_RSP         = 0x6012;	// 服务器响应ack结果    
  P2C_MESSAGE_READED_REQ      = 0x6013;	// 客户端发送在线咨询消息已读   
  P2C_MESSAGE_READED_RSP      = 0x6014;	// 服务器响应已读结果  
	
  P2C_SWITCH_REQ              = 0x6015;	// 老客服申请转移咨询   
  P2C_SWITCH_RSP              = 0x6016;	// 服务器响应老客服申请转移咨询结果   
  P2C_SWITCH_FORWARD          = 0x6018;	// 服务器转发申请给新客服   
  P2C_SWITCH_FORWARD_RSP      = 0x6019;	// 新客服回复转移申请 
  P2C_NOTIFY_SWITCH_C         = 0x6020;	// 服务器主动通知消费者咨询会话变更了   
  P2C_NOTIFY_SWITCH_RSP       = 0x6021;	// 消费者回复咨询会话变更
  P2C_NOTIFY_SWITCH_P         = 0x6022;	// 服务器主动通知老客服咨询会话变更了   

	P2C_LEAVE_MSG_REQ        	  = 0x6023;	// 消费者给企业发送留言消息
	P2C_LEAVE_MSG_RSP    		    = 0x6024;	// 服务器响应客户端发送留言消息  
	
	 
		
  //apns
  APNS_BPN_PUSH_REQ           = 0xC001; //bpn推送
  APNS_BPN_PUSH_RSP           = 0xc002;	//bpn推送响应
  APNS_MSG_PUSH_REQ           = 0xc003; //msg推送
  APNS_MSG_PUSH_RSP           = 0xc004;	//msg推送响应
}


//登录设备类型
enum PlatformDevice
{
  UNKOWN_DEVICE = 0;    // 无法识别的设备终端
	WEB           = 1;    // WEB网页 端
	PHONE         = 2;    // 手机端,包含安卓和平果手机
	IPAD          = 3;    // 通用平板端,不区分系统
	HSPAD         = 4;    // 互生定制平板端,不区分系统 
	PC            = 5;    // PC电脑端
}