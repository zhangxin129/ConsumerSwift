// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ImHxbpn.pb.h"
// @@protoc_insertion_point(imports)

@implementation ImHxbpnRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ImHxbpnRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ImHxcommonRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface pushMsgReq ()
@property (strong) NSString* msgid;
@property (strong) NSString* fromid;
@property (strong) NSString* toid;
@property (strong) NSString* content;
@property (strong) NSString* msgtype;
@end

@implementation pushMsgReq

- (BOOL) hasMsgid {
  return !!hasMsgid_;
}
- (void) setHasMsgid:(BOOL) _value_ {
  hasMsgid_ = !!_value_;
}
@synthesize msgid;
- (BOOL) hasFromid {
  return !!hasFromid_;
}
- (void) setHasFromid:(BOOL) _value_ {
  hasFromid_ = !!_value_;
}
@synthesize fromid;
- (BOOL) hasToid {
  return !!hasToid_;
}
- (void) setHasToid:(BOOL) _value_ {
  hasToid_ = !!_value_;
}
@synthesize toid;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasMsgtype {
  return !!hasMsgtype_;
}
- (void) setHasMsgtype:(BOOL) _value_ {
  hasMsgtype_ = !!_value_;
}
@synthesize msgtype;
- (instancetype) init {
  if ((self = [super init])) {
    self.msgid = @"";
    self.fromid = @"";
    self.toid = @"";
    self.content = @"";
    self.msgtype = @"";
  }
  return self;
}
static pushMsgReq* defaultpushMsgReqInstance = nil;
+ (void) initialize {
  if (self == [pushMsgReq class]) {
    defaultpushMsgReqInstance = [[pushMsgReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultpushMsgReqInstance;
}
- (instancetype) defaultInstance {
  return defaultpushMsgReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMsgid) {
    return NO;
  }
  if (!self.hasFromid) {
    return NO;
  }
  if (!self.hasToid) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasMsgtype) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMsgid) {
    [output writeString:1 value:self.msgid];
  }
  if (self.hasFromid) {
    [output writeString:2 value:self.fromid];
  }
  if (self.hasToid) {
    [output writeString:3 value:self.toid];
  }
  if (self.hasContent) {
    [output writeString:4 value:self.content];
  }
  if (self.hasMsgtype) {
    [output writeString:5 value:self.msgtype];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMsgid) {
    size_ += computeStringSize(1, self.msgid);
  }
  if (self.hasFromid) {
    size_ += computeStringSize(2, self.fromid);
  }
  if (self.hasToid) {
    size_ += computeStringSize(3, self.toid);
  }
  if (self.hasContent) {
    size_ += computeStringSize(4, self.content);
  }
  if (self.hasMsgtype) {
    size_ += computeStringSize(5, self.msgtype);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (pushMsgReq*) parseFromData:(NSData*) data {
  return (pushMsgReq*)[[[pushMsgReq builder] mergeFromData:data] build];
}
+ (pushMsgReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (pushMsgReq*)[[[pushMsgReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (pushMsgReq*) parseFromInputStream:(NSInputStream*) input {
  return (pushMsgReq*)[[[pushMsgReq builder] mergeFromInputStream:input] build];
}
+ (pushMsgReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (pushMsgReq*)[[[pushMsgReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (pushMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (pushMsgReq*)[[[pushMsgReq builder] mergeFromCodedInputStream:input] build];
}
+ (pushMsgReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (pushMsgReq*)[[[pushMsgReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (pushMsgReqBuilder*) builder {
  return [[pushMsgReqBuilder alloc] init];
}
+ (pushMsgReqBuilder*) builderWithPrototype:(pushMsgReq*) prototype {
  return [[pushMsgReq builder] mergeFrom:prototype];
}
- (pushMsgReqBuilder*) builder {
  return [pushMsgReq builder];
}
- (pushMsgReqBuilder*) toBuilder {
  return [pushMsgReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMsgid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgid", self.msgid];
  }
  if (self.hasFromid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromid", self.fromid];
  }
  if (self.hasToid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toid", self.toid];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasMsgtype) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgtype", self.msgtype];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMsgid) {
    [dictionary setObject: self.msgid forKey: @"msgid"];
  }
  if (self.hasFromid) {
    [dictionary setObject: self.fromid forKey: @"fromid"];
  }
  if (self.hasToid) {
    [dictionary setObject: self.toid forKey: @"toid"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasMsgtype) {
    [dictionary setObject: self.msgtype forKey: @"msgtype"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[pushMsgReq class]]) {
    return NO;
  }
  pushMsgReq *otherMessage = other;
  return
      self.hasMsgid == otherMessage.hasMsgid &&
      (!self.hasMsgid || [self.msgid isEqual:otherMessage.msgid]) &&
      self.hasFromid == otherMessage.hasFromid &&
      (!self.hasFromid || [self.fromid isEqual:otherMessage.fromid]) &&
      self.hasToid == otherMessage.hasToid &&
      (!self.hasToid || [self.toid isEqual:otherMessage.toid]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasMsgtype == otherMessage.hasMsgtype &&
      (!self.hasMsgtype || [self.msgtype isEqual:otherMessage.msgtype]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMsgid) {
    hashCode = hashCode * 31 + [self.msgid hash];
  }
  if (self.hasFromid) {
    hashCode = hashCode * 31 + [self.fromid hash];
  }
  if (self.hasToid) {
    hashCode = hashCode * 31 + [self.toid hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasMsgtype) {
    hashCode = hashCode * 31 + [self.msgtype hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface pushMsgReqBuilder()
@property (strong) pushMsgReq* resultPushMsgReq;
@end

@implementation pushMsgReqBuilder
@synthesize resultPushMsgReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPushMsgReq = [[pushMsgReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPushMsgReq;
}
- (pushMsgReqBuilder*) clear {
  self.resultPushMsgReq = [[pushMsgReq alloc] init];
  return self;
}
- (pushMsgReqBuilder*) clone {
  return [pushMsgReq builderWithPrototype:resultPushMsgReq];
}
- (pushMsgReq*) defaultInstance {
  return [pushMsgReq defaultInstance];
}
- (pushMsgReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (pushMsgReq*) buildPartial {
  pushMsgReq* returnMe = resultPushMsgReq;
  self.resultPushMsgReq = nil;
  return returnMe;
}
- (pushMsgReqBuilder*) mergeFrom:(pushMsgReq*) other {
  if (other == [pushMsgReq defaultInstance]) {
    return self;
  }
  if (other.hasMsgid) {
    [self setMsgid:other.msgid];
  }
  if (other.hasFromid) {
    [self setFromid:other.fromid];
  }
  if (other.hasToid) {
    [self setToid:other.toid];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasMsgtype) {
    [self setMsgtype:other.msgtype];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (pushMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (pushMsgReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMsgid:[input readString]];
        break;
      }
      case 18: {
        [self setFromid:[input readString]];
        break;
      }
      case 26: {
        [self setToid:[input readString]];
        break;
      }
      case 34: {
        [self setContent:[input readString]];
        break;
      }
      case 42: {
        [self setMsgtype:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMsgid {
  return resultPushMsgReq.hasMsgid;
}
- (NSString*) msgid {
  return resultPushMsgReq.msgid;
}
- (pushMsgReqBuilder*) setMsgid:(NSString*) value {
  resultPushMsgReq.hasMsgid = YES;
  resultPushMsgReq.msgid = value;
  return self;
}
- (pushMsgReqBuilder*) clearMsgid {
  resultPushMsgReq.hasMsgid = NO;
  resultPushMsgReq.msgid = @"";
  return self;
}
- (BOOL) hasFromid {
  return resultPushMsgReq.hasFromid;
}
- (NSString*) fromid {
  return resultPushMsgReq.fromid;
}
- (pushMsgReqBuilder*) setFromid:(NSString*) value {
  resultPushMsgReq.hasFromid = YES;
  resultPushMsgReq.fromid = value;
  return self;
}
- (pushMsgReqBuilder*) clearFromid {
  resultPushMsgReq.hasFromid = NO;
  resultPushMsgReq.fromid = @"";
  return self;
}
- (BOOL) hasToid {
  return resultPushMsgReq.hasToid;
}
- (NSString*) toid {
  return resultPushMsgReq.toid;
}
- (pushMsgReqBuilder*) setToid:(NSString*) value {
  resultPushMsgReq.hasToid = YES;
  resultPushMsgReq.toid = value;
  return self;
}
- (pushMsgReqBuilder*) clearToid {
  resultPushMsgReq.hasToid = NO;
  resultPushMsgReq.toid = @"";
  return self;
}
- (BOOL) hasContent {
  return resultPushMsgReq.hasContent;
}
- (NSString*) content {
  return resultPushMsgReq.content;
}
- (pushMsgReqBuilder*) setContent:(NSString*) value {
  resultPushMsgReq.hasContent = YES;
  resultPushMsgReq.content = value;
  return self;
}
- (pushMsgReqBuilder*) clearContent {
  resultPushMsgReq.hasContent = NO;
  resultPushMsgReq.content = @"";
  return self;
}
- (BOOL) hasMsgtype {
  return resultPushMsgReq.hasMsgtype;
}
- (NSString*) msgtype {
  return resultPushMsgReq.msgtype;
}
- (pushMsgReqBuilder*) setMsgtype:(NSString*) value {
  resultPushMsgReq.hasMsgtype = YES;
  resultPushMsgReq.msgtype = value;
  return self;
}
- (pushMsgReqBuilder*) clearMsgtype {
  resultPushMsgReq.hasMsgtype = NO;
  resultPushMsgReq.msgtype = @"";
  return self;
}
@end

@interface pushMsgRsp ()
@property (strong) NSString* toid;
@property (strong) NSString* msgid;
@property (strong) NSString* ack;
@property (strong) NSString* read;
@end

@implementation pushMsgRsp

- (BOOL) hasToid {
  return !!hasToid_;
}
- (void) setHasToid:(BOOL) _value_ {
  hasToid_ = !!_value_;
}
@synthesize toid;
- (BOOL) hasMsgid {
  return !!hasMsgid_;
}
- (void) setHasMsgid:(BOOL) _value_ {
  hasMsgid_ = !!_value_;
}
@synthesize msgid;
- (BOOL) hasAck {
  return !!hasAck_;
}
- (void) setHasAck:(BOOL) _value_ {
  hasAck_ = !!_value_;
}
@synthesize ack;
- (BOOL) hasRead {
  return !!hasRead_;
}
- (void) setHasRead:(BOOL) _value_ {
  hasRead_ = !!_value_;
}
@synthesize read;
- (instancetype) init {
  if ((self = [super init])) {
    self.toid = @"";
    self.msgid = @"";
    self.ack = @"";
    self.read = @"";
  }
  return self;
}
static pushMsgRsp* defaultpushMsgRspInstance = nil;
+ (void) initialize {
  if (self == [pushMsgRsp class]) {
    defaultpushMsgRspInstance = [[pushMsgRsp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultpushMsgRspInstance;
}
- (instancetype) defaultInstance {
  return defaultpushMsgRspInstance;
}
- (BOOL) isInitialized {
  if (!self.hasToid) {
    return NO;
  }
  if (!self.hasMsgid) {
    return NO;
  }
  if (!self.hasAck) {
    return NO;
  }
  if (!self.hasRead) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasToid) {
    [output writeString:1 value:self.toid];
  }
  if (self.hasMsgid) {
    [output writeString:2 value:self.msgid];
  }
  if (self.hasAck) {
    [output writeString:3 value:self.ack];
  }
  if (self.hasRead) {
    [output writeString:4 value:self.read];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasToid) {
    size_ += computeStringSize(1, self.toid);
  }
  if (self.hasMsgid) {
    size_ += computeStringSize(2, self.msgid);
  }
  if (self.hasAck) {
    size_ += computeStringSize(3, self.ack);
  }
  if (self.hasRead) {
    size_ += computeStringSize(4, self.read);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (pushMsgRsp*) parseFromData:(NSData*) data {
  return (pushMsgRsp*)[[[pushMsgRsp builder] mergeFromData:data] build];
}
+ (pushMsgRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (pushMsgRsp*)[[[pushMsgRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (pushMsgRsp*) parseFromInputStream:(NSInputStream*) input {
  return (pushMsgRsp*)[[[pushMsgRsp builder] mergeFromInputStream:input] build];
}
+ (pushMsgRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (pushMsgRsp*)[[[pushMsgRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (pushMsgRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (pushMsgRsp*)[[[pushMsgRsp builder] mergeFromCodedInputStream:input] build];
}
+ (pushMsgRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (pushMsgRsp*)[[[pushMsgRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (pushMsgRspBuilder*) builder {
  return [[pushMsgRspBuilder alloc] init];
}
+ (pushMsgRspBuilder*) builderWithPrototype:(pushMsgRsp*) prototype {
  return [[pushMsgRsp builder] mergeFrom:prototype];
}
- (pushMsgRspBuilder*) builder {
  return [pushMsgRsp builder];
}
- (pushMsgRspBuilder*) toBuilder {
  return [pushMsgRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasToid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toid", self.toid];
  }
  if (self.hasMsgid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"msgid", self.msgid];
  }
  if (self.hasAck) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ack", self.ack];
  }
  if (self.hasRead) {
    [output appendFormat:@"%@%@: %@\n", indent, @"read", self.read];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasToid) {
    [dictionary setObject: self.toid forKey: @"toid"];
  }
  if (self.hasMsgid) {
    [dictionary setObject: self.msgid forKey: @"msgid"];
  }
  if (self.hasAck) {
    [dictionary setObject: self.ack forKey: @"ack"];
  }
  if (self.hasRead) {
    [dictionary setObject: self.read forKey: @"read"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[pushMsgRsp class]]) {
    return NO;
  }
  pushMsgRsp *otherMessage = other;
  return
      self.hasToid == otherMessage.hasToid &&
      (!self.hasToid || [self.toid isEqual:otherMessage.toid]) &&
      self.hasMsgid == otherMessage.hasMsgid &&
      (!self.hasMsgid || [self.msgid isEqual:otherMessage.msgid]) &&
      self.hasAck == otherMessage.hasAck &&
      (!self.hasAck || [self.ack isEqual:otherMessage.ack]) &&
      self.hasRead == otherMessage.hasRead &&
      (!self.hasRead || [self.read isEqual:otherMessage.read]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasToid) {
    hashCode = hashCode * 31 + [self.toid hash];
  }
  if (self.hasMsgid) {
    hashCode = hashCode * 31 + [self.msgid hash];
  }
  if (self.hasAck) {
    hashCode = hashCode * 31 + [self.ack hash];
  }
  if (self.hasRead) {
    hashCode = hashCode * 31 + [self.read hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface pushMsgRspBuilder()
@property (strong) pushMsgRsp* resultPushMsgRsp;
@end

@implementation pushMsgRspBuilder
@synthesize resultPushMsgRsp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPushMsgRsp = [[pushMsgRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPushMsgRsp;
}
- (pushMsgRspBuilder*) clear {
  self.resultPushMsgRsp = [[pushMsgRsp alloc] init];
  return self;
}
- (pushMsgRspBuilder*) clone {
  return [pushMsgRsp builderWithPrototype:resultPushMsgRsp];
}
- (pushMsgRsp*) defaultInstance {
  return [pushMsgRsp defaultInstance];
}
- (pushMsgRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (pushMsgRsp*) buildPartial {
  pushMsgRsp* returnMe = resultPushMsgRsp;
  self.resultPushMsgRsp = nil;
  return returnMe;
}
- (pushMsgRspBuilder*) mergeFrom:(pushMsgRsp*) other {
  if (other == [pushMsgRsp defaultInstance]) {
    return self;
  }
  if (other.hasToid) {
    [self setToid:other.toid];
  }
  if (other.hasMsgid) {
    [self setMsgid:other.msgid];
  }
  if (other.hasAck) {
    [self setAck:other.ack];
  }
  if (other.hasRead) {
    [self setRead:other.read];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (pushMsgRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (pushMsgRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setToid:[input readString]];
        break;
      }
      case 18: {
        [self setMsgid:[input readString]];
        break;
      }
      case 26: {
        [self setAck:[input readString]];
        break;
      }
      case 34: {
        [self setRead:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasToid {
  return resultPushMsgRsp.hasToid;
}
- (NSString*) toid {
  return resultPushMsgRsp.toid;
}
- (pushMsgRspBuilder*) setToid:(NSString*) value {
  resultPushMsgRsp.hasToid = YES;
  resultPushMsgRsp.toid = value;
  return self;
}
- (pushMsgRspBuilder*) clearToid {
  resultPushMsgRsp.hasToid = NO;
  resultPushMsgRsp.toid = @"";
  return self;
}
- (BOOL) hasMsgid {
  return resultPushMsgRsp.hasMsgid;
}
- (NSString*) msgid {
  return resultPushMsgRsp.msgid;
}
- (pushMsgRspBuilder*) setMsgid:(NSString*) value {
  resultPushMsgRsp.hasMsgid = YES;
  resultPushMsgRsp.msgid = value;
  return self;
}
- (pushMsgRspBuilder*) clearMsgid {
  resultPushMsgRsp.hasMsgid = NO;
  resultPushMsgRsp.msgid = @"";
  return self;
}
- (BOOL) hasAck {
  return resultPushMsgRsp.hasAck;
}
- (NSString*) ack {
  return resultPushMsgRsp.ack;
}
- (pushMsgRspBuilder*) setAck:(NSString*) value {
  resultPushMsgRsp.hasAck = YES;
  resultPushMsgRsp.ack = value;
  return self;
}
- (pushMsgRspBuilder*) clearAck {
  resultPushMsgRsp.hasAck = NO;
  resultPushMsgRsp.ack = @"";
  return self;
}
- (BOOL) hasRead {
  return resultPushMsgRsp.hasRead;
}
- (NSString*) read {
  return resultPushMsgRsp.read;
}
- (pushMsgRspBuilder*) setRead:(NSString*) value {
  resultPushMsgRsp.hasRead = YES;
  resultPushMsgRsp.read = value;
  return self;
}
- (pushMsgRspBuilder*) clearRead {
  resultPushMsgRsp.hasRead = NO;
  resultPushMsgRsp.read = @"";
  return self;
}
@end

@interface pushAuthReq ()
@property (strong) NSString* ip;
@property (strong) NSString* port;
@end

@implementation pushAuthReq

- (BOOL) hasIp {
  return !!hasIp_;
}
- (void) setHasIp:(BOOL) _value_ {
  hasIp_ = !!_value_;
}
@synthesize ip;
- (BOOL) hasPort {
  return !!hasPort_;
}
- (void) setHasPort:(BOOL) _value_ {
  hasPort_ = !!_value_;
}
@synthesize port;
- (instancetype) init {
  if ((self = [super init])) {
    self.ip = @"";
    self.port = @"";
  }
  return self;
}
static pushAuthReq* defaultpushAuthReqInstance = nil;
+ (void) initialize {
  if (self == [pushAuthReq class]) {
    defaultpushAuthReqInstance = [[pushAuthReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultpushAuthReqInstance;
}
- (instancetype) defaultInstance {
  return defaultpushAuthReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasIp) {
    return NO;
  }
  if (!self.hasPort) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIp) {
    [output writeString:1 value:self.ip];
  }
  if (self.hasPort) {
    [output writeString:2 value:self.port];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasIp) {
    size_ += computeStringSize(1, self.ip);
  }
  if (self.hasPort) {
    size_ += computeStringSize(2, self.port);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (pushAuthReq*) parseFromData:(NSData*) data {
  return (pushAuthReq*)[[[pushAuthReq builder] mergeFromData:data] build];
}
+ (pushAuthReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (pushAuthReq*)[[[pushAuthReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (pushAuthReq*) parseFromInputStream:(NSInputStream*) input {
  return (pushAuthReq*)[[[pushAuthReq builder] mergeFromInputStream:input] build];
}
+ (pushAuthReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (pushAuthReq*)[[[pushAuthReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (pushAuthReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (pushAuthReq*)[[[pushAuthReq builder] mergeFromCodedInputStream:input] build];
}
+ (pushAuthReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (pushAuthReq*)[[[pushAuthReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (pushAuthReqBuilder*) builder {
  return [[pushAuthReqBuilder alloc] init];
}
+ (pushAuthReqBuilder*) builderWithPrototype:(pushAuthReq*) prototype {
  return [[pushAuthReq builder] mergeFrom:prototype];
}
- (pushAuthReqBuilder*) builder {
  return [pushAuthReq builder];
}
- (pushAuthReqBuilder*) toBuilder {
  return [pushAuthReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasIp) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ip", self.ip];
  }
  if (self.hasPort) {
    [output appendFormat:@"%@%@: %@\n", indent, @"port", self.port];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasIp) {
    [dictionary setObject: self.ip forKey: @"ip"];
  }
  if (self.hasPort) {
    [dictionary setObject: self.port forKey: @"port"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[pushAuthReq class]]) {
    return NO;
  }
  pushAuthReq *otherMessage = other;
  return
      self.hasIp == otherMessage.hasIp &&
      (!self.hasIp || [self.ip isEqual:otherMessage.ip]) &&
      self.hasPort == otherMessage.hasPort &&
      (!self.hasPort || [self.port isEqual:otherMessage.port]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasIp) {
    hashCode = hashCode * 31 + [self.ip hash];
  }
  if (self.hasPort) {
    hashCode = hashCode * 31 + [self.port hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface pushAuthReqBuilder()
@property (strong) pushAuthReq* resultPushAuthReq;
@end

@implementation pushAuthReqBuilder
@synthesize resultPushAuthReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPushAuthReq = [[pushAuthReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPushAuthReq;
}
- (pushAuthReqBuilder*) clear {
  self.resultPushAuthReq = [[pushAuthReq alloc] init];
  return self;
}
- (pushAuthReqBuilder*) clone {
  return [pushAuthReq builderWithPrototype:resultPushAuthReq];
}
- (pushAuthReq*) defaultInstance {
  return [pushAuthReq defaultInstance];
}
- (pushAuthReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (pushAuthReq*) buildPartial {
  pushAuthReq* returnMe = resultPushAuthReq;
  self.resultPushAuthReq = nil;
  return returnMe;
}
- (pushAuthReqBuilder*) mergeFrom:(pushAuthReq*) other {
  if (other == [pushAuthReq defaultInstance]) {
    return self;
  }
  if (other.hasIp) {
    [self setIp:other.ip];
  }
  if (other.hasPort) {
    [self setPort:other.port];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (pushAuthReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (pushAuthReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setIp:[input readString]];
        break;
      }
      case 18: {
        [self setPort:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasIp {
  return resultPushAuthReq.hasIp;
}
- (NSString*) ip {
  return resultPushAuthReq.ip;
}
- (pushAuthReqBuilder*) setIp:(NSString*) value {
  resultPushAuthReq.hasIp = YES;
  resultPushAuthReq.ip = value;
  return self;
}
- (pushAuthReqBuilder*) clearIp {
  resultPushAuthReq.hasIp = NO;
  resultPushAuthReq.ip = @"";
  return self;
}
- (BOOL) hasPort {
  return resultPushAuthReq.hasPort;
}
- (NSString*) port {
  return resultPushAuthReq.port;
}
- (pushAuthReqBuilder*) setPort:(NSString*) value {
  resultPushAuthReq.hasPort = YES;
  resultPushAuthReq.port = value;
  return self;
}
- (pushAuthReqBuilder*) clearPort {
  resultPushAuthReq.hasPort = NO;
  resultPushAuthReq.port = @"";
  return self;
}
@end

@interface pushAuthRsp ()
@property ResultCode code;
@end

@implementation pushAuthRsp

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = ResultCodeNoError;
  }
  return self;
}
static pushAuthRsp* defaultpushAuthRspInstance = nil;
+ (void) initialize {
  if (self == [pushAuthRsp class]) {
    defaultpushAuthRspInstance = [[pushAuthRsp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultpushAuthRspInstance;
}
- (instancetype) defaultInstance {
  return defaultpushAuthRspInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeEnum:1 value:self.code];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeEnumSize(1, self.code);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (pushAuthRsp*) parseFromData:(NSData*) data {
  return (pushAuthRsp*)[[[pushAuthRsp builder] mergeFromData:data] build];
}
+ (pushAuthRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (pushAuthRsp*)[[[pushAuthRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (pushAuthRsp*) parseFromInputStream:(NSInputStream*) input {
  return (pushAuthRsp*)[[[pushAuthRsp builder] mergeFromInputStream:input] build];
}
+ (pushAuthRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (pushAuthRsp*)[[[pushAuthRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (pushAuthRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (pushAuthRsp*)[[[pushAuthRsp builder] mergeFromCodedInputStream:input] build];
}
+ (pushAuthRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (pushAuthRsp*)[[[pushAuthRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (pushAuthRspBuilder*) builder {
  return [[pushAuthRspBuilder alloc] init];
}
+ (pushAuthRspBuilder*) builderWithPrototype:(pushAuthRsp*) prototype {
  return [[pushAuthRsp builder] mergeFrom:prototype];
}
- (pushAuthRspBuilder*) builder {
  return [pushAuthRsp builder];
}
- (pushAuthRspBuilder*) toBuilder {
  return [pushAuthRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", NSStringFromResultCode(self.code)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: @(self.code) forKey: @"code"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[pushAuthRsp class]]) {
    return NO;
  }
  pushAuthRsp *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || self.code == otherMessage.code) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + self.code;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface pushAuthRspBuilder()
@property (strong) pushAuthRsp* resultPushAuthRsp;
@end

@implementation pushAuthRspBuilder
@synthesize resultPushAuthRsp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPushAuthRsp = [[pushAuthRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPushAuthRsp;
}
- (pushAuthRspBuilder*) clear {
  self.resultPushAuthRsp = [[pushAuthRsp alloc] init];
  return self;
}
- (pushAuthRspBuilder*) clone {
  return [pushAuthRsp builderWithPrototype:resultPushAuthRsp];
}
- (pushAuthRsp*) defaultInstance {
  return [pushAuthRsp defaultInstance];
}
- (pushAuthRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (pushAuthRsp*) buildPartial {
  pushAuthRsp* returnMe = resultPushAuthRsp;
  self.resultPushAuthRsp = nil;
  return returnMe;
}
- (pushAuthRspBuilder*) mergeFrom:(pushAuthRsp*) other {
  if (other == [pushAuthRsp defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (pushAuthRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (pushAuthRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        ResultCode value = (ResultCode)[input readEnum];
        if (ResultCodeIsValidValue(value)) {
          [self setCode:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultPushAuthRsp.hasCode;
}
- (ResultCode) code {
  return resultPushAuthRsp.code;
}
- (pushAuthRspBuilder*) setCode:(ResultCode) value {
  resultPushAuthRsp.hasCode = YES;
  resultPushAuthRsp.code = value;
  return self;
}
- (pushAuthRspBuilder*) clearCode {
  resultPushAuthRsp.hasCode = NO;
  resultPushAuthRsp.code = ResultCodeNoError;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
