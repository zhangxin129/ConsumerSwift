// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ImHxfriend.pb.h"
// @@protoc_insertion_point(imports)

@implementation ImHxfriendRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ImHxfriendRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ImHxcommonRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface AddFriendReq ()
@property (strong) NSString* userId;
@property (strong) NSString* friendId;
@property (strong) NSString* content;
@property (strong) NSString* verify;
@end

@implementation AddFriendReq

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasFriendId {
  return !!hasFriendId_;
}
- (void) setHasFriendId:(BOOL) _value_ {
  hasFriendId_ = !!_value_;
}
@synthesize friendId;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasVerify {
  return !!hasVerify_;
}
- (void) setHasVerify:(BOOL) _value_ {
  hasVerify_ = !!_value_;
}
@synthesize verify;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = @"";
    self.friendId = @"";
    self.content = @"";
    self.verify = @"";
  }
  return self;
}
static AddFriendReq* defaultAddFriendReqInstance = nil;
+ (void) initialize {
  if (self == [AddFriendReq class]) {
    defaultAddFriendReqInstance = [[AddFriendReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultAddFriendReqInstance;
}
- (instancetype) defaultInstance {
  return defaultAddFriendReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasFriendId) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasVerify) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeString:1 value:self.userId];
  }
  if (self.hasFriendId) {
    [output writeString:2 value:self.friendId];
  }
  if (self.hasContent) {
    [output writeString:3 value:self.content];
  }
  if (self.hasVerify) {
    [output writeString:4 value:self.verify];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeStringSize(1, self.userId);
  }
  if (self.hasFriendId) {
    size_ += computeStringSize(2, self.friendId);
  }
  if (self.hasContent) {
    size_ += computeStringSize(3, self.content);
  }
  if (self.hasVerify) {
    size_ += computeStringSize(4, self.verify);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AddFriendReq*) parseFromData:(NSData*) data {
  return (AddFriendReq*)[[[AddFriendReq builder] mergeFromData:data] build];
}
+ (AddFriendReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddFriendReq*)[[[AddFriendReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AddFriendReq*) parseFromInputStream:(NSInputStream*) input {
  return (AddFriendReq*)[[[AddFriendReq builder] mergeFromInputStream:input] build];
}
+ (AddFriendReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddFriendReq*)[[[AddFriendReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AddFriendReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AddFriendReq*)[[[AddFriendReq builder] mergeFromCodedInputStream:input] build];
}
+ (AddFriendReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddFriendReq*)[[[AddFriendReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AddFriendReqBuilder*) builder {
  return [[AddFriendReqBuilder alloc] init];
}
+ (AddFriendReqBuilder*) builderWithPrototype:(AddFriendReq*) prototype {
  return [[AddFriendReq builder] mergeFrom:prototype];
}
- (AddFriendReqBuilder*) builder {
  return [AddFriendReq builder];
}
- (AddFriendReqBuilder*) toBuilder {
  return [AddFriendReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  if (self.hasFriendId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"friendId", self.friendId];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasVerify) {
    [output appendFormat:@"%@%@: %@\n", indent, @"verify", self.verify];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: self.userId forKey: @"userId"];
  }
  if (self.hasFriendId) {
    [dictionary setObject: self.friendId forKey: @"friendId"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasVerify) {
    [dictionary setObject: self.verify forKey: @"verify"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AddFriendReq class]]) {
    return NO;
  }
  AddFriendReq *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || [self.userId isEqual:otherMessage.userId]) &&
      self.hasFriendId == otherMessage.hasFriendId &&
      (!self.hasFriendId || [self.friendId isEqual:otherMessage.friendId]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasVerify == otherMessage.hasVerify &&
      (!self.hasVerify || [self.verify isEqual:otherMessage.verify]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [self.userId hash];
  }
  if (self.hasFriendId) {
    hashCode = hashCode * 31 + [self.friendId hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasVerify) {
    hashCode = hashCode * 31 + [self.verify hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AddFriendReqBuilder()
@property (strong) AddFriendReq* resultAddFriendReq;
@end

@implementation AddFriendReqBuilder
@synthesize resultAddFriendReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAddFriendReq = [[AddFriendReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAddFriendReq;
}
- (AddFriendReqBuilder*) clear {
  self.resultAddFriendReq = [[AddFriendReq alloc] init];
  return self;
}
- (AddFriendReqBuilder*) clone {
  return [AddFriendReq builderWithPrototype:resultAddFriendReq];
}
- (AddFriendReq*) defaultInstance {
  return [AddFriendReq defaultInstance];
}
- (AddFriendReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AddFriendReq*) buildPartial {
  AddFriendReq* returnMe = resultAddFriendReq;
  self.resultAddFriendReq = nil;
  return returnMe;
}
- (AddFriendReqBuilder*) mergeFrom:(AddFriendReq*) other {
  if (other == [AddFriendReq defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasFriendId) {
    [self setFriendId:other.friendId];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasVerify) {
    [self setVerify:other.verify];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AddFriendReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AddFriendReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserId:[input readString]];
        break;
      }
      case 18: {
        [self setFriendId:[input readString]];
        break;
      }
      case 26: {
        [self setContent:[input readString]];
        break;
      }
      case 34: {
        [self setVerify:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultAddFriendReq.hasUserId;
}
- (NSString*) userId {
  return resultAddFriendReq.userId;
}
- (AddFriendReqBuilder*) setUserId:(NSString*) value {
  resultAddFriendReq.hasUserId = YES;
  resultAddFriendReq.userId = value;
  return self;
}
- (AddFriendReqBuilder*) clearUserId {
  resultAddFriendReq.hasUserId = NO;
  resultAddFriendReq.userId = @"";
  return self;
}
- (BOOL) hasFriendId {
  return resultAddFriendReq.hasFriendId;
}
- (NSString*) friendId {
  return resultAddFriendReq.friendId;
}
- (AddFriendReqBuilder*) setFriendId:(NSString*) value {
  resultAddFriendReq.hasFriendId = YES;
  resultAddFriendReq.friendId = value;
  return self;
}
- (AddFriendReqBuilder*) clearFriendId {
  resultAddFriendReq.hasFriendId = NO;
  resultAddFriendReq.friendId = @"";
  return self;
}
- (BOOL) hasContent {
  return resultAddFriendReq.hasContent;
}
- (NSString*) content {
  return resultAddFriendReq.content;
}
- (AddFriendReqBuilder*) setContent:(NSString*) value {
  resultAddFriendReq.hasContent = YES;
  resultAddFriendReq.content = value;
  return self;
}
- (AddFriendReqBuilder*) clearContent {
  resultAddFriendReq.hasContent = NO;
  resultAddFriendReq.content = @"";
  return self;
}
- (BOOL) hasVerify {
  return resultAddFriendReq.hasVerify;
}
- (NSString*) verify {
  return resultAddFriendReq.verify;
}
- (AddFriendReqBuilder*) setVerify:(NSString*) value {
  resultAddFriendReq.hasVerify = YES;
  resultAddFriendReq.verify = value;
  return self;
}
- (AddFriendReqBuilder*) clearVerify {
  resultAddFriendReq.hasVerify = NO;
  resultAddFriendReq.verify = @"";
  return self;
}
@end

@interface AddFriendRsp ()
@property (strong) NSString* userId;
@property (strong) NSString* friendId;
@property ResultCode resultCode;
@end

@implementation AddFriendRsp

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasFriendId {
  return !!hasFriendId_;
}
- (void) setHasFriendId:(BOOL) _value_ {
  hasFriendId_ = !!_value_;
}
@synthesize friendId;
- (BOOL) hasResultCode {
  return !!hasResultCode_;
}
- (void) setHasResultCode:(BOOL) _value_ {
  hasResultCode_ = !!_value_;
}
@synthesize resultCode;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = @"";
    self.friendId = @"";
    self.resultCode = ResultCodeNoError;
  }
  return self;
}
static AddFriendRsp* defaultAddFriendRspInstance = nil;
+ (void) initialize {
  if (self == [AddFriendRsp class]) {
    defaultAddFriendRspInstance = [[AddFriendRsp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultAddFriendRspInstance;
}
- (instancetype) defaultInstance {
  return defaultAddFriendRspInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasFriendId) {
    return NO;
  }
  if (!self.hasResultCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeString:1 value:self.userId];
  }
  if (self.hasFriendId) {
    [output writeString:2 value:self.friendId];
  }
  if (self.hasResultCode) {
    [output writeEnum:3 value:self.resultCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeStringSize(1, self.userId);
  }
  if (self.hasFriendId) {
    size_ += computeStringSize(2, self.friendId);
  }
  if (self.hasResultCode) {
    size_ += computeEnumSize(3, self.resultCode);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (AddFriendRsp*) parseFromData:(NSData*) data {
  return (AddFriendRsp*)[[[AddFriendRsp builder] mergeFromData:data] build];
}
+ (AddFriendRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddFriendRsp*)[[[AddFriendRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (AddFriendRsp*) parseFromInputStream:(NSInputStream*) input {
  return (AddFriendRsp*)[[[AddFriendRsp builder] mergeFromInputStream:input] build];
}
+ (AddFriendRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddFriendRsp*)[[[AddFriendRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AddFriendRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (AddFriendRsp*)[[[AddFriendRsp builder] mergeFromCodedInputStream:input] build];
}
+ (AddFriendRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (AddFriendRsp*)[[[AddFriendRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (AddFriendRspBuilder*) builder {
  return [[AddFriendRspBuilder alloc] init];
}
+ (AddFriendRspBuilder*) builderWithPrototype:(AddFriendRsp*) prototype {
  return [[AddFriendRsp builder] mergeFrom:prototype];
}
- (AddFriendRspBuilder*) builder {
  return [AddFriendRsp builder];
}
- (AddFriendRspBuilder*) toBuilder {
  return [AddFriendRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  if (self.hasFriendId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"friendId", self.friendId];
  }
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", NSStringFromResultCode(self.resultCode)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: self.userId forKey: @"userId"];
  }
  if (self.hasFriendId) {
    [dictionary setObject: self.friendId forKey: @"friendId"];
  }
  if (self.hasResultCode) {
    [dictionary setObject: @(self.resultCode) forKey: @"resultCode"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[AddFriendRsp class]]) {
    return NO;
  }
  AddFriendRsp *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || [self.userId isEqual:otherMessage.userId]) &&
      self.hasFriendId == otherMessage.hasFriendId &&
      (!self.hasFriendId || [self.friendId isEqual:otherMessage.friendId]) &&
      self.hasResultCode == otherMessage.hasResultCode &&
      (!self.hasResultCode || self.resultCode == otherMessage.resultCode) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [self.userId hash];
  }
  if (self.hasFriendId) {
    hashCode = hashCode * 31 + [self.friendId hash];
  }
  if (self.hasResultCode) {
    hashCode = hashCode * 31 + self.resultCode;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface AddFriendRspBuilder()
@property (strong) AddFriendRsp* resultAddFriendRsp;
@end

@implementation AddFriendRspBuilder
@synthesize resultAddFriendRsp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAddFriendRsp = [[AddFriendRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAddFriendRsp;
}
- (AddFriendRspBuilder*) clear {
  self.resultAddFriendRsp = [[AddFriendRsp alloc] init];
  return self;
}
- (AddFriendRspBuilder*) clone {
  return [AddFriendRsp builderWithPrototype:resultAddFriendRsp];
}
- (AddFriendRsp*) defaultInstance {
  return [AddFriendRsp defaultInstance];
}
- (AddFriendRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (AddFriendRsp*) buildPartial {
  AddFriendRsp* returnMe = resultAddFriendRsp;
  self.resultAddFriendRsp = nil;
  return returnMe;
}
- (AddFriendRspBuilder*) mergeFrom:(AddFriendRsp*) other {
  if (other == [AddFriendRsp defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasFriendId) {
    [self setFriendId:other.friendId];
  }
  if (other.hasResultCode) {
    [self setResultCode:other.resultCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (AddFriendRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (AddFriendRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserId:[input readString]];
        break;
      }
      case 18: {
        [self setFriendId:[input readString]];
        break;
      }
      case 24: {
        ResultCode value = (ResultCode)[input readEnum];
        if (ResultCodeIsValidValue(value)) {
          [self setResultCode:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultAddFriendRsp.hasUserId;
}
- (NSString*) userId {
  return resultAddFriendRsp.userId;
}
- (AddFriendRspBuilder*) setUserId:(NSString*) value {
  resultAddFriendRsp.hasUserId = YES;
  resultAddFriendRsp.userId = value;
  return self;
}
- (AddFriendRspBuilder*) clearUserId {
  resultAddFriendRsp.hasUserId = NO;
  resultAddFriendRsp.userId = @"";
  return self;
}
- (BOOL) hasFriendId {
  return resultAddFriendRsp.hasFriendId;
}
- (NSString*) friendId {
  return resultAddFriendRsp.friendId;
}
- (AddFriendRspBuilder*) setFriendId:(NSString*) value {
  resultAddFriendRsp.hasFriendId = YES;
  resultAddFriendRsp.friendId = value;
  return self;
}
- (AddFriendRspBuilder*) clearFriendId {
  resultAddFriendRsp.hasFriendId = NO;
  resultAddFriendRsp.friendId = @"";
  return self;
}
- (BOOL) hasResultCode {
  return resultAddFriendRsp.hasResultCode;
}
- (ResultCode) resultCode {
  return resultAddFriendRsp.resultCode;
}
- (AddFriendRspBuilder*) setResultCode:(ResultCode) value {
  resultAddFriendRsp.hasResultCode = YES;
  resultAddFriendRsp.resultCode = value;
  return self;
}
- (AddFriendRspBuilder*) clearResultCode {
  resultAddFriendRsp.hasResultCode = NO;
  resultAddFriendRsp.resultCode = ResultCodeNoError;
  return self;
}
@end

@interface VerifyFriendReq ()
@property (strong) NSString* userId;
@property (strong) NSString* friendId;
@property SInt32 agree;
@property (strong) NSString* content;
@end

@implementation VerifyFriendReq

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasFriendId {
  return !!hasFriendId_;
}
- (void) setHasFriendId:(BOOL) _value_ {
  hasFriendId_ = !!_value_;
}
@synthesize friendId;
- (BOOL) hasAgree {
  return !!hasAgree_;
}
- (void) setHasAgree:(BOOL) _value_ {
  hasAgree_ = !!_value_;
}
@synthesize agree;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = @"";
    self.friendId = @"";
    self.agree = 0;
    self.content = @"";
  }
  return self;
}
static VerifyFriendReq* defaultVerifyFriendReqInstance = nil;
+ (void) initialize {
  if (self == [VerifyFriendReq class]) {
    defaultVerifyFriendReqInstance = [[VerifyFriendReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultVerifyFriendReqInstance;
}
- (instancetype) defaultInstance {
  return defaultVerifyFriendReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasFriendId) {
    return NO;
  }
  if (!self.hasAgree) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeString:1 value:self.userId];
  }
  if (self.hasFriendId) {
    [output writeString:2 value:self.friendId];
  }
  if (self.hasAgree) {
    [output writeInt32:3 value:self.agree];
  }
  if (self.hasContent) {
    [output writeString:4 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeStringSize(1, self.userId);
  }
  if (self.hasFriendId) {
    size_ += computeStringSize(2, self.friendId);
  }
  if (self.hasAgree) {
    size_ += computeInt32Size(3, self.agree);
  }
  if (self.hasContent) {
    size_ += computeStringSize(4, self.content);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (VerifyFriendReq*) parseFromData:(NSData*) data {
  return (VerifyFriendReq*)[[[VerifyFriendReq builder] mergeFromData:data] build];
}
+ (VerifyFriendReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VerifyFriendReq*)[[[VerifyFriendReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (VerifyFriendReq*) parseFromInputStream:(NSInputStream*) input {
  return (VerifyFriendReq*)[[[VerifyFriendReq builder] mergeFromInputStream:input] build];
}
+ (VerifyFriendReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VerifyFriendReq*)[[[VerifyFriendReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (VerifyFriendReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (VerifyFriendReq*)[[[VerifyFriendReq builder] mergeFromCodedInputStream:input] build];
}
+ (VerifyFriendReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VerifyFriendReq*)[[[VerifyFriendReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (VerifyFriendReqBuilder*) builder {
  return [[VerifyFriendReqBuilder alloc] init];
}
+ (VerifyFriendReqBuilder*) builderWithPrototype:(VerifyFriendReq*) prototype {
  return [[VerifyFriendReq builder] mergeFrom:prototype];
}
- (VerifyFriendReqBuilder*) builder {
  return [VerifyFriendReq builder];
}
- (VerifyFriendReqBuilder*) toBuilder {
  return [VerifyFriendReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  if (self.hasFriendId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"friendId", self.friendId];
  }
  if (self.hasAgree) {
    [output appendFormat:@"%@%@: %@\n", indent, @"agree", [NSNumber numberWithInteger:self.agree]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: self.userId forKey: @"userId"];
  }
  if (self.hasFriendId) {
    [dictionary setObject: self.friendId forKey: @"friendId"];
  }
  if (self.hasAgree) {
    [dictionary setObject: [NSNumber numberWithInteger:self.agree] forKey: @"agree"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[VerifyFriendReq class]]) {
    return NO;
  }
  VerifyFriendReq *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || [self.userId isEqual:otherMessage.userId]) &&
      self.hasFriendId == otherMessage.hasFriendId &&
      (!self.hasFriendId || [self.friendId isEqual:otherMessage.friendId]) &&
      self.hasAgree == otherMessage.hasAgree &&
      (!self.hasAgree || self.agree == otherMessage.agree) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [self.userId hash];
  }
  if (self.hasFriendId) {
    hashCode = hashCode * 31 + [self.friendId hash];
  }
  if (self.hasAgree) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.agree] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface VerifyFriendReqBuilder()
@property (strong) VerifyFriendReq* resultVerifyFriendReq;
@end

@implementation VerifyFriendReqBuilder
@synthesize resultVerifyFriendReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultVerifyFriendReq = [[VerifyFriendReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultVerifyFriendReq;
}
- (VerifyFriendReqBuilder*) clear {
  self.resultVerifyFriendReq = [[VerifyFriendReq alloc] init];
  return self;
}
- (VerifyFriendReqBuilder*) clone {
  return [VerifyFriendReq builderWithPrototype:resultVerifyFriendReq];
}
- (VerifyFriendReq*) defaultInstance {
  return [VerifyFriendReq defaultInstance];
}
- (VerifyFriendReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (VerifyFriendReq*) buildPartial {
  VerifyFriendReq* returnMe = resultVerifyFriendReq;
  self.resultVerifyFriendReq = nil;
  return returnMe;
}
- (VerifyFriendReqBuilder*) mergeFrom:(VerifyFriendReq*) other {
  if (other == [VerifyFriendReq defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasFriendId) {
    [self setFriendId:other.friendId];
  }
  if (other.hasAgree) {
    [self setAgree:other.agree];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (VerifyFriendReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (VerifyFriendReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserId:[input readString]];
        break;
      }
      case 18: {
        [self setFriendId:[input readString]];
        break;
      }
      case 24: {
        [self setAgree:[input readInt32]];
        break;
      }
      case 34: {
        [self setContent:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultVerifyFriendReq.hasUserId;
}
- (NSString*) userId {
  return resultVerifyFriendReq.userId;
}
- (VerifyFriendReqBuilder*) setUserId:(NSString*) value {
  resultVerifyFriendReq.hasUserId = YES;
  resultVerifyFriendReq.userId = value;
  return self;
}
- (VerifyFriendReqBuilder*) clearUserId {
  resultVerifyFriendReq.hasUserId = NO;
  resultVerifyFriendReq.userId = @"";
  return self;
}
- (BOOL) hasFriendId {
  return resultVerifyFriendReq.hasFriendId;
}
- (NSString*) friendId {
  return resultVerifyFriendReq.friendId;
}
- (VerifyFriendReqBuilder*) setFriendId:(NSString*) value {
  resultVerifyFriendReq.hasFriendId = YES;
  resultVerifyFriendReq.friendId = value;
  return self;
}
- (VerifyFriendReqBuilder*) clearFriendId {
  resultVerifyFriendReq.hasFriendId = NO;
  resultVerifyFriendReq.friendId = @"";
  return self;
}
- (BOOL) hasAgree {
  return resultVerifyFriendReq.hasAgree;
}
- (SInt32) agree {
  return resultVerifyFriendReq.agree;
}
- (VerifyFriendReqBuilder*) setAgree:(SInt32) value {
  resultVerifyFriendReq.hasAgree = YES;
  resultVerifyFriendReq.agree = value;
  return self;
}
- (VerifyFriendReqBuilder*) clearAgree {
  resultVerifyFriendReq.hasAgree = NO;
  resultVerifyFriendReq.agree = 0;
  return self;
}
- (BOOL) hasContent {
  return resultVerifyFriendReq.hasContent;
}
- (NSString*) content {
  return resultVerifyFriendReq.content;
}
- (VerifyFriendReqBuilder*) setContent:(NSString*) value {
  resultVerifyFriendReq.hasContent = YES;
  resultVerifyFriendReq.content = value;
  return self;
}
- (VerifyFriendReqBuilder*) clearContent {
  resultVerifyFriendReq.hasContent = NO;
  resultVerifyFriendReq.content = @"";
  return self;
}
@end

@interface VerifyFriendRsp ()
@property (strong) NSString* userId;
@property (strong) NSString* friendId;
@property ResultCode resultCode;
@end

@implementation VerifyFriendRsp

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasFriendId {
  return !!hasFriendId_;
}
- (void) setHasFriendId:(BOOL) _value_ {
  hasFriendId_ = !!_value_;
}
@synthesize friendId;
- (BOOL) hasResultCode {
  return !!hasResultCode_;
}
- (void) setHasResultCode:(BOOL) _value_ {
  hasResultCode_ = !!_value_;
}
@synthesize resultCode;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = @"";
    self.friendId = @"";
    self.resultCode = ResultCodeNoError;
  }
  return self;
}
static VerifyFriendRsp* defaultVerifyFriendRspInstance = nil;
+ (void) initialize {
  if (self == [VerifyFriendRsp class]) {
    defaultVerifyFriendRspInstance = [[VerifyFriendRsp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultVerifyFriendRspInstance;
}
- (instancetype) defaultInstance {
  return defaultVerifyFriendRspInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasFriendId) {
    return NO;
  }
  if (!self.hasResultCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeString:1 value:self.userId];
  }
  if (self.hasFriendId) {
    [output writeString:2 value:self.friendId];
  }
  if (self.hasResultCode) {
    [output writeEnum:3 value:self.resultCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeStringSize(1, self.userId);
  }
  if (self.hasFriendId) {
    size_ += computeStringSize(2, self.friendId);
  }
  if (self.hasResultCode) {
    size_ += computeEnumSize(3, self.resultCode);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (VerifyFriendRsp*) parseFromData:(NSData*) data {
  return (VerifyFriendRsp*)[[[VerifyFriendRsp builder] mergeFromData:data] build];
}
+ (VerifyFriendRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VerifyFriendRsp*)[[[VerifyFriendRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (VerifyFriendRsp*) parseFromInputStream:(NSInputStream*) input {
  return (VerifyFriendRsp*)[[[VerifyFriendRsp builder] mergeFromInputStream:input] build];
}
+ (VerifyFriendRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VerifyFriendRsp*)[[[VerifyFriendRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (VerifyFriendRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (VerifyFriendRsp*)[[[VerifyFriendRsp builder] mergeFromCodedInputStream:input] build];
}
+ (VerifyFriendRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (VerifyFriendRsp*)[[[VerifyFriendRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (VerifyFriendRspBuilder*) builder {
  return [[VerifyFriendRspBuilder alloc] init];
}
+ (VerifyFriendRspBuilder*) builderWithPrototype:(VerifyFriendRsp*) prototype {
  return [[VerifyFriendRsp builder] mergeFrom:prototype];
}
- (VerifyFriendRspBuilder*) builder {
  return [VerifyFriendRsp builder];
}
- (VerifyFriendRspBuilder*) toBuilder {
  return [VerifyFriendRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  if (self.hasFriendId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"friendId", self.friendId];
  }
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", NSStringFromResultCode(self.resultCode)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: self.userId forKey: @"userId"];
  }
  if (self.hasFriendId) {
    [dictionary setObject: self.friendId forKey: @"friendId"];
  }
  if (self.hasResultCode) {
    [dictionary setObject: @(self.resultCode) forKey: @"resultCode"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[VerifyFriendRsp class]]) {
    return NO;
  }
  VerifyFriendRsp *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || [self.userId isEqual:otherMessage.userId]) &&
      self.hasFriendId == otherMessage.hasFriendId &&
      (!self.hasFriendId || [self.friendId isEqual:otherMessage.friendId]) &&
      self.hasResultCode == otherMessage.hasResultCode &&
      (!self.hasResultCode || self.resultCode == otherMessage.resultCode) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [self.userId hash];
  }
  if (self.hasFriendId) {
    hashCode = hashCode * 31 + [self.friendId hash];
  }
  if (self.hasResultCode) {
    hashCode = hashCode * 31 + self.resultCode;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface VerifyFriendRspBuilder()
@property (strong) VerifyFriendRsp* resultVerifyFriendRsp;
@end

@implementation VerifyFriendRspBuilder
@synthesize resultVerifyFriendRsp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultVerifyFriendRsp = [[VerifyFriendRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultVerifyFriendRsp;
}
- (VerifyFriendRspBuilder*) clear {
  self.resultVerifyFriendRsp = [[VerifyFriendRsp alloc] init];
  return self;
}
- (VerifyFriendRspBuilder*) clone {
  return [VerifyFriendRsp builderWithPrototype:resultVerifyFriendRsp];
}
- (VerifyFriendRsp*) defaultInstance {
  return [VerifyFriendRsp defaultInstance];
}
- (VerifyFriendRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (VerifyFriendRsp*) buildPartial {
  VerifyFriendRsp* returnMe = resultVerifyFriendRsp;
  self.resultVerifyFriendRsp = nil;
  return returnMe;
}
- (VerifyFriendRspBuilder*) mergeFrom:(VerifyFriendRsp*) other {
  if (other == [VerifyFriendRsp defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasFriendId) {
    [self setFriendId:other.friendId];
  }
  if (other.hasResultCode) {
    [self setResultCode:other.resultCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (VerifyFriendRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (VerifyFriendRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserId:[input readString]];
        break;
      }
      case 18: {
        [self setFriendId:[input readString]];
        break;
      }
      case 24: {
        ResultCode value = (ResultCode)[input readEnum];
        if (ResultCodeIsValidValue(value)) {
          [self setResultCode:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultVerifyFriendRsp.hasUserId;
}
- (NSString*) userId {
  return resultVerifyFriendRsp.userId;
}
- (VerifyFriendRspBuilder*) setUserId:(NSString*) value {
  resultVerifyFriendRsp.hasUserId = YES;
  resultVerifyFriendRsp.userId = value;
  return self;
}
- (VerifyFriendRspBuilder*) clearUserId {
  resultVerifyFriendRsp.hasUserId = NO;
  resultVerifyFriendRsp.userId = @"";
  return self;
}
- (BOOL) hasFriendId {
  return resultVerifyFriendRsp.hasFriendId;
}
- (NSString*) friendId {
  return resultVerifyFriendRsp.friendId;
}
- (VerifyFriendRspBuilder*) setFriendId:(NSString*) value {
  resultVerifyFriendRsp.hasFriendId = YES;
  resultVerifyFriendRsp.friendId = value;
  return self;
}
- (VerifyFriendRspBuilder*) clearFriendId {
  resultVerifyFriendRsp.hasFriendId = NO;
  resultVerifyFriendRsp.friendId = @"";
  return self;
}
- (BOOL) hasResultCode {
  return resultVerifyFriendRsp.hasResultCode;
}
- (ResultCode) resultCode {
  return resultVerifyFriendRsp.resultCode;
}
- (VerifyFriendRspBuilder*) setResultCode:(ResultCode) value {
  resultVerifyFriendRsp.hasResultCode = YES;
  resultVerifyFriendRsp.resultCode = value;
  return self;
}
- (VerifyFriendRspBuilder*) clearResultCode {
  resultVerifyFriendRsp.hasResultCode = NO;
  resultVerifyFriendRsp.resultCode = ResultCodeNoError;
  return self;
}
@end

@interface DelFriendReq ()
@property (strong) NSString* userId;
@property (strong) NSString* friendId;
@end

@implementation DelFriendReq

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasFriendId {
  return !!hasFriendId_;
}
- (void) setHasFriendId:(BOOL) _value_ {
  hasFriendId_ = !!_value_;
}
@synthesize friendId;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = @"";
    self.friendId = @"";
  }
  return self;
}
static DelFriendReq* defaultDelFriendReqInstance = nil;
+ (void) initialize {
  if (self == [DelFriendReq class]) {
    defaultDelFriendReqInstance = [[DelFriendReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultDelFriendReqInstance;
}
- (instancetype) defaultInstance {
  return defaultDelFriendReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasFriendId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeString:1 value:self.userId];
  }
  if (self.hasFriendId) {
    [output writeString:2 value:self.friendId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeStringSize(1, self.userId);
  }
  if (self.hasFriendId) {
    size_ += computeStringSize(2, self.friendId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (DelFriendReq*) parseFromData:(NSData*) data {
  return (DelFriendReq*)[[[DelFriendReq builder] mergeFromData:data] build];
}
+ (DelFriendReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DelFriendReq*)[[[DelFriendReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DelFriendReq*) parseFromInputStream:(NSInputStream*) input {
  return (DelFriendReq*)[[[DelFriendReq builder] mergeFromInputStream:input] build];
}
+ (DelFriendReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DelFriendReq*)[[[DelFriendReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DelFriendReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DelFriendReq*)[[[DelFriendReq builder] mergeFromCodedInputStream:input] build];
}
+ (DelFriendReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DelFriendReq*)[[[DelFriendReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DelFriendReqBuilder*) builder {
  return [[DelFriendReqBuilder alloc] init];
}
+ (DelFriendReqBuilder*) builderWithPrototype:(DelFriendReq*) prototype {
  return [[DelFriendReq builder] mergeFrom:prototype];
}
- (DelFriendReqBuilder*) builder {
  return [DelFriendReq builder];
}
- (DelFriendReqBuilder*) toBuilder {
  return [DelFriendReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  if (self.hasFriendId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"friendId", self.friendId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: self.userId forKey: @"userId"];
  }
  if (self.hasFriendId) {
    [dictionary setObject: self.friendId forKey: @"friendId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[DelFriendReq class]]) {
    return NO;
  }
  DelFriendReq *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || [self.userId isEqual:otherMessage.userId]) &&
      self.hasFriendId == otherMessage.hasFriendId &&
      (!self.hasFriendId || [self.friendId isEqual:otherMessage.friendId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [self.userId hash];
  }
  if (self.hasFriendId) {
    hashCode = hashCode * 31 + [self.friendId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface DelFriendReqBuilder()
@property (strong) DelFriendReq* resultDelFriendReq;
@end

@implementation DelFriendReqBuilder
@synthesize resultDelFriendReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDelFriendReq = [[DelFriendReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDelFriendReq;
}
- (DelFriendReqBuilder*) clear {
  self.resultDelFriendReq = [[DelFriendReq alloc] init];
  return self;
}
- (DelFriendReqBuilder*) clone {
  return [DelFriendReq builderWithPrototype:resultDelFriendReq];
}
- (DelFriendReq*) defaultInstance {
  return [DelFriendReq defaultInstance];
}
- (DelFriendReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DelFriendReq*) buildPartial {
  DelFriendReq* returnMe = resultDelFriendReq;
  self.resultDelFriendReq = nil;
  return returnMe;
}
- (DelFriendReqBuilder*) mergeFrom:(DelFriendReq*) other {
  if (other == [DelFriendReq defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasFriendId) {
    [self setFriendId:other.friendId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DelFriendReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DelFriendReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserId:[input readString]];
        break;
      }
      case 18: {
        [self setFriendId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultDelFriendReq.hasUserId;
}
- (NSString*) userId {
  return resultDelFriendReq.userId;
}
- (DelFriendReqBuilder*) setUserId:(NSString*) value {
  resultDelFriendReq.hasUserId = YES;
  resultDelFriendReq.userId = value;
  return self;
}
- (DelFriendReqBuilder*) clearUserId {
  resultDelFriendReq.hasUserId = NO;
  resultDelFriendReq.userId = @"";
  return self;
}
- (BOOL) hasFriendId {
  return resultDelFriendReq.hasFriendId;
}
- (NSString*) friendId {
  return resultDelFriendReq.friendId;
}
- (DelFriendReqBuilder*) setFriendId:(NSString*) value {
  resultDelFriendReq.hasFriendId = YES;
  resultDelFriendReq.friendId = value;
  return self;
}
- (DelFriendReqBuilder*) clearFriendId {
  resultDelFriendReq.hasFriendId = NO;
  resultDelFriendReq.friendId = @"";
  return self;
}
@end

@interface DelFriendRsp ()
@property (strong) NSString* userId;
@property (strong) NSString* friendId;
@property ResultCode resultCode;
@end

@implementation DelFriendRsp

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasFriendId {
  return !!hasFriendId_;
}
- (void) setHasFriendId:(BOOL) _value_ {
  hasFriendId_ = !!_value_;
}
@synthesize friendId;
- (BOOL) hasResultCode {
  return !!hasResultCode_;
}
- (void) setHasResultCode:(BOOL) _value_ {
  hasResultCode_ = !!_value_;
}
@synthesize resultCode;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = @"";
    self.friendId = @"";
    self.resultCode = ResultCodeNoError;
  }
  return self;
}
static DelFriendRsp* defaultDelFriendRspInstance = nil;
+ (void) initialize {
  if (self == [DelFriendRsp class]) {
    defaultDelFriendRspInstance = [[DelFriendRsp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultDelFriendRspInstance;
}
- (instancetype) defaultInstance {
  return defaultDelFriendRspInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasFriendId) {
    return NO;
  }
  if (!self.hasResultCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeString:1 value:self.userId];
  }
  if (self.hasFriendId) {
    [output writeString:2 value:self.friendId];
  }
  if (self.hasResultCode) {
    [output writeEnum:3 value:self.resultCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeStringSize(1, self.userId);
  }
  if (self.hasFriendId) {
    size_ += computeStringSize(2, self.friendId);
  }
  if (self.hasResultCode) {
    size_ += computeEnumSize(3, self.resultCode);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (DelFriendRsp*) parseFromData:(NSData*) data {
  return (DelFriendRsp*)[[[DelFriendRsp builder] mergeFromData:data] build];
}
+ (DelFriendRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DelFriendRsp*)[[[DelFriendRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DelFriendRsp*) parseFromInputStream:(NSInputStream*) input {
  return (DelFriendRsp*)[[[DelFriendRsp builder] mergeFromInputStream:input] build];
}
+ (DelFriendRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DelFriendRsp*)[[[DelFriendRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DelFriendRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DelFriendRsp*)[[[DelFriendRsp builder] mergeFromCodedInputStream:input] build];
}
+ (DelFriendRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DelFriendRsp*)[[[DelFriendRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DelFriendRspBuilder*) builder {
  return [[DelFriendRspBuilder alloc] init];
}
+ (DelFriendRspBuilder*) builderWithPrototype:(DelFriendRsp*) prototype {
  return [[DelFriendRsp builder] mergeFrom:prototype];
}
- (DelFriendRspBuilder*) builder {
  return [DelFriendRsp builder];
}
- (DelFriendRspBuilder*) toBuilder {
  return [DelFriendRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  if (self.hasFriendId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"friendId", self.friendId];
  }
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", NSStringFromResultCode(self.resultCode)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: self.userId forKey: @"userId"];
  }
  if (self.hasFriendId) {
    [dictionary setObject: self.friendId forKey: @"friendId"];
  }
  if (self.hasResultCode) {
    [dictionary setObject: @(self.resultCode) forKey: @"resultCode"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[DelFriendRsp class]]) {
    return NO;
  }
  DelFriendRsp *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || [self.userId isEqual:otherMessage.userId]) &&
      self.hasFriendId == otherMessage.hasFriendId &&
      (!self.hasFriendId || [self.friendId isEqual:otherMessage.friendId]) &&
      self.hasResultCode == otherMessage.hasResultCode &&
      (!self.hasResultCode || self.resultCode == otherMessage.resultCode) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [self.userId hash];
  }
  if (self.hasFriendId) {
    hashCode = hashCode * 31 + [self.friendId hash];
  }
  if (self.hasResultCode) {
    hashCode = hashCode * 31 + self.resultCode;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface DelFriendRspBuilder()
@property (strong) DelFriendRsp* resultDelFriendRsp;
@end

@implementation DelFriendRspBuilder
@synthesize resultDelFriendRsp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDelFriendRsp = [[DelFriendRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDelFriendRsp;
}
- (DelFriendRspBuilder*) clear {
  self.resultDelFriendRsp = [[DelFriendRsp alloc] init];
  return self;
}
- (DelFriendRspBuilder*) clone {
  return [DelFriendRsp builderWithPrototype:resultDelFriendRsp];
}
- (DelFriendRsp*) defaultInstance {
  return [DelFriendRsp defaultInstance];
}
- (DelFriendRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DelFriendRsp*) buildPartial {
  DelFriendRsp* returnMe = resultDelFriendRsp;
  self.resultDelFriendRsp = nil;
  return returnMe;
}
- (DelFriendRspBuilder*) mergeFrom:(DelFriendRsp*) other {
  if (other == [DelFriendRsp defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasFriendId) {
    [self setFriendId:other.friendId];
  }
  if (other.hasResultCode) {
    [self setResultCode:other.resultCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DelFriendRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DelFriendRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserId:[input readString]];
        break;
      }
      case 18: {
        [self setFriendId:[input readString]];
        break;
      }
      case 24: {
        ResultCode value = (ResultCode)[input readEnum];
        if (ResultCodeIsValidValue(value)) {
          [self setResultCode:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultDelFriendRsp.hasUserId;
}
- (NSString*) userId {
  return resultDelFriendRsp.userId;
}
- (DelFriendRspBuilder*) setUserId:(NSString*) value {
  resultDelFriendRsp.hasUserId = YES;
  resultDelFriendRsp.userId = value;
  return self;
}
- (DelFriendRspBuilder*) clearUserId {
  resultDelFriendRsp.hasUserId = NO;
  resultDelFriendRsp.userId = @"";
  return self;
}
- (BOOL) hasFriendId {
  return resultDelFriendRsp.hasFriendId;
}
- (NSString*) friendId {
  return resultDelFriendRsp.friendId;
}
- (DelFriendRspBuilder*) setFriendId:(NSString*) value {
  resultDelFriendRsp.hasFriendId = YES;
  resultDelFriendRsp.friendId = value;
  return self;
}
- (DelFriendRspBuilder*) clearFriendId {
  resultDelFriendRsp.hasFriendId = NO;
  resultDelFriendRsp.friendId = @"";
  return self;
}
- (BOOL) hasResultCode {
  return resultDelFriendRsp.hasResultCode;
}
- (ResultCode) resultCode {
  return resultDelFriendRsp.resultCode;
}
- (DelFriendRspBuilder*) setResultCode:(ResultCode) value {
  resultDelFriendRsp.hasResultCode = YES;
  resultDelFriendRsp.resultCode = value;
  return self;
}
- (DelFriendRspBuilder*) clearResultCode {
  resultDelFriendRsp.hasResultCode = NO;
  resultDelFriendRsp.resultCode = ResultCodeNoError;
  return self;
}
@end

@interface ModifyFriendReq ()
@property (strong) NSString* userId;
@property (strong) NSString* friendId;
@property (strong) NSString* friendRemark;
@end

@implementation ModifyFriendReq

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasFriendId {
  return !!hasFriendId_;
}
- (void) setHasFriendId:(BOOL) _value_ {
  hasFriendId_ = !!_value_;
}
@synthesize friendId;
- (BOOL) hasFriendRemark {
  return !!hasFriendRemark_;
}
- (void) setHasFriendRemark:(BOOL) _value_ {
  hasFriendRemark_ = !!_value_;
}
@synthesize friendRemark;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = @"";
    self.friendId = @"";
    self.friendRemark = @"";
  }
  return self;
}
static ModifyFriendReq* defaultModifyFriendReqInstance = nil;
+ (void) initialize {
  if (self == [ModifyFriendReq class]) {
    defaultModifyFriendReqInstance = [[ModifyFriendReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultModifyFriendReqInstance;
}
- (instancetype) defaultInstance {
  return defaultModifyFriendReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasFriendId) {
    return NO;
  }
  if (!self.hasFriendRemark) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeString:1 value:self.userId];
  }
  if (self.hasFriendId) {
    [output writeString:2 value:self.friendId];
  }
  if (self.hasFriendRemark) {
    [output writeString:3 value:self.friendRemark];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeStringSize(1, self.userId);
  }
  if (self.hasFriendId) {
    size_ += computeStringSize(2, self.friendId);
  }
  if (self.hasFriendRemark) {
    size_ += computeStringSize(3, self.friendRemark);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ModifyFriendReq*) parseFromData:(NSData*) data {
  return (ModifyFriendReq*)[[[ModifyFriendReq builder] mergeFromData:data] build];
}
+ (ModifyFriendReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ModifyFriendReq*)[[[ModifyFriendReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ModifyFriendReq*) parseFromInputStream:(NSInputStream*) input {
  return (ModifyFriendReq*)[[[ModifyFriendReq builder] mergeFromInputStream:input] build];
}
+ (ModifyFriendReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ModifyFriendReq*)[[[ModifyFriendReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ModifyFriendReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ModifyFriendReq*)[[[ModifyFriendReq builder] mergeFromCodedInputStream:input] build];
}
+ (ModifyFriendReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ModifyFriendReq*)[[[ModifyFriendReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ModifyFriendReqBuilder*) builder {
  return [[ModifyFriendReqBuilder alloc] init];
}
+ (ModifyFriendReqBuilder*) builderWithPrototype:(ModifyFriendReq*) prototype {
  return [[ModifyFriendReq builder] mergeFrom:prototype];
}
- (ModifyFriendReqBuilder*) builder {
  return [ModifyFriendReq builder];
}
- (ModifyFriendReqBuilder*) toBuilder {
  return [ModifyFriendReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  if (self.hasFriendId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"friendId", self.friendId];
  }
  if (self.hasFriendRemark) {
    [output appendFormat:@"%@%@: %@\n", indent, @"friendRemark", self.friendRemark];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: self.userId forKey: @"userId"];
  }
  if (self.hasFriendId) {
    [dictionary setObject: self.friendId forKey: @"friendId"];
  }
  if (self.hasFriendRemark) {
    [dictionary setObject: self.friendRemark forKey: @"friendRemark"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ModifyFriendReq class]]) {
    return NO;
  }
  ModifyFriendReq *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || [self.userId isEqual:otherMessage.userId]) &&
      self.hasFriendId == otherMessage.hasFriendId &&
      (!self.hasFriendId || [self.friendId isEqual:otherMessage.friendId]) &&
      self.hasFriendRemark == otherMessage.hasFriendRemark &&
      (!self.hasFriendRemark || [self.friendRemark isEqual:otherMessage.friendRemark]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [self.userId hash];
  }
  if (self.hasFriendId) {
    hashCode = hashCode * 31 + [self.friendId hash];
  }
  if (self.hasFriendRemark) {
    hashCode = hashCode * 31 + [self.friendRemark hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ModifyFriendReqBuilder()
@property (strong) ModifyFriendReq* resultModifyFriendReq;
@end

@implementation ModifyFriendReqBuilder
@synthesize resultModifyFriendReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultModifyFriendReq = [[ModifyFriendReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultModifyFriendReq;
}
- (ModifyFriendReqBuilder*) clear {
  self.resultModifyFriendReq = [[ModifyFriendReq alloc] init];
  return self;
}
- (ModifyFriendReqBuilder*) clone {
  return [ModifyFriendReq builderWithPrototype:resultModifyFriendReq];
}
- (ModifyFriendReq*) defaultInstance {
  return [ModifyFriendReq defaultInstance];
}
- (ModifyFriendReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ModifyFriendReq*) buildPartial {
  ModifyFriendReq* returnMe = resultModifyFriendReq;
  self.resultModifyFriendReq = nil;
  return returnMe;
}
- (ModifyFriendReqBuilder*) mergeFrom:(ModifyFriendReq*) other {
  if (other == [ModifyFriendReq defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasFriendId) {
    [self setFriendId:other.friendId];
  }
  if (other.hasFriendRemark) {
    [self setFriendRemark:other.friendRemark];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ModifyFriendReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ModifyFriendReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserId:[input readString]];
        break;
      }
      case 18: {
        [self setFriendId:[input readString]];
        break;
      }
      case 26: {
        [self setFriendRemark:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultModifyFriendReq.hasUserId;
}
- (NSString*) userId {
  return resultModifyFriendReq.userId;
}
- (ModifyFriendReqBuilder*) setUserId:(NSString*) value {
  resultModifyFriendReq.hasUserId = YES;
  resultModifyFriendReq.userId = value;
  return self;
}
- (ModifyFriendReqBuilder*) clearUserId {
  resultModifyFriendReq.hasUserId = NO;
  resultModifyFriendReq.userId = @"";
  return self;
}
- (BOOL) hasFriendId {
  return resultModifyFriendReq.hasFriendId;
}
- (NSString*) friendId {
  return resultModifyFriendReq.friendId;
}
- (ModifyFriendReqBuilder*) setFriendId:(NSString*) value {
  resultModifyFriendReq.hasFriendId = YES;
  resultModifyFriendReq.friendId = value;
  return self;
}
- (ModifyFriendReqBuilder*) clearFriendId {
  resultModifyFriendReq.hasFriendId = NO;
  resultModifyFriendReq.friendId = @"";
  return self;
}
- (BOOL) hasFriendRemark {
  return resultModifyFriendReq.hasFriendRemark;
}
- (NSString*) friendRemark {
  return resultModifyFriendReq.friendRemark;
}
- (ModifyFriendReqBuilder*) setFriendRemark:(NSString*) value {
  resultModifyFriendReq.hasFriendRemark = YES;
  resultModifyFriendReq.friendRemark = value;
  return self;
}
- (ModifyFriendReqBuilder*) clearFriendRemark {
  resultModifyFriendReq.hasFriendRemark = NO;
  resultModifyFriendReq.friendRemark = @"";
  return self;
}
@end

@interface ModifyFriendRsp ()
@property (strong) NSString* userId;
@property (strong) NSString* friendId;
@property ResultCode resultCode;
@end

@implementation ModifyFriendRsp

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasFriendId {
  return !!hasFriendId_;
}
- (void) setHasFriendId:(BOOL) _value_ {
  hasFriendId_ = !!_value_;
}
@synthesize friendId;
- (BOOL) hasResultCode {
  return !!hasResultCode_;
}
- (void) setHasResultCode:(BOOL) _value_ {
  hasResultCode_ = !!_value_;
}
@synthesize resultCode;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = @"";
    self.friendId = @"";
    self.resultCode = ResultCodeNoError;
  }
  return self;
}
static ModifyFriendRsp* defaultModifyFriendRspInstance = nil;
+ (void) initialize {
  if (self == [ModifyFriendRsp class]) {
    defaultModifyFriendRspInstance = [[ModifyFriendRsp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultModifyFriendRspInstance;
}
- (instancetype) defaultInstance {
  return defaultModifyFriendRspInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasFriendId) {
    return NO;
  }
  if (!self.hasResultCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeString:1 value:self.userId];
  }
  if (self.hasFriendId) {
    [output writeString:2 value:self.friendId];
  }
  if (self.hasResultCode) {
    [output writeEnum:3 value:self.resultCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeStringSize(1, self.userId);
  }
  if (self.hasFriendId) {
    size_ += computeStringSize(2, self.friendId);
  }
  if (self.hasResultCode) {
    size_ += computeEnumSize(3, self.resultCode);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ModifyFriendRsp*) parseFromData:(NSData*) data {
  return (ModifyFriendRsp*)[[[ModifyFriendRsp builder] mergeFromData:data] build];
}
+ (ModifyFriendRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ModifyFriendRsp*)[[[ModifyFriendRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ModifyFriendRsp*) parseFromInputStream:(NSInputStream*) input {
  return (ModifyFriendRsp*)[[[ModifyFriendRsp builder] mergeFromInputStream:input] build];
}
+ (ModifyFriendRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ModifyFriendRsp*)[[[ModifyFriendRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ModifyFriendRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ModifyFriendRsp*)[[[ModifyFriendRsp builder] mergeFromCodedInputStream:input] build];
}
+ (ModifyFriendRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ModifyFriendRsp*)[[[ModifyFriendRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ModifyFriendRspBuilder*) builder {
  return [[ModifyFriendRspBuilder alloc] init];
}
+ (ModifyFriendRspBuilder*) builderWithPrototype:(ModifyFriendRsp*) prototype {
  return [[ModifyFriendRsp builder] mergeFrom:prototype];
}
- (ModifyFriendRspBuilder*) builder {
  return [ModifyFriendRsp builder];
}
- (ModifyFriendRspBuilder*) toBuilder {
  return [ModifyFriendRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  if (self.hasFriendId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"friendId", self.friendId];
  }
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", NSStringFromResultCode(self.resultCode)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: self.userId forKey: @"userId"];
  }
  if (self.hasFriendId) {
    [dictionary setObject: self.friendId forKey: @"friendId"];
  }
  if (self.hasResultCode) {
    [dictionary setObject: @(self.resultCode) forKey: @"resultCode"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ModifyFriendRsp class]]) {
    return NO;
  }
  ModifyFriendRsp *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || [self.userId isEqual:otherMessage.userId]) &&
      self.hasFriendId == otherMessage.hasFriendId &&
      (!self.hasFriendId || [self.friendId isEqual:otherMessage.friendId]) &&
      self.hasResultCode == otherMessage.hasResultCode &&
      (!self.hasResultCode || self.resultCode == otherMessage.resultCode) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [self.userId hash];
  }
  if (self.hasFriendId) {
    hashCode = hashCode * 31 + [self.friendId hash];
  }
  if (self.hasResultCode) {
    hashCode = hashCode * 31 + self.resultCode;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ModifyFriendRspBuilder()
@property (strong) ModifyFriendRsp* resultModifyFriendRsp;
@end

@implementation ModifyFriendRspBuilder
@synthesize resultModifyFriendRsp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultModifyFriendRsp = [[ModifyFriendRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultModifyFriendRsp;
}
- (ModifyFriendRspBuilder*) clear {
  self.resultModifyFriendRsp = [[ModifyFriendRsp alloc] init];
  return self;
}
- (ModifyFriendRspBuilder*) clone {
  return [ModifyFriendRsp builderWithPrototype:resultModifyFriendRsp];
}
- (ModifyFriendRsp*) defaultInstance {
  return [ModifyFriendRsp defaultInstance];
}
- (ModifyFriendRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ModifyFriendRsp*) buildPartial {
  ModifyFriendRsp* returnMe = resultModifyFriendRsp;
  self.resultModifyFriendRsp = nil;
  return returnMe;
}
- (ModifyFriendRspBuilder*) mergeFrom:(ModifyFriendRsp*) other {
  if (other == [ModifyFriendRsp defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasFriendId) {
    [self setFriendId:other.friendId];
  }
  if (other.hasResultCode) {
    [self setResultCode:other.resultCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ModifyFriendRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ModifyFriendRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserId:[input readString]];
        break;
      }
      case 18: {
        [self setFriendId:[input readString]];
        break;
      }
      case 24: {
        ResultCode value = (ResultCode)[input readEnum];
        if (ResultCodeIsValidValue(value)) {
          [self setResultCode:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultModifyFriendRsp.hasUserId;
}
- (NSString*) userId {
  return resultModifyFriendRsp.userId;
}
- (ModifyFriendRspBuilder*) setUserId:(NSString*) value {
  resultModifyFriendRsp.hasUserId = YES;
  resultModifyFriendRsp.userId = value;
  return self;
}
- (ModifyFriendRspBuilder*) clearUserId {
  resultModifyFriendRsp.hasUserId = NO;
  resultModifyFriendRsp.userId = @"";
  return self;
}
- (BOOL) hasFriendId {
  return resultModifyFriendRsp.hasFriendId;
}
- (NSString*) friendId {
  return resultModifyFriendRsp.friendId;
}
- (ModifyFriendRspBuilder*) setFriendId:(NSString*) value {
  resultModifyFriendRsp.hasFriendId = YES;
  resultModifyFriendRsp.friendId = value;
  return self;
}
- (ModifyFriendRspBuilder*) clearFriendId {
  resultModifyFriendRsp.hasFriendId = NO;
  resultModifyFriendRsp.friendId = @"";
  return self;
}
- (BOOL) hasResultCode {
  return resultModifyFriendRsp.hasResultCode;
}
- (ResultCode) resultCode {
  return resultModifyFriendRsp.resultCode;
}
- (ModifyFriendRspBuilder*) setResultCode:(ResultCode) value {
  resultModifyFriendRsp.hasResultCode = YES;
  resultModifyFriendRsp.resultCode = value;
  return self;
}
- (ModifyFriendRspBuilder*) clearResultCode {
  resultModifyFriendRsp.hasResultCode = NO;
  resultModifyFriendRsp.resultCode = ResultCodeNoError;
  return self;
}
@end

@interface ShieldFriendReq ()
@property (strong) NSString* userId;
@property (strong) NSString* friendId;
@end

@implementation ShieldFriendReq

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasFriendId {
  return !!hasFriendId_;
}
- (void) setHasFriendId:(BOOL) _value_ {
  hasFriendId_ = !!_value_;
}
@synthesize friendId;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = @"";
    self.friendId = @"";
  }
  return self;
}
static ShieldFriendReq* defaultShieldFriendReqInstance = nil;
+ (void) initialize {
  if (self == [ShieldFriendReq class]) {
    defaultShieldFriendReqInstance = [[ShieldFriendReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultShieldFriendReqInstance;
}
- (instancetype) defaultInstance {
  return defaultShieldFriendReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasFriendId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeString:1 value:self.userId];
  }
  if (self.hasFriendId) {
    [output writeString:2 value:self.friendId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeStringSize(1, self.userId);
  }
  if (self.hasFriendId) {
    size_ += computeStringSize(2, self.friendId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ShieldFriendReq*) parseFromData:(NSData*) data {
  return (ShieldFriendReq*)[[[ShieldFriendReq builder] mergeFromData:data] build];
}
+ (ShieldFriendReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShieldFriendReq*)[[[ShieldFriendReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ShieldFriendReq*) parseFromInputStream:(NSInputStream*) input {
  return (ShieldFriendReq*)[[[ShieldFriendReq builder] mergeFromInputStream:input] build];
}
+ (ShieldFriendReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShieldFriendReq*)[[[ShieldFriendReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ShieldFriendReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ShieldFriendReq*)[[[ShieldFriendReq builder] mergeFromCodedInputStream:input] build];
}
+ (ShieldFriendReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShieldFriendReq*)[[[ShieldFriendReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ShieldFriendReqBuilder*) builder {
  return [[ShieldFriendReqBuilder alloc] init];
}
+ (ShieldFriendReqBuilder*) builderWithPrototype:(ShieldFriendReq*) prototype {
  return [[ShieldFriendReq builder] mergeFrom:prototype];
}
- (ShieldFriendReqBuilder*) builder {
  return [ShieldFriendReq builder];
}
- (ShieldFriendReqBuilder*) toBuilder {
  return [ShieldFriendReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  if (self.hasFriendId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"friendId", self.friendId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: self.userId forKey: @"userId"];
  }
  if (self.hasFriendId) {
    [dictionary setObject: self.friendId forKey: @"friendId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ShieldFriendReq class]]) {
    return NO;
  }
  ShieldFriendReq *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || [self.userId isEqual:otherMessage.userId]) &&
      self.hasFriendId == otherMessage.hasFriendId &&
      (!self.hasFriendId || [self.friendId isEqual:otherMessage.friendId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [self.userId hash];
  }
  if (self.hasFriendId) {
    hashCode = hashCode * 31 + [self.friendId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ShieldFriendReqBuilder()
@property (strong) ShieldFriendReq* resultShieldFriendReq;
@end

@implementation ShieldFriendReqBuilder
@synthesize resultShieldFriendReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultShieldFriendReq = [[ShieldFriendReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultShieldFriendReq;
}
- (ShieldFriendReqBuilder*) clear {
  self.resultShieldFriendReq = [[ShieldFriendReq alloc] init];
  return self;
}
- (ShieldFriendReqBuilder*) clone {
  return [ShieldFriendReq builderWithPrototype:resultShieldFriendReq];
}
- (ShieldFriendReq*) defaultInstance {
  return [ShieldFriendReq defaultInstance];
}
- (ShieldFriendReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ShieldFriendReq*) buildPartial {
  ShieldFriendReq* returnMe = resultShieldFriendReq;
  self.resultShieldFriendReq = nil;
  return returnMe;
}
- (ShieldFriendReqBuilder*) mergeFrom:(ShieldFriendReq*) other {
  if (other == [ShieldFriendReq defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasFriendId) {
    [self setFriendId:other.friendId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ShieldFriendReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ShieldFriendReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserId:[input readString]];
        break;
      }
      case 18: {
        [self setFriendId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultShieldFriendReq.hasUserId;
}
- (NSString*) userId {
  return resultShieldFriendReq.userId;
}
- (ShieldFriendReqBuilder*) setUserId:(NSString*) value {
  resultShieldFriendReq.hasUserId = YES;
  resultShieldFriendReq.userId = value;
  return self;
}
- (ShieldFriendReqBuilder*) clearUserId {
  resultShieldFriendReq.hasUserId = NO;
  resultShieldFriendReq.userId = @"";
  return self;
}
- (BOOL) hasFriendId {
  return resultShieldFriendReq.hasFriendId;
}
- (NSString*) friendId {
  return resultShieldFriendReq.friendId;
}
- (ShieldFriendReqBuilder*) setFriendId:(NSString*) value {
  resultShieldFriendReq.hasFriendId = YES;
  resultShieldFriendReq.friendId = value;
  return self;
}
- (ShieldFriendReqBuilder*) clearFriendId {
  resultShieldFriendReq.hasFriendId = NO;
  resultShieldFriendReq.friendId = @"";
  return self;
}
@end

@interface ShieldFriendRsp ()
@property (strong) NSString* userId;
@property (strong) NSString* friendId;
@property ResultCode resultCode;
@end

@implementation ShieldFriendRsp

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasFriendId {
  return !!hasFriendId_;
}
- (void) setHasFriendId:(BOOL) _value_ {
  hasFriendId_ = !!_value_;
}
@synthesize friendId;
- (BOOL) hasResultCode {
  return !!hasResultCode_;
}
- (void) setHasResultCode:(BOOL) _value_ {
  hasResultCode_ = !!_value_;
}
@synthesize resultCode;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = @"";
    self.friendId = @"";
    self.resultCode = ResultCodeNoError;
  }
  return self;
}
static ShieldFriendRsp* defaultShieldFriendRspInstance = nil;
+ (void) initialize {
  if (self == [ShieldFriendRsp class]) {
    defaultShieldFriendRspInstance = [[ShieldFriendRsp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultShieldFriendRspInstance;
}
- (instancetype) defaultInstance {
  return defaultShieldFriendRspInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasFriendId) {
    return NO;
  }
  if (!self.hasResultCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeString:1 value:self.userId];
  }
  if (self.hasFriendId) {
    [output writeString:2 value:self.friendId];
  }
  if (self.hasResultCode) {
    [output writeEnum:3 value:self.resultCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeStringSize(1, self.userId);
  }
  if (self.hasFriendId) {
    size_ += computeStringSize(2, self.friendId);
  }
  if (self.hasResultCode) {
    size_ += computeEnumSize(3, self.resultCode);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (ShieldFriendRsp*) parseFromData:(NSData*) data {
  return (ShieldFriendRsp*)[[[ShieldFriendRsp builder] mergeFromData:data] build];
}
+ (ShieldFriendRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShieldFriendRsp*)[[[ShieldFriendRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ShieldFriendRsp*) parseFromInputStream:(NSInputStream*) input {
  return (ShieldFriendRsp*)[[[ShieldFriendRsp builder] mergeFromInputStream:input] build];
}
+ (ShieldFriendRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShieldFriendRsp*)[[[ShieldFriendRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ShieldFriendRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ShieldFriendRsp*)[[[ShieldFriendRsp builder] mergeFromCodedInputStream:input] build];
}
+ (ShieldFriendRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ShieldFriendRsp*)[[[ShieldFriendRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ShieldFriendRspBuilder*) builder {
  return [[ShieldFriendRspBuilder alloc] init];
}
+ (ShieldFriendRspBuilder*) builderWithPrototype:(ShieldFriendRsp*) prototype {
  return [[ShieldFriendRsp builder] mergeFrom:prototype];
}
- (ShieldFriendRspBuilder*) builder {
  return [ShieldFriendRsp builder];
}
- (ShieldFriendRspBuilder*) toBuilder {
  return [ShieldFriendRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", self.userId];
  }
  if (self.hasFriendId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"friendId", self.friendId];
  }
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", NSStringFromResultCode(self.resultCode)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: self.userId forKey: @"userId"];
  }
  if (self.hasFriendId) {
    [dictionary setObject: self.friendId forKey: @"friendId"];
  }
  if (self.hasResultCode) {
    [dictionary setObject: @(self.resultCode) forKey: @"resultCode"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[ShieldFriendRsp class]]) {
    return NO;
  }
  ShieldFriendRsp *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || [self.userId isEqual:otherMessage.userId]) &&
      self.hasFriendId == otherMessage.hasFriendId &&
      (!self.hasFriendId || [self.friendId isEqual:otherMessage.friendId]) &&
      self.hasResultCode == otherMessage.hasResultCode &&
      (!self.hasResultCode || self.resultCode == otherMessage.resultCode) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [self.userId hash];
  }
  if (self.hasFriendId) {
    hashCode = hashCode * 31 + [self.friendId hash];
  }
  if (self.hasResultCode) {
    hashCode = hashCode * 31 + self.resultCode;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface ShieldFriendRspBuilder()
@property (strong) ShieldFriendRsp* resultShieldFriendRsp;
@end

@implementation ShieldFriendRspBuilder
@synthesize resultShieldFriendRsp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultShieldFriendRsp = [[ShieldFriendRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultShieldFriendRsp;
}
- (ShieldFriendRspBuilder*) clear {
  self.resultShieldFriendRsp = [[ShieldFriendRsp alloc] init];
  return self;
}
- (ShieldFriendRspBuilder*) clone {
  return [ShieldFriendRsp builderWithPrototype:resultShieldFriendRsp];
}
- (ShieldFriendRsp*) defaultInstance {
  return [ShieldFriendRsp defaultInstance];
}
- (ShieldFriendRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ShieldFriendRsp*) buildPartial {
  ShieldFriendRsp* returnMe = resultShieldFriendRsp;
  self.resultShieldFriendRsp = nil;
  return returnMe;
}
- (ShieldFriendRspBuilder*) mergeFrom:(ShieldFriendRsp*) other {
  if (other == [ShieldFriendRsp defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasFriendId) {
    [self setFriendId:other.friendId];
  }
  if (other.hasResultCode) {
    [self setResultCode:other.resultCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ShieldFriendRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ShieldFriendRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUserId:[input readString]];
        break;
      }
      case 18: {
        [self setFriendId:[input readString]];
        break;
      }
      case 24: {
        ResultCode value = (ResultCode)[input readEnum];
        if (ResultCodeIsValidValue(value)) {
          [self setResultCode:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultShieldFriendRsp.hasUserId;
}
- (NSString*) userId {
  return resultShieldFriendRsp.userId;
}
- (ShieldFriendRspBuilder*) setUserId:(NSString*) value {
  resultShieldFriendRsp.hasUserId = YES;
  resultShieldFriendRsp.userId = value;
  return self;
}
- (ShieldFriendRspBuilder*) clearUserId {
  resultShieldFriendRsp.hasUserId = NO;
  resultShieldFriendRsp.userId = @"";
  return self;
}
- (BOOL) hasFriendId {
  return resultShieldFriendRsp.hasFriendId;
}
- (NSString*) friendId {
  return resultShieldFriendRsp.friendId;
}
- (ShieldFriendRspBuilder*) setFriendId:(NSString*) value {
  resultShieldFriendRsp.hasFriendId = YES;
  resultShieldFriendRsp.friendId = value;
  return self;
}
- (ShieldFriendRspBuilder*) clearFriendId {
  resultShieldFriendRsp.hasFriendId = NO;
  resultShieldFriendRsp.friendId = @"";
  return self;
}
- (BOOL) hasResultCode {
  return resultShieldFriendRsp.hasResultCode;
}
- (ResultCode) resultCode {
  return resultShieldFriendRsp.resultCode;
}
- (ShieldFriendRspBuilder*) setResultCode:(ResultCode) value {
  resultShieldFriendRsp.hasResultCode = YES;
  resultShieldFriendRsp.resultCode = value;
  return self;
}
- (ShieldFriendRspBuilder*) clearResultCode {
  resultShieldFriendRsp.hasResultCode = NO;
  resultShieldFriendRsp.resultCode = ResultCodeNoError;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
